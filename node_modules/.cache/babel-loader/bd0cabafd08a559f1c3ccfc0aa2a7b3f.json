{"ast":null,"code":"import \"antd/es/layout/style\";\nimport _Layout from \"antd/es/layout\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react-project\\\\src\\\\containers\\\\Admin\\\\index.jsx\",\n    _dec,\n    _class,\n    _temp;\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { reqCategoryList } from '../../api/index';\nimport { createDeleteUserInfoAction } from '../../redux/actions_creators/login_action';\nimport './css/admin.less';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Footer,\n  Sider,\n  Content\n} = _Layout;\nlet Admin = (_dec = connect(state => ({\n  userInfo: state.userInfo\n}), {\n  deleteUserInfo: createDeleteUserInfoAction\n}), _dec(_class = (_temp = class Admin extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.logout = () => {\n      //触发redux删除所保存的用户信息\n      this.props.deleteUserInfo();\n    };\n\n    this.demo = async () => {\n      let result = await reqCategoryList();\n      console.log(result);\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n  } //退出登录的回调\n\n\n  //在render里，若想实现跳转，最好用<Redirect>              \n  render() {\n    //从redux中获取user和isLogin\n    const {\n      user,\n      isLogin\n    } = this.props.userInfo;\n\n    if (!isLogin) {\n      console.log('没有登录');\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this);\n    } else {\n      console.log('登录了');\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(_Layout, {\n          className: \"admin\",\n          children: [/*#__PURE__*/_jsxDEV(Sider, {\n            className: \"sider\",\n            children: \"Sider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Layout, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Content, {\n              className: \"content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {\n              children: \"Footer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    }\n  }\n\n}, _temp)) || _class); //如下代码中的所有key是控制容器组件传递给UI组件的key\n//如下代码中的所有value是控制容器组件传递给UI组件的value\n\nexport default Admin;\n/* export default connect(\r\n    state => ({userInfo:state.userInfo}),\r\n  {\r\n    deleteUserInfo:createDeleteUserInfoAction\r\n  }\r\n  )(Admin) */","map":{"version":3,"sources":["C:/Users/PC/Desktop/react-project/src/containers/Admin/index.jsx"],"names":["React","Component","connect","Redirect","reqCategoryList","createDeleteUserInfoAction","Header","Footer","Sider","Content","Admin","state","userInfo","deleteUserInfo","logout","props","demo","result","console","log","componentDidMount","render","user","isLogin"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,eAAT,QAAgC,iBAAhC;AAEA,SAASC,0BAAT,QAA2C,2CAA3C;AACA,OAAO,kBAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AACA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA;AAAjB,WAAN;IAQMC,K,WANLR,OAAO,CACNS,KAAK,KAAK;AAAEC,EAAAA,QAAQ,EAAED,KAAK,CAACC;AAAlB,CAAL,CADC,EAEN;AACEC,EAAAA,cAAc,EAAER;AADlB,CAFM,C,yBAAR,MAMMK,KANN,SAMoBT,SANpB,CAM8B;AAAA;AAAA;;AAAA,SAO5Ba,MAP4B,GAOnB,MAAM;AACb;AACA,WAAKC,KAAL,CAAWF,cAAX;AACD,KAV2B;;AAAA,SAa5BG,IAb4B,GAarB,YAAY;AACjB,UAAIC,MAAM,GAAG,MAAMb,eAAe,EAAlC;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,KAhB2B;AAAA;;AAE5BG,EAAAA,iBAAiB,GAAG;AAClBF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AACD,GAJ2B,CAM5B;;;AAYA;AACAM,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAoB,KAAKR,KAAL,CAAWH,QAArC;;AACA,QAAI,CAACW,OAAL,EAAc;AAEZL,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAJD,MAIO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,0BACE;AAAA,+BAIE;AAAQ,UAAA,SAAS,EAAC,OAAlB;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,oCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,OAAD;AAAS,cAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,oBAFF,eAKE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF,uBADF;AAoBD;AACF;;AAjD2B,C,sBAoD9B;AACA;;AAEA,eAAeT,KAAf;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { reqCategoryList } from '../../api/index'\r\nimport { Layout } from 'antd'\r\nimport { createDeleteUserInfoAction } from '../../redux/actions_creators/login_action'\r\nimport './css/admin.less'\r\nimport Header from './Header'\r\nconst { Footer, Sider, Content } = Layout;\r\n\r\n@connect(\r\n  state => ({ userInfo: state.userInfo }),\r\n  {\r\n    deleteUserInfo: createDeleteUserInfoAction\r\n  }\r\n)\r\nclass Admin extends Component {\r\n\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n  }\r\n\r\n  //退出登录的回调\r\n  logout = () => {\r\n    //触发redux删除所保存的用户信息\r\n    this.props.deleteUserInfo()\r\n  }\r\n\r\n  //\r\n  demo = async () => {\r\n    let result = await reqCategoryList()\r\n    console.log(result);\r\n  }\r\n\r\n  //在render里，若想实现跳转，最好用<Redirect>              \r\n  render() {\r\n    //从redux中获取user和isLogin\r\n    const { user, isLogin } = this.props.userInfo\r\n    if (!isLogin) {\r\n\r\n      console.log('没有登录');\r\n      return <Redirect to=\"/login\" />\r\n    } else {\r\n      console.log('登录了');\r\n      return (\r\n        <>\r\n          {/*  <div>我是Admin组件，你的名字是:{user.username}</div>\r\n          <button onClick={this.logout}>退出登录</button>\r\n          <button onClick={this.demo}>测试获取商品分类列表</button> */}\r\n          <Layout className=\"admin\">\r\n            <Sider className=\"sider\">Sider</Sider>\r\n            <Layout>\r\n              <Header/>\r\n              <Content className=\"content\">\r\n\r\n              </Content>\r\n              <Footer>Footer</Footer>\r\n            </Layout>\r\n          </Layout>\r\n\r\n\r\n\r\n        </>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\n//如下代码中的所有key是控制容器组件传递给UI组件的key\r\n//如下代码中的所有value是控制容器组件传递给UI组件的value\r\n\r\nexport default Admin\r\n/* export default connect(\r\n    state => ({userInfo:state.userInfo}),\r\n  {\r\n    deleteUserInfo:createDeleteUserInfoAction\r\n  }\r\n  )(Admin) */\r\n"]},"metadata":{},"sourceType":"module"}