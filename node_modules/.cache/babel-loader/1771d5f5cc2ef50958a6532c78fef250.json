{"ast":null,"code":"import \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\n\n/* \r\n  1.项目中所有请求由该文件发出\r\n  2.以后每当发请求之前，都要在该文件里添加一个方法\r\n*/\n// https://restapi.amap.com/v3/weather/weatherInfo?city=${cityCode}&key=36cc4d40112f012a9568e75cd1d8332e\n//引入我们自定义的myAxios\nimport myAxios from './myAxios';\nimport jsonp from 'jsonp';\n//引入请求的基本路径\nimport { BASE_URL, WEATHER_AK, CITY } from '../config'; //发起登录请求\n\nexport const reqLogin = (username, password) => myAxios.post(`${BASE_URL}/login`, {\n  username,\n  password\n}); //获取商品列表\n\nexport const reqCategoryList = () => myAxios.get(`${BASE_URL}/manage/category/list`); //获取天气信息 \n\nexport const reqWeather = cityCode => {\n  return new Promise((resolve, reject) => {\n    const url = `https://restapi.amap.com/v3/weather/weatherInfo?city=${CITY}&key=${WEATHER_AK}`; // 发送jsonp请求\n\n    jsonp(url, {}, (err, data) => {\n      console.log(err, data); // 如果成功了\n\n      if (!err && data.status === '1') {\n        const {\n          weather,\n          city,\n          temperature\n        } = data.lives[0]; // console.log(weather);\n\n        let weatherObj = {\n          weather,\n          city,\n          temperature\n        };\n        resolve(weatherObj);\n      } else {\n        // 如果失败了\n        _message.error('获取天气信息失败...');\n\n        return new Promise(() => {});\n      }\n    });\n  });\n}; // 添加分类\n\nexport const reqAddCategory = ({\n  categoryName\n}) => myAxios.post(`${BASE_URL}/manage/category/add`, {\n  categoryName\n}); //更新分类\n\nexport const reqUpdateCategory = ({\n  categoryId,\n  categoryName\n}) => myAxios.post(`${BASE_URL}/manage/category/update`, {\n  categoryName,\n  categoryId\n}); // 获取商品分页列表\n\nexport const reqProductList = (pageNum, pageSize) => myAxios.get(`${BASE_URL}/manage/product/list`, {\n  params: {\n    pageNum,\n    pageSize\n  }\n}); // 更新商品的状态(上架或下架)\n\nexport const reqUpdateProdStatus = (productId, status) => myAxios.post(`${BASE_URL}/manage/product/updateStatus`, {\n  productId,\n  status\n}); // 搜索商品分页列表 (根据商品名称 / 商品描述)\n// searchType: 搜索的类型, productName/productDesc\n\nexport const reqSearchProduct = (pageNum, pageSize, searchType, keyWord) => {\n  console.log(pageNum, pageSize, searchType, keyWord);\n  return myAxios.get(`${BASE_URL}/manage/product/search`, {\n    params: {\n      pageNum,\n      pageSize,\n      // 将一个变量的值变成属性名 就要加[]\n      [searchType]: keyWord\n    }\n  });\n}; //根据商品id获取商品信息\n// export const reqProdById = (productId)=> myAxios.get(`${BASE_URL}/manage/product/info`,{params:{productId}})\n//根据图片唯一名，删除图片\n\nexport const reqDeletePicture = name => myAxios.post(`${BASE_URL}/manage/img/delete`, {\n  name\n}); //请求添加商品\n// export const reqAddProduct = (product)=> myAxios.post(`${BASE_URL}/manage/product/add`,product)\n\nexport const reqAddProduct = productObj => myAxios.post(`${BASE_URL}/manage/product/add`, { ...productObj\n}); //请求更新商品\n\nexport const reqUpdateProduct = productObj => myAxios.post(`${BASE_URL}/manage/product/update`, { ...productObj\n}); // 获取所有角色的列表\n\nexport const reqRoles = () => myAxios.get(`${BASE_URL}/manage/role/list`); // 添加角色\n\nexport const reqAddRole = roleName => myAxios.post(`${BASE_URL}/manage/role/add`, {\n  roleName\n}); // 更新角色\n\nexport const reqUpdateRole = roleObj => myAxios.post(`${BASE_URL}/manage/role/update`, { ...roleObj\n});","map":{"version":3,"sources":["C:/Users/PC/Desktop/react-project/src/api/index.js"],"names":["myAxios","jsonp","BASE_URL","WEATHER_AK","CITY","reqLogin","username","password","post","reqCategoryList","get","reqWeather","cityCode","Promise","resolve","reject","url","err","data","console","log","status","weather","city","temperature","lives","weatherObj","error","reqAddCategory","categoryName","reqUpdateCategory","categoryId","reqProductList","pageNum","pageSize","params","reqUpdateProdStatus","productId","reqSearchProduct","searchType","keyWord","reqDeletePicture","name","reqAddProduct","productObj","reqUpdateProduct","reqRoles","reqAddRole","roleName","reqUpdateRole","roleObj"],"mappings":"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","sourcesContent":["/* \r\n  1.项目中所有请求由该文件发出\r\n  2.以后每当发请求之前，都要在该文件里添加一个方法\r\n*/\r\n// https://restapi.amap.com/v3/weather/weatherInfo?city=${cityCode}&key=36cc4d40112f012a9568e75cd1d8332e\r\n//引入我们自定义的myAxios\r\nimport myAxios from './myAxios'\r\nimport jsonp from 'jsonp'\r\nimport {message} from 'antd'\r\n//引入请求的基本路径\r\nimport {BASE_URL,WEATHER_AK,CITY} from '../config'\r\n\r\n//发起登录请求\r\nexport const reqLogin = (username,password)=> myAxios.post(`${BASE_URL}/login`,{username,password})\r\n\r\n//获取商品列表\r\nexport const reqCategoryList = ()=> myAxios.get(`${BASE_URL}/manage/category/list`)\r\n\r\n//获取天气信息 \r\nexport const reqWeather = (cityCode) => {\r\n\r\n  return new Promise((resolve,reject)=>{\r\n    const url = `https://restapi.amap.com/v3/weather/weatherInfo?city=${CITY}&key=${WEATHER_AK}`\r\n    // 发送jsonp请求\r\n    jsonp(url,{},(err,data)=>{\r\n      console.log(err,data);\r\n      // 如果成功了\r\n      if (!err && data.status === '1') {\r\n        const {weather,city,temperature} = data.lives[0]\r\n        // console.log(weather);\r\n        let weatherObj = {weather,city,temperature}\r\n        resolve(weatherObj)\r\n      } else {\r\n        // 如果失败了\r\n        message.error('获取天气信息失败...')\r\n        return new Promise(()=>{})\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n// 添加分类\r\nexport const reqAddCategory = ({categoryName})=> myAxios.post(`${BASE_URL}/manage/category/add`,{categoryName})\r\n//更新分类\r\nexport const reqUpdateCategory = ({categoryId,categoryName})=> myAxios.post(`${BASE_URL}/manage/category/update`,{categoryName,categoryId})\r\n// 获取商品分页列表\r\nexport const reqProductList = (pageNum,pageSize)=> myAxios.get(`${BASE_URL}/manage/product/list`,{params:{pageNum,pageSize}})\r\n// 更新商品的状态(上架或下架)\r\nexport const reqUpdateProdStatus = (productId,status)=> myAxios.post(`${BASE_URL}/manage/product/updateStatus`,{productId,status})\r\n// 搜索商品分页列表 (根据商品名称 / 商品描述)\r\n// searchType: 搜索的类型, productName/productDesc\r\nexport const reqSearchProduct =  (pageNum,pageSize,searchType,keyWord)=> \r\n{\r\n  console.log(pageNum,pageSize,searchType,keyWord);\r\n  return myAxios.get(`${BASE_URL}/manage/product/search`,\r\n{params:{pageNum,pageSize,\r\n  // 将一个变量的值变成属性名 就要加[]\r\n  [searchType]:keyWord}\r\n})\r\n}\r\n\r\n//根据商品id获取商品信息\r\n// export const reqProdById = (productId)=> myAxios.get(`${BASE_URL}/manage/product/info`,{params:{productId}})\r\n\r\n//根据图片唯一名，删除图片\r\nexport const reqDeletePicture = (name)=> myAxios.post(`${BASE_URL}/manage/img/delete`,{name})\r\n//请求添加商品\r\n// export const reqAddProduct = (product)=> myAxios.post(`${BASE_URL}/manage/product/add`,product)\r\nexport const reqAddProduct = (productObj)=> myAxios.post(`${BASE_URL}/manage/product/add`,{...productObj})\r\n//请求更新商品\r\nexport const reqUpdateProduct = (productObj)=> myAxios.post(`${BASE_URL}/manage/product/update`,{...productObj})\r\n// 获取所有角色的列表\r\nexport const reqRoles = ()=> myAxios.get(`${BASE_URL}/manage/role/list`)\r\n// 添加角色\r\nexport const reqAddRole = (roleName)=> myAxios.post(`${BASE_URL}/manage/role/add`,{roleName})\r\n\r\n// 更新角色\r\nexport const reqUpdateRole = (roleObj)=> myAxios.post(`${BASE_URL}/manage/role/update`,{...roleObj})"]},"metadata":{},"sourceType":"module"}