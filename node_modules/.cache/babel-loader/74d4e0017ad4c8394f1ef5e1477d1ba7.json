{"ast":null,"code":"/* \r\n  1.项目中所有请求由该文件发出\r\n  2.以后每当发请求之前，都要在该文件里添加一个方法\r\n*/\n// https://restapi.amap.com/v3/weather/weatherInfo?city=${cityCode}&key=36cc4d40112f012a9568e75cd1d8332e\n//引入我们自定义的myAxios\nimport myAxios from './myAxios';\nimport jsonp from 'jsonp'; //引入请求的基本路径\n\nimport { BASE_URL, WEATHER_AK, CITY } from '../config'; //发起登录请求\n\nexport const reqLogin = (username, password) => myAxios.post(`${BASE_URL}/login`, {\n  username,\n  password\n}); //获取商品列表\n\nexport const reqCategoryList = () => myAxios.get(`${BASE_URL}/manage/category/list?parentId=0`); //获取天气信息 \n\nexport const reqWeather = cityCode => {\n  return new Promise((resolve, reject) => {\n    const url = `https://restapi.amap.com/v3/weather/weatherInfo?city=${CITY}&key=${WEATHER_AK}`; // 发送jsonp请求\n\n    jsonp(url, {}, (err, data) => {\n      // console.log(err,data);\n      // 如果成功了\n      if (!err && data.status === '1') {\n        const {\n          weather\n        } = data.lives[0]; // console.log(weather);\n\n        resolve(weather);\n      } else {\n        // 如果失败了\n        message.error('获取天气信息失败...');\n      }\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/PC/Desktop/react-project/src/api/index.js"],"names":["myAxios","jsonp","BASE_URL","WEATHER_AK","CITY","reqLogin","username","password","post","reqCategoryList","get","reqWeather","cityCode","Promise","resolve","reject","url","err","data","status","weather","lives","message","error"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAAQC,QAAR,EAAiBC,UAAjB,EAA4BC,IAA5B,QAAuC,WAAvC,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAUC,QAAV,KAAsBP,OAAO,CAACQ,IAAR,CAAc,GAAEN,QAAS,QAAzB,EAAiC;AAACI,EAAAA,QAAD;AAAUC,EAAAA;AAAV,CAAjC,CAAvC,C,CAEP;;AACA,OAAO,MAAME,eAAe,GAAG,MAAKT,OAAO,CAACU,GAAR,CAAa,GAAER,QAAS,kCAAxB,CAA7B,C,CAEP;;AACA,OAAO,MAAMS,UAAU,GAAIC,QAAD,IAAc;AAEtC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAkB;AACnC,UAAMC,GAAG,GAAI,wDAAuDZ,IAAK,QAAOD,UAAW,EAA3F,CADmC,CAEnC;;AACAF,IAAAA,KAAK,CAACe,GAAD,EAAK,EAAL,EAAQ,CAACC,GAAD,EAAKC,IAAL,KAAY;AACvB;AACA;AACA,UAAI,CAACD,GAAD,IAAQC,IAAI,CAACC,MAAL,KAAgB,GAA5B,EAAiC;AAC/B,cAAM;AAACC,UAAAA;AAAD,YAAYF,IAAI,CAACG,KAAL,CAAW,CAAX,CAAlB,CAD+B,CAE/B;;AACAP,QAAAA,OAAO,CAACM,OAAD,CAAP;AACD,OAJD,MAIO;AACL;AACAE,QAAAA,OAAO,CAACC,KAAR,CAAc,aAAd;AACD;AACF,KAXI,CAAL;AAYD,GAfM,CAAP;AAiBD,CAnBM","sourcesContent":["/* \r\n  1.项目中所有请求由该文件发出\r\n  2.以后每当发请求之前，都要在该文件里添加一个方法\r\n*/\r\n// https://restapi.amap.com/v3/weather/weatherInfo?city=${cityCode}&key=36cc4d40112f012a9568e75cd1d8332e\r\n//引入我们自定义的myAxios\r\nimport myAxios from './myAxios'\r\nimport jsonp from 'jsonp'\r\n//引入请求的基本路径\r\nimport {BASE_URL,WEATHER_AK,CITY} from '../config'\r\n\r\n//发起登录请求\r\nexport const reqLogin = (username,password)=> myAxios.post(`${BASE_URL}/login`,{username,password})\r\n\r\n//获取商品列表\r\nexport const reqCategoryList = ()=> myAxios.get(`${BASE_URL}/manage/category/list?parentId=0`)\r\n\r\n//获取天气信息 \r\nexport const reqWeather = (cityCode) => {\r\n\r\n  return new Promise((resolve,reject)=>{\r\n    const url = `https://restapi.amap.com/v3/weather/weatherInfo?city=${CITY}&key=${WEATHER_AK}`\r\n    // 发送jsonp请求\r\n    jsonp(url,{},(err,data)=>{\r\n      // console.log(err,data);\r\n      // 如果成功了\r\n      if (!err && data.status === '1') {\r\n        const {weather} = data.lives[0]\r\n        // console.log(weather);\r\n        resolve(weather)\r\n      } else {\r\n        // 如果失败了\r\n        message.error('获取天气信息失败...')\r\n      }\r\n    })\r\n  })\r\n  \r\n}"]},"metadata":{},"sourceType":"module"}