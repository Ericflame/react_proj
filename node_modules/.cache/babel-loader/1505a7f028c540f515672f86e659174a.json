{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react-project\\\\src\\\\containers\\\\Login\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createSaveUserInfoAction } from '../../redux/actions_creators/login_action';\nimport './css/login.less';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport logo from './img/dora_17.png';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Item\n} = _Form;\n\nconst Login = props => {\n  _s();\n\n  const [form] = _Form.useForm(); // 如果用户已经登录 自动跳转到管理界面\n\n  /* const user = props.user\r\n  if (user._id) {\r\n    return <Redirect to='/home'/>\r\n  } */\n  // 点击登录按钮的回调\n\n\n  const handleSubmit = event => {\n    //阻止默认事件--禁止form表单提交---通过ajax发送\n    event.preventDefault(); //表单的统一验证\n\n    this.props.form.validateFields(async (err, values) => {\n      //获取用户输入\n      const {\n        username,\n        password\n      } = values;\n\n      if (!err) {\n        //若用户输入无错误，发送登录请求\n        let result = await reqLogin(username, password); //从响应中获取：请求状态、错误信息、数据\n\n        const {\n          status,\n          msg,\n          data\n        } = result;\n\n        if (status === 0) {\n          //1.服务器返回的user信息，还有token交由redux管理\n          this.props.saveUserInfo(data); //2.跳转admin页面\n\n          this.props.history.replace('/admin');\n        } else {\n          //若登录失败\n          _message.warning(msg, 1);\n        }\n      } else {\n        _message.error('表单输入有误，请检查！');\n      }\n    });\n  };\n\n  const NameValidator = (rule, value, callback) => {\n    if (value) {\n      if (value.length >= 4 && value.length <= 30) {\n        return Promise.resolve();\n      } else {\n        return Promise.reject('名称长度为4-30个字符，一个中文字等于2个字符');\n      }\n    } else {\n      return Promise.resolve();\n    }\n  };\n  /*  const onFinish = (values) => {\r\n     // console.log('Received values of form: ', values);\r\n  \n     // 请求登录\r\n     const {username,password} = values\r\n  \n     // 调用分发异步action的函数 ===》发送ajax请求 \r\n     // 有了结果之后更新状态\r\n     props.login(username,password)\r\n      \r\n   };\r\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"login-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\u540E\\u53F0\\u7BA1\\u7406\\u7CFB\\u7EDF\", props.test]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"login-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u7528\\u6237\\u767B\\u9646\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(_Form, {\n        form: form,\n        name: \"normal_login\",\n        className: \"login-form\",\n        initialValues: {\n          remember: true,\n          username: '云显靖'\n        } // onFinish={onFinish}\n        ,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Item, {\n          name: \"username\" // 声明式验证：直接使用别人定义好的验证规则进行验证\n          ,\n          rules: [{\n            required: true,\n            whitespace: true,\n            message: '请输入用户名!'\n          }, {\n            min: 4,\n            message: '用户名最少4位'\n          }, {\n            max: 12,\n            message: '用户名最多12位'\n          }, {\n            pattern: /^[a-zA-Z0-9_]+$/,\n            message: '用户名必须是英文 数字或者下划线组成'\n          }],\n          children: /*#__PURE__*/_jsxDEV(_Input, {\n            prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n              className: \"site-form-item-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 30\n            }, this),\n            placeholder: \"\\u7528\\u6237\\u540D\",\n            style: {\n              color: 'rgba(0,0,0,.25)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          name: \"password\",\n          rules: [{\n            required: true,\n            message: 'Please input your Password!'\n          }, {\n            validator: NameValidator\n          }],\n          children: /*#__PURE__*/_jsxDEV(_Input, {\n            prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n              className: \"site-form-item-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 30\n            }, this),\n            type: \"password\",\n            placeholder: \"\\u5BC6\\u7801\",\n            style: {\n              color: 'rgba(0,0,0,.25)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(_Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            className: \"login-form-button\",\n            children: \"\\u767B\\u5F55\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }, this);\n}; // 暴露容器\n\n\n_s(Login, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [_Form.useForm];\n});\n\n_c = Login;\nexport default connect(state => ({\n  isLogin: state.userInfo.isLogin\n}), {\n  saveUserInfo: createSaveUserInfoAction\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/react-project/src/containers/Login/index.jsx"],"names":["React","connect","createSaveUserInfoAction","UserOutlined","LockOutlined","logo","Redirect","Item","Login","props","form","useForm","handleSubmit","event","preventDefault","validateFields","err","values","username","password","result","reqLogin","status","msg","data","saveUserInfo","history","replace","warning","error","NameValidator","rule","value","callback","length","Promise","resolve","reject","test","remember","required","whitespace","message","min","max","pattern","color","validator","state","isLogin","userInfo"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Form, Input, Button,message} from 'antd';\r\nimport { connect } from 'react-redux'\r\nimport {createSaveUserInfoAction} from '../../redux/actions_creators/login_action'\r\nimport './css/login.less'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\r\nimport logo from './img/dora_17.png'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst { Item } = Form\r\nconst Login = (props) => {\r\n\r\n    const [form] = Form.useForm();\r\n  \r\n    // 如果用户已经登录 自动跳转到管理界面\r\n    /* const user = props.user\r\n    if (user._id) {\r\n      return <Redirect to='/home'/>\r\n    } */\r\n    // 点击登录按钮的回调\r\n    const handleSubmit = (event)=>{\r\n        //阻止默认事件--禁止form表单提交---通过ajax发送\r\n        event.preventDefault();\r\n        //表单的统一验证\r\n        this.props.form.validateFields(async(err, values) => {\r\n          //获取用户输入\r\n          const {username,password} = values\r\n          if(!err){\r\n            //若用户输入无错误，发送登录请求\r\n            let result = await reqLogin(username,password)\r\n            //从响应中获取：请求状态、错误信息、数据\r\n            const {status,msg,data} = result\r\n            if(status === 0){\r\n              //1.服务器返回的user信息，还有token交由redux管理\r\n              this.props.saveUserInfo(data)\r\n              //2.跳转admin页面\r\n              this.props.history.replace('/admin')\r\n            }else{\r\n              //若登录失败\r\n              message.warning(msg,1)\r\n            }\r\n          }else{\r\n            message.error('表单输入有误，请检查！')\r\n          }\r\n        });\r\n      }\r\n    const NameValidator = (rule, value, callback) => {\r\n        if (value) {\r\n          if (value.length >= 4 && value.length <= 30) {\r\n            return Promise.resolve()\r\n          } else {\r\n            return Promise.reject('名称长度为4-30个字符，一个中文字等于2个字符')\r\n          }\r\n        } else {\r\n          return Promise.resolve()\r\n        }\r\n      };\r\n\r\n   /*  const onFinish = (values) => {\r\n      // console.log('Received values of form: ', values);\r\n  \r\n      // 请求登录\r\n      const {username,password} = values\r\n  \r\n      // 调用分发异步action的函数 ===》发送ajax请求 \r\n      // 有了结果之后更新状态\r\n      props.login(username,password)\r\n       \r\n    };\r\n   */\r\n    return (\r\n      <div className=\"login\">\r\n        <header className=\"login-header\">\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>后台管理系统{props.test}</h1>\r\n        </header>\r\n        <section className=\"login-content\">\r\n          <h1>用户登陆</h1>\r\n\r\n          <Form form={form} name=\"normal_login\" className=\"login-form\"\r\n            initialValues={{\r\n              remember: true,\r\n              username:'云显靖'\r\n            }}\r\n            // onFinish={onFinish}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <Item\r\n              name=\"username\"\r\n              // 声明式验证：直接使用别人定义好的验证规则进行验证\r\n              rules={[\r\n                {required: true, whitespace: true, message: '请输入用户名!'},\r\n                {min: 4, message: '用户名最少4位'},\r\n                {max: 12, message: '用户名最多12位'},\r\n                {pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是英文 数字或者下划线组成'},\r\n              ]}\r\n            >\r\n              <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"用户名\" style={{ color: 'rgba(0,0,0,.25)' }} />\r\n            </Item>\r\n            <Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your Password!',\r\n                },{validator: NameValidator,}\r\n              ]}\r\n            >\r\n              <Input prefix={<LockOutlined className=\"site-form-item-icon\" />} type=\"password\" placeholder=\"密码\" style={{ color: 'rgba(0,0,0,.25)' }}/>\r\n            </Item>\r\n            <Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                登录\r\n              </Button>\r\n            </Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    );\r\n  };\r\n// 暴露容器\r\nexport default connect(\r\n    state => ({isLogin:state.userInfo.isLogin}),\r\n  {\r\n    saveUserInfo:createSaveUserInfoAction,\r\n  }\r\n)(Login)\r\n\r\n"]},"metadata":{},"sourceType":"module"}