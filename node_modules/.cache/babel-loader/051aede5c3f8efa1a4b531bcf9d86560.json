{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react-project\\\\src\\\\containers\\\\Login\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createDemo1Action, createDemo2Action } from '../../redux/actions_creators/test_action';\nimport './css/login.less';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport logo from './img/dora_17.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Item\n} = _Form;\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = event => {\n      event.preventDefault(); //阻止默认事件--禁止form表单提交---通过ajax发送\n\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          //alert('向服务器发送登录请求')\n          this.props.demo2('0719');\n        } else {\n          message.error('表单输入有误，请检查！');\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\u5546\\u54C1\\u7BA1\\u7406\\u7CFB\\u7EDF\", this.props.test]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"login-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u7528\\u6237\\u767B\\u9646\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NormalLoginForm, {\n          className: \"Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst NormalLoginForm = () => {\n  const onFinish = values => {\n    //提交表单且数据验证成功后回调事件\n    console.log('Received values of form: ', values);\n  };\n\n  const tailLayout = {\n    wrapperCol: {\n      offset: 10,\n      span: 16\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Form, {\n    onSubmit: this.handleSubmit,\n    onFinish: onFinish,\n    className: \"login-form\",\n    initialValues: {\n      username: '云显靖' //默认值\n\n    },\n    children: [/*#__PURE__*/_jsxDEV(Item, {\n      name: \"username\",\n      rules: [// 声明式验证: 直接使用别人定义好的验证规则进行验证\n      {\n        required: true,\n        whitespace: true,\n        message: '用户名必须输入'\n      }, {\n        min: 4,\n        message: '用户名至少4位'\n      }, {\n        max: 12,\n        message: '用户名最多12位'\n      }, {\n        pattern: /^[a-zA-Z0-9_]+$/,\n        message: '用户名必须是英文、数字或下划线组成'\n      }],\n      children: /*#__PURE__*/_jsxDEV(_Input, {\n        prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n          className: \"site-form-item-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this),\n        placeholder: \"\\u7528\\u6237\\u540D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Item, {\n      name: \"password\",\n      rules: [{\n        required: true,\n        validator: this.pwdValidator,\n        message: 'Please input your Password!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(_Input, {\n        prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n          className: \"site-form-item-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this),\n        type: \"password\",\n        placeholder: \"\\u5BC6\\u7801\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Item, { ...tailLayout,\n      children: /*#__PURE__*/_jsxDEV(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        children: \"\\u767B\\u5F55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_c = NormalLoginForm;\nexport default connect(state => ({\n  test: state.test\n}), {\n  demo1: createDemo1Action,\n  demo2: createDemo2Action\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"NormalLoginForm\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/react-project/src/containers/Login/index.jsx"],"names":["React","Component","connect","createDemo1Action","createDemo2Action","UserOutlined","LockOutlined","logo","Item","Login","handleSubmit","event","preventDefault","props","form","validateFields","err","values","demo2","message","error","componentDidMount","console","log","render","test","NormalLoginForm","onFinish","tailLayout","wrapperCol","offset","span","username","required","whitespace","min","max","pattern","validator","pwdValidator","state","demo1"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Form, Input, Button } from 'antd';\r\nimport {connect} from 'react-redux'\r\nimport {createDemo1Action,createDemo2Action} from '../../redux/actions_creators/test_action'\r\nimport './css/login.less'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\r\nimport logo from './img/dora_17.png'\r\nconst { Item } = Form\r\n\r\nclass Login extends Component {\r\n    handleSubmit = (event)=>{\r\n        event.preventDefault();//阻止默认事件--禁止form表单提交---通过ajax发送\r\n        this.props.form.validateFields((err, values) => {\r\n          if(!err){\r\n            //alert('向服务器发送登录请求')\r\n            this.props.demo2('0719')\r\n          }else{\r\n            message.error('表单输入有误，请检查！')\r\n          }\r\n        });\r\n      }\r\n    componentDidMount(){\r\n        console.log(this.props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"login\">\r\n                <header>\r\n                    <img src={logo} alt=\"logo\" />\r\n                    <h1>商品管理系统{this.props.test}</h1>\r\n\r\n                </header>\r\n                <section className=\"login-content\">\r\n                    <h1>用户登陆</h1>\r\n                    {/*  表单函数组件*/}\r\n                    <NormalLoginForm className=\"Form\" />\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst NormalLoginForm = () => {\r\n    const onFinish = values => {//提交表单且数据验证成功后回调事件\r\n        console.log('Received values of form: ', values);\r\n    };\r\n\r\n    const tailLayout = {\r\n        wrapperCol: { offset: 10, span: 16 },\r\n      };\r\n      \r\n    return (\r\n        <Form\r\n            onSubmit={this.handleSubmit}\r\n            onFinish={onFinish} className=\"login-form\"\r\n            initialValues={{\r\n                username: '云显靖',//默认值\r\n            }}\r\n        >\r\n            <Item\r\n                name=\"username\"\r\n                rules={[// 声明式验证: 直接使用别人定义好的验证规则进行验证\r\n                    { required: true, whitespace: true, message: '用户名必须输入' },\r\n                    { min: 4, message: '用户名至少4位' },\r\n                    { max: 12, message: '用户名最多12位' },\r\n                    { pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是英文、数字或下划线组成' },\r\n                ]}\r\n            >\r\n                <Input\r\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                    placeholder=\"用户名\"\r\n                />\r\n            </Item>\r\n            <Item\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        validator: this.pwdValidator,\r\n                        message: 'Please input your Password!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    placeholder=\"密码\"\r\n                />\r\n            </Item>\r\n            <Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                    登录\r\n          </Button>\r\n            </Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n    state => ({test:state.test}),\r\n    {\r\n        demo1:createDemo1Action,\r\n        demo2:createDemo2Action\r\n    }\r\n)(Login)\r\n\r\n"]},"metadata":{},"sourceType":"module"}