{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react-project\\\\src\\\\containers\\\\Admin\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createDeleteUserInfoAction } from '../../redux/action_creators/login_action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Admin extends Component {\n  componentDidMount() {\n    console.log(this.props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this);\n  }\n\n} //如下代码中的所有key是控制容器组件传递给UI组件的key\n//如下代码中的所有value是控制容器组件传递给UI组件的value\n\n\nexport default connect(state => ({\n  userInfo: state.userInfo\n}), {\n  deleteUserInfo: createDeleteUserInfoAction\n})(Admin);","map":{"version":3,"sources":["C:/Users/PC/Desktop/react-project/src/containers/Admin/index.jsx"],"names":["React","Component","connect","createDeleteUserInfoAction","Admin","componentDidMount","console","log","props","render","state","userInfo","deleteUserInfo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,0BAAR,QAAyC,0CAAzC;;;AACA,MAAMC,KAAN,SAAoBH,SAApB,CAA6B;AAEzBI,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAZwB,C,CAe3B;AACA;;;AACA,eAAeP,OAAO,CACpBQ,KAAK,KAAK;AAACC,EAAAA,QAAQ,EAACD,KAAK,CAACC;AAAhB,CAAL,CADe,EAEtB;AACEC,EAAAA,cAAc,EAACT;AADjB,CAFsB,CAAP,CAKbC,KALa,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createDeleteUserInfoAction} from '../../redux/action_creators/login_action'\r\nclass Admin extends Component{\r\n\r\n    componentDidMount(){\r\n      console.log(this.props);\r\n    }\r\n    \r\n    render(){\r\n      return (\r\n        <div>\r\n          Admin\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  //如下代码中的所有key是控制容器组件传递给UI组件的key\r\n  //如下代码中的所有value是控制容器组件传递给UI组件的value\r\n  export default connect(\r\n    state => ({userInfo:state.userInfo}),\r\n  {\r\n    deleteUserInfo:createDeleteUserInfoAction\r\n  }\r\n  )(Admin)"]},"metadata":{},"sourceType":"module"}