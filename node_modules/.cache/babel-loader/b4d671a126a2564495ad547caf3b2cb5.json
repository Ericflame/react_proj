{"ast":null,"code":"import \"antd/es/tree/style\";\nimport _Tree from \"antd/es/tree\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react-project\\\\src\\\\containers\\\\Role\\\\auth-form.jsx\";\nimport React, { Component } from 'react';\n// import PropTypes from 'prop-types'\nimport menuList from '../../config/menu_config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = _Form.Item; // 创建角色的form组件\n\nexport default class AuthForm extends Component {\n  // state = {\n  //     treeData: [{\n  //         title: '平台权限',\n  //         key: 'all',\n  //         children: []\n  //     }],\n  //     checkedKeys:[]\n  // }\n  constructor(props) {\n    super(props);\n\n    this.getTreeNodes = menuList => {\n      return menuList.reduce((pre, item) => {\n        pre.push({\n          title: item.title,\n          key: item.key,\n          children: item.children ? this.getTreeNodes(item.children) : null\n        });\n        return pre;\n      }, []);\n    };\n\n    this.getMenus = () => this.state.checkedKeys;\n\n    this.onCheck = checkedKeys => {\n      // console.log('onCheck', checkedKeys);\n      // setCheckedKeys(checkedKeys);\n      this.setState({\n        checkedKeys\n      });\n    };\n\n    const {\n      role\n    } = this.props; // console.log('role',role);\n\n    this.state = {\n      treeData: [{\n        title: '平台权限',\n        key: 'all',\n        children: []\n      }],\n      checkedKeys: role //选中的菜单\n\n    }; // console.log('menus',menus);\n    // console.log('state-checkedKeys',this.state.checkedKeys);\n  }\n\n  // 根据新传入的role来更新checkedKeys状态\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const role = nextProps.role;\n    console.log(role);\n    this.setState({\n      checkedKeys: role\n    }); // this.state.checkedKeys = menus\n  }\n\n  UNSAFE_componentWillMount() {\n    //   this.state.treeData[0].children = this.getTreeNodes(menuList)\n    let treeDatas = this.state.treeData;\n    treeDatas[0].children = this.getTreeNodes(menuList);\n    this.setState({\n      treeData: treeDatas\n    });\n  }\n\n  render() {\n    // const {role} = this.props\n    const {\n      treeData,\n      checkedKeys\n    } = this.state; // console.log('render之前,',checkedKeys);\n    // console.log('render',this.state.checkedKeys);\n    // console.log('treeData',treeData);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Item, {\n        label: \"\\u89D2\\u8272\\u540D\\u79F0\",\n        children: /*#__PURE__*/_jsxDEV(_Input, {\n          /* value={role.name} */\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(_Tree, {\n        checkable: true //允许选中 \n        ,\n        defaultExpandAll: true //默认展开所有结点\n        ,\n        checkedKeys: {\n          checked: checkedKeys\n        },\n        onCheck: this.onCheck,\n        treeData: treeData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n} // import React, { useState } from 'react';\n// import { Tree } from 'antd';\n// const treeData = [\n//   {\n//     title: '0-0',\n//     key: '0-0',\n//     children: [\n//       {\n//         title: '0-0-0',\n//         key: '0-0-0',\n//         children: [\n//           {\n//             title: '0-0-0-0',\n//             key: '0-0-0-0',\n//           },\n//           {\n//             title: '0-0-0-1',\n//             key: '0-0-0-1',\n//           },\n//           {\n//             title: '0-0-0-2',\n//             key: '0-0-0-2',\n//           },\n//         ],\n//       },\n//       {\n//         title: '0-0-1',\n//         key: '0-0-1',\n//         children: [\n//           {\n//             title: '0-0-1-0',\n//             key: '0-0-1-0',\n//           },\n//           {\n//             title: '0-0-1-1',\n//             key: '0-0-1-1',\n//           },\n//           {\n//             title: '0-0-1-2',\n//             key: '0-0-1-2',\n//           },\n//         ],\n//       },\n//       {\n//         title: '0-0-2',\n//         key: '0-0-2',\n//       },\n//     ],\n//   },\n//   {\n//     title: '0-1',\n//     key: '0-1',\n//     children: [\n//       {\n//         title: '0-1-0-0',\n//         key: '0-1-0-0',\n//       },\n//       {\n//         title: '0-1-0-1',\n//         key: '0-1-0-1',\n//       },\n//       {\n//         title: '0-1-0-2',\n//         key: '0-1-0-2',\n//       },\n//     ],\n//   },\n//   {\n//     title: '0-2',\n//     key: '0-2',\n//   },\n// ];\n// const  AuthForm = () => {\n//   const [expandedKeys, setExpandedKeys] = useState(['0-0-0', '0-0-1','0-1']);\n//   const [checkedKeys, setCheckedKeys] = useState(['0-0-0']);\n//   const [selectedKeys, setSelectedKeys] = useState([]);\n//   const [autoExpandParent, setAutoExpandParent] = useState(true);\n//   const onExpand = (expandedKeys) => {\n//     console.log('onExpand', expandedKeys); // if not set autoExpandParent to false, if children expanded, parent can not collapse.\n//     // or, you can remove all expanded children keys.\n//     setExpandedKeys(expandedKeys);\n//     setAutoExpandParent(false);\n//   };\n//   const onCheck = (checkedKeys) => {\n//     console.log('onCheck', checkedKeys);\n//     setCheckedKeys(checkedKeys);\n//   };\n//   const onSelect = (selectedKeys, info) => {\n//     console.log('onSelect', info);\n//     setSelectedKeys(selectedKeys);\n//   };\n//   return (\n//     <Tree\n//       checkable\n//       onExpand={onExpand}\n//       expandedKeys={expandedKeys}\n//       autoExpandParent={autoExpandParent}\n//       onCheck={onCheck}\n//       checkedKeys={checkedKeys}\n//       onSelect={onSelect}\n//       selectedKeys={selectedKeys}\n//       treeData={treeData}\n//     />\n//   );\n// };\n// export default AuthForm","map":{"version":3,"sources":["C:/Users/PC/Desktop/react-project/src/containers/Role/auth-form.jsx"],"names":["React","Component","menuList","Item","AuthForm","constructor","props","getTreeNodes","reduce","pre","item","push","title","key","children","getMenus","state","checkedKeys","onCheck","setState","role","treeData","UNSAFE_componentWillReceiveProps","nextProps","console","log","UNSAFE_componentWillMount","treeDatas","render","checked"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AAEA;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AAGA,MAAMC,IAAI,GAAG,MAAKA,IAAlB,C,CAEA;;AACA,eAAe,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgBnBC,YAhBmB,GAgBHL,QAAD,IAAc;AAC3B,aAAOA,QAAQ,CAACM,MAAT,CAAgB,CAACC,GAAD,EAAKC,IAAL,KAAY;AACjCD,QAAAA,GAAG,CAACE,IAAJ,CACE;AACEC,UAAAA,KAAK,EAAEF,IAAI,CAACE,KADd;AAEEC,UAAAA,GAAG,EAAEH,IAAI,CAACG,GAFZ;AAGEC,UAAAA,QAAQ,EAAEJ,IAAI,CAACI,QAAL,GAAgB,KAAKP,YAAL,CAAkBG,IAAI,CAACI,QAAvB,CAAhB,GAAiD;AAH7D,SADF;AAOA,eAAOL,GAAP;AACD,OATM,EASL,EATK,CAAP;AAUD,KA3BkB;;AAAA,SA8BnBM,QA9BmB,GA8BR,MAAM,KAAKC,KAAL,CAAWC,WA9BT;;AAAA,SAkCnBC,OAlCmB,GAkCTD,WAAW,IAAI;AACrB;AACA;AACA,WAAKE,QAAL,CAAc;AAACF,QAAAA;AAAD,OAAd;AACH,KAtCkB;;AAEjB,UAAM;AAACG,MAAAA;AAAD,QAAS,KAAKd,KAApB,CAFiB,CAGjB;;AACA,SAAKU,KAAL,GAAa;AACXK,MAAAA,QAAQ,EAAE,CAAC;AACTT,QAAAA,KAAK,EAAE,MADE;AAETC,QAAAA,GAAG,EAAE,KAFI;AAGTC,QAAAA,QAAQ,EAAE;AAHD,OAAD,CADC;AAMXG,MAAAA,WAAW,EAAEG,IANF,CAMO;;AANP,KAAb,CAJiB,CAYjB;AACA;AACD;;AA0BD;AACAE,EAAAA,gCAAgC,CAACC,SAAD,EAAW;AACzC,UAAMH,IAAI,GAAGG,SAAS,CAACH,IAAvB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,SAAKD,QAAL,CAAc;AACZF,MAAAA,WAAW,EAAEG;AADD,KAAd,EAHyC,CAMzC;AACD;;AAEDM,EAAAA,yBAAyB,GAAE;AACvB;AACA,QAAIC,SAAS,GAAG,KAAKX,KAAL,CAAWK,QAA3B;AACAM,IAAAA,SAAS,CAAC,CAAD,CAAT,CAAab,QAAb,GAAwB,KAAKP,YAAL,CAAkBL,QAAlB,CAAxB;AACA,SAAKiB,QAAL,CAAc;AACdE,MAAAA,QAAQ,EAAEM;AADI,KAAd;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAACP,MAAAA,QAAD;AAAUJ,MAAAA;AAAV,QAAyB,KAAKD,KAApC,CAFO,CAGP;AACA;AACE;;AACA,wBACI;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC,0BAAZ;AAAA,+BACE;AAAO;AAAwB,UAAA,QAAQ;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,SAAS,MADX,CACY;AADZ;AAEE,QAAA,gBAAgB,EAAE,IAFpB,CAEyB;AAFzB;AAGE,QAAA,WAAW,EAAE;AAACa,UAAAA,OAAO,EAACZ;AAAT,SAHf;AAIE,QAAA,OAAO,EAAE,KAAKC,OAJhB;AAKE,QAAA,QAAQ,EAAEG;AALZ;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AA3F2C,C,CA8FhsourcesContent":["import React,{Component} from 'react'\r\nimport {Form,Input,Tree} from 'antd'\r\n// import PropTypes from 'prop-types'\r\nimport menuList from '../../config/menu_config'\r\n\r\n\r\nconst Item = Form.Item \r\n\r\n// 创建角色的form组件\r\nexport default class AuthForm extends Component {\r\n\r\n    // state = {\r\n    //     treeData: [{\r\n    //         title: '平台权限',\r\n    //         key: 'all',\r\n    //         children: []\r\n    //     }],\r\n    //     checkedKeys:[]\r\n    // }\r\n\r\n    constructor(props) {\r\n      super(props)\r\n      const {role} = this.props\r\n      // console.log('role',role);\r\n      this.state = {\r\n        treeData: [{\r\n          title: '平台权限',\r\n          key: 'all',\r\n          children: []\r\n      }],\r\n        checkedKeys: role,//选中的菜单\r\n      }\r\n      // console.log('menus',menus);\r\n      // console.log('state-checkedKeys',this.state.checkedKeys);\r\n    }\r\n\r\n    getTreeNodes = (menuList) => {\r\n      return menuList.reduce((pre,item)=>{\r\n        pre.push(\r\n          {\r\n            title: item.title,\r\n            key: item.key,\r\n            children: item.children ? this.getTreeNodes(item.children):null\r\n          }\r\n        )\r\n        return pre\r\n      },[])\r\n    }\r\n\r\n    // 为父组件获取最新menus的方法\r\n    getMenus = () => this.state.checkedKeys\r\n    \r\n\r\n    // 选中某个node \r\n    onCheck = checkedKeys => {\r\n        // console.log('onCheck', checkedKeys);\r\n        // setCheckedKeys(checkedKeys);\r\n        this.setState({checkedKeys})\r\n    };\r\n\r\n    // 根据新传入的role来更新checkedKeys状态\r\n    UNSAFE_componentWillReceiveProps(nextProps){\r\n      const role = nextProps.role\r\n      console.log(role);\r\n      this.setState({\r\n        checkedKeys: role\r\n      })\r\n      // this.state.checkedKeys = menus\r\n    }\r\n\r\n    UNSAFE_componentWillMount(){\r\n        //   this.state.treeData[0].children = this.getTreeNodes(menuList)\r\n        let treeDatas = this.state.treeData\r\n        treeDatas[0].children = this.getTreeNodes(menuList)\r\n        this.setState({\r\n        treeData: treeDatas\r\n        })\r\n\r\n    } \r\n    \r\n    render() {\r\n      // const {role} = this.props\r\n      const {treeData,checkedKeys} = this.state\r\n      // console.log('render之前,',checkedKeys);\r\n      // console.log('render',this.state.checkedKeys);\r\n        // console.log('treeData',treeData);\r\n        return (\r\n            <div>\r\n              <Item label='角色名称'>\r\n                <Input /* value={role.name} */ disabled/>\r\n              </Item>\r\n              <Tree\r\n                checkable //允许选中 \r\n                defaultExpandAll={true}//默认展开所有结点\r\n                checkedKeys={{checked:checkedKeys}}\r\n                onCheck={this.onCheck}\r\n                treeData={treeData} \r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// import React, { useState } from 'react';\r\n// import { Tree } from 'antd';\r\n// const treeData = [\r\n//   {\r\n//     title: '0-0',\r\n//     key: '0-0',\r\n//     children: [\r\n//       {\r\n//         title: '0-0-0',\r\n//         key: '0-0-0',\r\n//         children: [\r\n//           {\r\n//             title: '0-0-0-0',\r\n//             key: '0-0-0-0',\r\n//           },\r\n//           {\r\n//             title: '0-0-0-1',\r\n//             key: '0-0-0-1',\r\n//           },\r\n//           {\r\n//             title: '0-0-0-2',\r\n//             key: '0-0-0-2',\r\n//           },\r\n//         ],\r\n//       },\r\n//       {\r\n//         title: '0-0-1',\r\n//         key: '0-0-1',\r\n//         children: [\r\n//           {\r\n//             title: '0-0-1-0',\r\n//             key: '0-0-1-0',\r\n//           },\r\n//           {\r\n//             title: '0-0-1-1',\r\n//             key: '0-0-1-1',\r\n//           },\r\n//           {\r\n//             title: '0-0-1-2',\r\n//             key: '0-0-1-2',\r\n//           },\r\n//         ],\r\n//       },\r\n//       {\r\n//         title: '0-0-2',\r\n//         key: '0-0-2',\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     title: '0-1',\r\n//     key: '0-1',\r\n//     children: [\r\n//       {\r\n//         title: '0-1-0-0',\r\n//         key: '0-1-0-0',\r\n//       },\r\n//       {\r\n//         title: '0-1-0-1',\r\n//         key: '0-1-0-1',\r\n//       },\r\n//       {\r\n//         title: '0-1-0-2',\r\n//         key: '0-1-0-2',\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     title: '0-2',\r\n//     key: '0-2',\r\n//   },\r\n// ];\r\n\r\n// const  AuthForm = () => {\r\n//   const [expandedKeys, setExpandedKeys] = useState(['0-0-0', '0-0-1','0-1']);\r\n//   const [checkedKeys, setCheckedKeys] = useState(['0-0-0']);\r\n//   const [selectedKeys, setSelectedKeys] = useState([]);\r\n//   const [autoExpandParent, setAutoExpandParent] = useState(true);\r\n\r\n//   const onExpand = (expandedKeys) => {\r\n//     console.log('onExpand', expandedKeys); // if not set autoExpandParent to false, if children expanded, parent can not collapse.\r\n//     // or, you can remove all expanded children keys.\r\n\r\n//     setExpandedKeys(expandedKeys);\r\n//     setAutoExpandParent(false);\r\n//   };\r\n\r\n//   const onCheck = (checkedKeys) => {\r\n//     console.log('onCheck', checkedKeys);\r\n//     setCheckedKeys(checkedKeys);\r\n//   };\r\n\r\n//   const onSelect = (selectedKeys, info) => {\r\n//     console.log('onSelect', info);\r\n//     setSelectedKeys(selectedKeys);\r\n//   };\r\n\r\n//   return (\r\n//     <Tree\r\n//       checkable\r\n//       onExpand={onExpand}\r\n//       expandedKeys={expandedKeys}\r\n//       autoExpandParent={autoExpandParent}\r\n//       onCheck={onCheck}\r\n//       checkedKeys={checkedKeys}\r\n//       onSelect={onSelect}\r\n//       selectedKeys={selectedKeys}\r\n//       treeData={treeData}\r\n//     />\r\n//   );\r\n// };\r\n\r\n// export default AuthForm\r\n\r\n"]},"metadata":{},"sourceType":"module"}