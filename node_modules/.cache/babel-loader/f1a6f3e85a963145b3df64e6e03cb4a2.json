{"ast":null,"code":"import\"antd/es/tree/style\";import _Tree from\"antd/es/tree\";import\"antd/es/input/style\";import _Input from\"antd/es/input\";import _classCallCheck from\"C:/Users/PC/Desktop/\\u6E90\\u7801/react_Project/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/PC/Desktop/\\u6E90\\u7801/react_Project/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/PC/Desktop/\\u6E90\\u7801/react_Project/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/PC/Desktop/\\u6E90\\u7801/react_Project/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import\"antd/es/form/style\";import _Form from\"antd/es/form\";import React,{Component}from'react';// import PropTypes from 'prop-types'\nimport menuList from'../../config/menu_config';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Item=_Form.Item;// 创建角色的form组件\nvar AuthForm=/*#__PURE__*/function(_Component){_inherits(AuthForm,_Component);var _super=_createSuper(AuthForm);// state = {\n//     treeData: [{\n//         title: '平台权限',\n//         key: 'all',\n//         children: []\n//     }],\n//     checkedKeys:[]\n// }\nfunction AuthForm(props){var _this;_classCallCheck(this,AuthForm);_this=_super.call(this,props);_this.getTreeNodes=function(menuList){return menuList.reduce(function(pre,item){pre.push({title:item.title,key:item.key,children:item.children?_this.getTreeNodes(item.children):null});return pre;},[]);};_this.getMenus=function(){return _this.state.checkedKeys;};_this.onCheck=function(checkedKeys){// console.log('onCheck', checkedKeys);\n// setCheckedKeys(checkedKeys);\n_this.setState({checkedKeys:checkedKeys});};var role=_this.props.role;// console.log('role',role);\n_this.state={treeData:[{title:'平台权限',key:'all',children:[]}],checkedKeys:role//选中的菜单\n};// console.log('menus',menus);\n// console.log('state-checkedKeys',this.state.checkedKeys);\nreturn _this;}_createClass(AuthForm,[{key:\"UNSAFE_componentWillReceiveProps\",value:// 根据新传入的role来更新checkedKeys状态\nfunction UNSAFE_componentWillReceiveProps(nextProps){var role=nextProps.role;console.log(role);this.setState({checkedKeys:role});// this.state.checkedKeys = menus\n}},{key:\"UNSAFE_componentWillMount\",value:function UNSAFE_componentWillMount(){//   this.state.treeData[0].children = this.getTreeNodes(menuList)\nvar treeDatas=this.state.treeData;treeDatas[0].children=this.getTreeNodes(menuList);this.setState({treeData:treeDatas});}},{key:\"render\",value:function render(){// const {role} = this.props\nvar _this$state=this.state,treeData=_this$state.treeData,checkedKeys=_this$state.checkedKeys;// console.log('render之前,',checkedKeys);\n// console.log('render',this.state.checkedKeys);\n// console.log('treeData',treeData);\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Item,{label:\"\\u89D2\\u8272\\u540D\\u79F0\",children:/*#__PURE__*/_jsx(_Input,{/* value={role.name} */disabled:true})}),/*#__PURE__*/_jsx(_Tree,{checkable:true//允许选中 \n,defaultExpandAll:true//默认展开所有结点\n,checkedKeys:{checked:checkedKeys},onCheck:this.onCheck,treeData:treeData})]});}}]);return AuthForm;}(Component);// import React, { useState } from 'react';\n// import { Tree } from 'antd';\n// const treeData = [\n//   {\n//     title: '0-0',\n//     key: '0-0',\n//     children: [\n//       {\n//         title: '0-0-0',\n//         key: '0-0-0',\n//         children: [\n//           {\n//             title: '0-0-0-0',\n//             key: '0-0-0-0',\n//           },\n//           {\n//             title: '0-0-0-1',\n//             key: '0-0-0-1',\n//           },\n//           {\n//             title: '0-0-0-2',\n//             key: '0-0-0-2',\n//           },\n//         ],\n//       },\n//       {\n//         title: '0-0-1',\n//         key: '0-0-1',\n//         children: [\n//           {\n//             title: '0-0-1-0',\n//             key: '0-0-1-0',\n//           },\n//           {\n//             title: '0-0-1-1',\n//             key: '0-0-1-1',\n//           },\n//           {\n//             title: '0-0-1-2',\n//             key: '0-0-1-2',\n//           },\n//         ],\n//       },\n//       {\n//         title: '0-0-2',\n//         key: '0-0-2',\n//       },\n//     ],\n//   },\n//   {\n//     title: '0-1',\n//     key: '0-1',\n//     children: [\n//       {\n//         title: '0-1-0-0',\n//         key: '0-1-0-0',\n//       },\n//       {\n//         title: '0-1-0-1',\n//         key: '0-1-0-1',\n//       },\n//       {\n//         title: '0-1-0-2',\n//         key: '0-1-0-2',\n//       },\n//     ],\n//   },\n//   {\n//     title: '0-2',\n//     key: '0-2',\n//   },\n// ];\n// const  AuthForm = () => {\n//   const [expandedKeys, setExpandedKeys] = useState(['0-0-0', '0-0-1','0-1']);\n//   const [checkedKeys, setCheckedKeys] = useState(['0-0-0']);\n//   const [selectedKeys, setSelectedKeys] = useState([]);\n//   const [autoExpandParent, setAutoExpandParent] = useState(true);\n//   const onExpand = (expandedKeys) => {\n//     console.log('onExpand', expandedKeys); // if not set autoExpandParent to false, if children expanded, parent can not collapse.\n//     // or, you can remove all expanded children keys.\n//     setExpandedKeys(expandedKeys);\n//     setAutoExpandParent(false);\n//   };\n//   const onCheck = (checkedKeys) => {\n//     console.log('onCheck', checkedKeys);\n//     setCheckedKeys(checkedKeys);\n//   };\n//   const onSelect = (selectedKeys, info) => {\n//     console.log('onSelect', info);\n//     setSelectedKeys(selectedKeys);\n//   };\n//   return (\n//     <Tree\n//       checkable\n//       onExpand={onExpand}\n//       expandedKeys={expandedKeys}\n//       autoExpandParent={autoExpandParent}\n//       onCheck={onCheck}\n//       checkedKeys={checkedKeys}\n//       onSelect={onSelect}\n//       selectedKeys={selectedKeys}\n//       treeData={treeData}\n//     />\n//   );\n// };\n// export default AuthForm\nexport{AuthForm as default};","map":{"version":3,"sources":["C:/Users/PC/Desktop/源码/react_Project/react-project/src/containers/Role/auth-form.jsx"],"names":["React","Component","menuList","Item","AuthForm","props","getTreeNodes","reduce","pre","item","push","title","key","children","getMenus","state","checkedKeys","onCheck","setState","role","treeData","nextProps","console","log","treeDatas","checked"],"mappings":"g3BAAA,MAAOA,CAAAA,KAAP,EAAcC,SAAd,KAA8B,OAA9B,CAEA;AACA,MAAOC,CAAAA,QAAP,KAAqB,0BAArB,C,wFAGA,GAAMC,CAAAA,IAAI,CAAG,MAAKA,IAAlB,CAEA;GACqBC,CAAAA,Q,oGAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,kBAAYC,KAAZ,CAAmB,0CACjB,uBAAMA,KAAN,EADiB,MAgBnBC,YAhBmB,CAgBJ,SAACJ,QAAD,CAAc,CAC3B,MAAOA,CAAAA,QAAQ,CAACK,MAAT,CAAgB,SAACC,GAAD,CAAKC,IAAL,CAAY,CACjCD,GAAG,CAACE,IAAJ,CACE,CACEC,KAAK,CAAEF,IAAI,CAACE,KADd,CAEEC,GAAG,CAAEH,IAAI,CAACG,GAFZ,CAGEC,QAAQ,CAAEJ,IAAI,CAACI,QAAL,CAAgB,MAAKP,YAAL,CAAkBG,IAAI,CAACI,QAAvB,CAAhB,CAAiD,IAH7D,CADF,EAOA,MAAOL,CAAAA,GAAP,CACD,CATM,CASL,EATK,CAAP,CAUD,CA3BkB,OA8BnBM,QA9BmB,CA8BR,iBAAM,OAAKC,KAAL,CAAWC,WAAjB,EA9BQ,OAkCnBC,OAlCmB,CAkCT,SAAAD,WAAW,CAAI,CACrB;AACA;AACA,MAAKE,QAAL,CAAc,CAACF,WAAW,CAAXA,WAAD,CAAd,EACH,CAtCkB,IAEVG,CAAAA,IAFU,CAEF,MAAKd,KAFH,CAEVc,IAFU,CAGjB;AACA,MAAKJ,KAAL,CAAa,CACXK,QAAQ,CAAE,CAAC,CACTT,KAAK,CAAE,MADE,CAETC,GAAG,CAAE,KAFI,CAGTC,QAAQ,CAAE,EAHD,CAAD,CADC,CAMXG,WAAW,CAAEG,IAAK;AANP,CAAb,CAQA;AACA;AAbiB,aAclB,C,qEA0BD;AACA,0CAAiCE,SAAjC,CAA2C,CACzC,GAAMF,CAAAA,IAAI,CAAGE,SAAS,CAACF,IAAvB,CACAG,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EACA,KAAKD,QAAL,CAAc,CACZF,WAAW,CAAEG,IADD,CAAd,EAGA;AACD,C,yCAED,oCAA2B,CACvB;AACA,GAAIK,CAAAA,SAAS,CAAG,KAAKT,KAAL,CAAWK,QAA3B,CACAI,SAAS,CAAC,CAAD,CAAT,CAAaX,QAAb,CAAwB,KAAKP,YAAL,CAAkBJ,QAAlB,CAAxB,CACA,KAAKgB,QAAL,CAAc,CACdE,QAAQ,CAAEI,SADI,CAAd,EAIH,C,sBAED,iBAAS,CACP;AADO,gBAEwB,KAAKT,KAF7B,CAEAK,QAFA,aAEAA,QAFA,CAESJ,WAFT,aAESA,WAFT,CAGP;AACA;AACE;AACA,mBACI,oCACE,KAAC,IAAD,EAAM,KAAK,CAAC,0BAAZ,uBACE,aAAO,uBAAwB,QAAQ,KAAvC,EADF,EADF,cAIE,YACE,SAAS,KAAC;AADZ,CAEE,gBAAgB,CAAE,IAAK;AAFzB,CAGE,WAAW,CAAE,CAACS,OAAO,CAACT,WAAT,CAHf,CAIE,OAAO,CAAE,KAAKC,OAJhB,CAKE,QAAQ,CAAEG,QALZ,EAJF,GADJ,CAcH,C,sBA3FiCnB,S,EA8FtqBG,Q","sourcesContent":["import React,{Component} from 'react'\r\nimport {Form,Input,Tree} from 'antd'\r\n// import PropTypes from 'prop-types'\r\nimport menuList from '../../config/menu_config'\r\n\r\n\r\nconst Item = Form.Item \r\n\r\n// 创建角色的form组件\r\nexport default class AuthForm extends Component {\r\n\r\n    // state = {\r\n    //     treeData: [{\r\n    //         title: '平台权限',\r\n    //         key: 'all',\r\n    //         children: []\r\n    //     }],\r\n    //     checkedKeys:[]\r\n    // }\r\n\r\n    constructor(props) {\r\n      super(props)\r\n      const {role} = this.props\r\n      // console.log('role',role);\r\n      this.state = {\r\n        treeData: [{\r\n          title: '平台权限',\r\n          key: 'all',\r\n          children: []\r\n      }],\r\n        checkedKeys: role,//选中的菜单\r\n      }\r\n      // console.log('menus',menus);\r\n      // console.log('state-checkedKeys',this.state.checkedKeys);\r\n    }\r\n\r\n    getTreeNodes = (menuList) => {\r\n      return menuList.reduce((pre,item)=>{\r\n        pre.push(\r\n          {\r\n            title: item.title,\r\n            key: item.key,\r\n            children: item.children ? this.getTreeNodes(item.children):null\r\n          }\r\n        )\r\n        return pre\r\n      },[])\r\n    }\r\n\r\n    // 为父组件获取最新menus的方法\r\n    getMenus = () => this.state.checkedKeys\r\n    \r\n\r\n    // 选中某个node \r\n    onCheck = checkedKeys => {\r\n        // console.log('onCheck', checkedKeys);\r\n        // setCheckedKeys(checkedKeys);\r\n        this.setState({checkedKeys})\r\n    };\r\n\r\n    // 根据新传入的role来更新checkedKeys状态\r\n    UNSAFE_componentWillReceiveProps(nextProps){\r\n      const role = nextProps.role\r\n      console.log(role);\r\n      this.setState({\r\n        checkedKeys: role\r\n      })\r\n      // this.state.checkedKeys = menus\r\n    }\r\n\r\n    UNSAFE_componentWillMount(){\r\n        //   this.state.treeData[0].children = this.getTreeNodes(menuList)\r\n        let treeDatas = this.state.treeData\r\n        treeDatas[0].children = this.getTreeNodes(menuList)\r\n        this.setState({\r\n        treeData: treeDatas\r\n        })\r\n\r\n    } \r\n    \r\n    render() {\r\n      // const {role} = this.props\r\n      const {treeData,checkedKeys} = this.state\r\n      // console.log('render之前,',checkedKeys);\r\n      // console.log('render',this.state.checkedKeys);\r\n        // console.log('treeData',treeData);\r\n        return (\r\n            <div>\r\n              <Item label='角色名称'>\r\n                <Input /* value={role.name} */ disabled/>\r\n              </Item>\r\n              <Tree\r\n                checkable //允许选中 \r\n                defaultExpandAll={true}//默认展开所有结点\r\n                checkedKeys={{checked:checkedKeys}}\r\n                onCheck={this.onCheck}\r\n                treeData={treeData} \r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// import React, { useState } from 'react';\r\n// import { Tree } from 'antd';\r\n// const treeData = [\r\n//   {\r\n//     title: '0-0',\r\n//     key: '0-0',\r\n//     children: [\r\n//       {\r\n//         title: '0-0-0',\r\n//         key: '0-0-0',\r\n//         children: [\r\n//           {\r\n//             title: '0-0-0-0',\r\n//             key: '0-0-0-0',\r\n//           },\r\n//           {\r\n//             title: '0-0-0-1',\r\n//             key: '0-0-0-1',\r\n//           },\r\n//           {\r\n//             title: '0-0-0-2',\r\n//             key: '0-0-0-2',\r\n//           },\r\n//         ],\r\n//       },\r\n//       {\r\n//         title: '0-0-1',\r\n//         key: '0-0-1',\r\n//         children: [\r\n//           {\r\n//             title: '0-0-1-0',\r\n//             key: '0-0-1-0',\r\n//           },\r\n//           {\r\n//             title: '0-0-1-1',\r\n//             key: '0-0-1-1',\r\n//           },\r\n//           {\r\n//             title: '0-0-1-2',\r\n//             key: '0-0-1-2',\r\n//           },\r\n//         ],\r\n//       },\r\n//       {\r\n//         title: '0-0-2',\r\n//         key: '0-0-2',\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     title: '0-1',\r\n//     key: '0-1',\r\n//     children: [\r\n//       {\r\n//         title: '0-1-0-0',\r\n//         key: '0-1-0-0',\r\n//       },\r\n//       {\r\n//         title: '0-1-0-1',\r\n//         key: '0-1-0-1',\r\n//       },\r\n//       {\r\n//         title: '0-1-0-2',\r\n//         key: '0-1-0-2',\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     title: '0-2',\r\n//     key: '0-2',\r\n//   },\r\n// ];\r\n\r\n// const  AuthForm = () => {\r\n//   const [expandedKeys, setExpandedKeys] = useState(['0-0-0', '0-0-1','0-1']);\r\n//   const [checkedKeys, setCheckedKeys] = useState(['0-0-0']);\r\n//   const [selectedKeys, setSelectedKeys] = useState([]);\r\n//   const [autoExpandParent, setAutoExpandParent] = useState(true);\r\n\r\n//   const onExpand = (expandedKeys) => {\r\n//     console.log('onExpand', expandedKeys); // if not set autoExpandParent to false, if children expanded, parent can not collapse.\r\n//     // or, you can remove all expanded children keys.\r\n\r\n//     setExpandedKeys(expandedKeys);\r\n//     setAutoExpandParent(false);\r\n//   };\r\n\r\n//   const onCheck = (checkedKeys) => {\r\n//     console.log('onCheck', checkedKeys);\r\n//     setCheckedKeys(checkedKeys);\r\n//   };\r\n\r\n//   const onSelect = (selectedKeys, info) => {\r\n//     console.log('onSelect', info);\r\n//     setSelectedKeys(selectedKeys);\r\n//   };\r\n\r\n//   return (\r\n//     <Tree\r\n//       checkable\r\n//       onExpand={onExpand}\r\n//       expandedKeys={expandedKeys}\r\n//       autoExpandParent={autoExpandParent}\r\n//       onCheck={onCheck}\r\n//       checkedKeys={checkedKeys}\r\n//       onSelect={onSelect}\r\n//       selectedKeys={selectedKeys}\r\n//       treeData={treeData}\r\n//     />\r\n//   );\r\n// };\r\n\r\n// export default AuthForm\r\n\r\n"]},"metadata":{},"sourceType":"module"}