{"ast":null,"code":"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { createDeleteUserInfoAction } from '../../redux/actions_creators/login_action';\n\nclass Admin extends Component {\n  componentDidMount() {\n    console.log();\n  }\n  /*   //退出登录的回调\r\n    logout = ()=>{\r\n      //触发redux删除所保存的用户信息\r\n      this.props.deleteUserInfo()\r\n    }\r\n    \r\n    //在render里，若想实现跳转，最好用<Redirect>\r\n    render(){\r\n      //从redux中获取user和isLogin\r\n      const {user,isLogin} = this.props.userInfo\r\n      if(!isLogin){\r\n        return <Redirect to=\"/login\"/>\r\n      }else{\r\n        console.log('登录了');\r\n        return (\r\n          <div>\r\n            <div>我是Admin组件，你的名字是:{user.username}</div>\r\n            <button onClick={this.logout}>退出登录</button>\r\n          </div>\r\n        )\r\n      }\r\n    } */\n\n\n} //如下代码中的所有key是控制容器组件传递给UI组件的key\n//如下代码中的所有value是控制容器组件传递给UI组件的value\n\n\nexport default connect(state => ({\n  userInfo: state.userInfo\n}), {\n  deleteUserInfo: createDeleteUserInfoAction\n})(Admin);","map":{"version":3,"sources":["C:/Users/PC/Desktop/react-project/src/containers/Admin/index.jsx"],"names":["React","Component","connect","Redirect","createDeleteUserInfoAction","Admin","componentDidMount","console","log","state","userInfo","deleteUserInfo"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,0BAAR,QAAyC,2CAAzC;;AACA,MAAMC,KAAN,SAAoBJ,SAApB,CAA6B;AAE3BK,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,OAAO,CAACC,GAAR;AACD;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA1B6B,C,CA6B3B;AACA;;;AACA,eAAeN,OAAO,CACpBO,KAAK,KAAK;AAACC,EAAAA,QAAQ,EAACD,KAAK,CAACC;AAAhB,CAAL,CADe,EAEtB;AACEC,EAAAA,cAAc,EAACP;AADjB,CAFsB,CAAP,CAKbC,KALa,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {createDeleteUserInfoAction} from '../../redux/actions_creators/login_action'\r\nclass Admin extends Component{\r\n\r\n  componentDidMount(){\r\n    console.log();\r\n  }\r\n/*   //退出登录的回调\r\n  logout = ()=>{\r\n    //触发redux删除所保存的用户信息\r\n    this.props.deleteUserInfo()\r\n  }\r\n  \r\n  //在render里，若想实现跳转，最好用<Redirect>\r\n  render(){\r\n    //从redux中获取user和isLogin\r\n    const {user,isLogin} = this.props.userInfo\r\n    if(!isLogin){\r\n      return <Redirect to=\"/login\"/>\r\n    }else{\r\n      console.log('登录了');\r\n      return (\r\n        <div>\r\n          <div>我是Admin组件，你的名字是:{user.username}</div>\r\n          <button onClick={this.logout}>退出登录</button>\r\n        </div>\r\n      )\r\n    }\r\n  } */\r\n}\r\n  \r\n  //如下代码中的所有key是控制容器组件传递给UI组件的key\r\n  //如下代码中的所有value是控制容器组件传递给UI组件的value\r\n  export default connect(\r\n    state => ({userInfo:state.userInfo}),\r\n  {\r\n    deleteUserInfo:createDeleteUserInfoAction\r\n  }\r\n  )(Admin)"]},"metadata":{},"sourceType":"module"}