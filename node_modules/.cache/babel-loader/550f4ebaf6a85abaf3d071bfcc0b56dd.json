{"ast":null,"code":"import _objectSpread from\"C:/Users/PC/Desktop/\\u6E90\\u7801/react_Project/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"C:/Users/PC/Desktop/\\u6E90\\u7801/react_Project/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import\"antd/es/message/style\";import _message from\"antd/es/message\";/* \r\n  1.项目中所有请求由该文件发出\r\n  2.以后每当发请求之前，都要在该文件里添加一个方法\r\n*/ // https://restapi.amap.com/v3/weather/weatherInfo?city=${cityCode}&key=36cc4d40112f012a9568e75cd1d8332e\n//引入我们自定义的myAxios\nimport myAxios from'./myAxios';import jsonp from'jsonp';//引入请求的基本路径\nimport{BASE_URL,WEATHER_AK,CITY}from'../config';//获取图片列表\nexport var reqPicsList=function reqPicsList(){return myAxios.get(\"https://picsum.photos/v2/list\");};//发起登录请求\nexport var reqLogin=function reqLogin(username,password){return myAxios.post(\"\".concat(BASE_URL,\"/login\"),{username:username,password:password});};//获取商品列表\nexport var reqCategoryList=function reqCategoryList(){return myAxios.get(\"\".concat(BASE_URL,\"/manage/category/list\"));};//获取天气信息 \nexport var reqWeather=function reqWeather(cityCode){return new Promise(function(resolve,reject){var url=\"https://restapi.amap.com/v3/weather/weatherInfo?city=\".concat(CITY,\"&key=\").concat(WEATHER_AK);// 发送jsonp请求\njsonp(url,{},function(err,data){console.log(err,data);// 如果成功了\nif(!err&&data.status==='1'){var _data$lives$=data.lives[0],weather=_data$lives$.weather,city=_data$lives$.city,temperature=_data$lives$.temperature;// console.log(weather);\nvar weatherObj={weather:weather,city:city,temperature:temperature};resolve(weatherObj);}else{// 如果失败了\n_message.error('获取天气信息失败...');return new Promise(function(){});}});});};// 添加分类\nexport var reqAddCategory=function reqAddCategory(_ref){var categoryName=_ref.categoryName;return myAxios.post(\"\".concat(BASE_URL,\"/manage/category/add\"),{categoryName:categoryName});};//更新分类\nexport var reqUpdateCategory=function reqUpdateCategory(_ref2){var categoryId=_ref2.categoryId,categoryName=_ref2.categoryName;return myAxios.post(\"\".concat(BASE_URL,\"/manage/category/update\"),{categoryName:categoryName,categoryId:categoryId});};// 获取商品分页列表\nexport var reqProductList=function reqProductList(pageNum,pageSize){return myAxios.get(\"\".concat(BASE_URL,\"/manage/product/list\"),{params:{pageNum:pageNum,pageSize:pageSize}});};// 更新商品的状态(上架或下架)\nexport var reqUpdateProdStatus=function reqUpdateProdStatus(productId,status){return myAxios.post(\"\".concat(BASE_URL,\"/manage/product/updateStatus\"),{productId:productId,status:status});};// 搜索商品分页列表 (根据商品名称 / 商品描述)\n// searchType: 搜索的类型, productName/productDesc\nexport var reqSearchProduct=function reqSearchProduct(pageNum,pageSize,searchType,keyWord){console.log(pageNum,pageSize,searchType,keyWord);return myAxios.get(\"\".concat(BASE_URL,\"/manage/product/search\"),{params:_defineProperty({pageNum:pageNum,pageSize:pageSize},searchType,keyWord)});};//根据商品id获取商品信息\n// export const reqProdById = (productId)=> myAxios.get(`${BASE_URL}/manage/product/info`,{params:{productId}})\n//根据图片唯一名，删除图片\nexport var reqDeletePicture=function reqDeletePicture(name){return myAxios.post(\"\".concat(BASE_URL,\"/manage/img/delete\"),{name:name});};//请求添加商品\n// export const reqAddProduct = (product)=> myAxios.post(`${BASE_URL}/manage/product/add`,product)\nexport var reqAddProduct=function reqAddProduct(productObj){return myAxios.post(\"\".concat(BASE_URL,\"/manage/product/add\"),_objectSpread({},productObj));};//请求更新商品\nexport var reqUpdateProduct=function reqUpdateProduct(productObj){return myAxios.post(\"\".concat(BASE_URL,\"/manage/product/update\"),_objectSpread({},productObj));};// 获取所有角色的列表\nexport var reqRoles=function reqRoles(){return myAxios.get(\"\".concat(BASE_URL,\"/manage/role/list\"));};// 添加角色\nexport var reqAddRole=function reqAddRole(roleName){return myAxios.post(\"\".concat(BASE_URL,\"/manage/role/add\"),{roleName:roleName});};// 更新角色\nexport var reqUpdateRole=function reqUpdateRole(roleObj){return myAxios.post(\"\".concat(BASE_URL,\"/manage/role/update\"),_objectSpread(_objectSpread({},roleObj),{},{auth_time:Date.now()}));};//获取用户列表\nexport var reqUsers=function reqUsers(){return myAxios.get(\"\".concat(BASE_URL,\"/manage/user/list\"));};//请求添加用户\nexport var reqAddOrUpdateUser=function reqAddOrUpdateUser(userObj){return myAxios.post(\"\".concat(BASE_URL,\"/manage/user/add\"),_objectSpread({},userObj));};//删除指定用户\nexport var reqDeleteUser=function reqDeleteUser(userId){return myAxios.post(\"\".concat(BASE_URL,\"/manage/user/delete\"),{userId:userId});};//添加/更新用户\n// export const reqAddOrUpdateUser = (user) => ajax(BASE+'/manage/user/'+(user._id?'update':'add'),user,'POST')","map":{"version":3,"sources":["C:/Users/PC/Desktop/源码/react_Project/react-project/src/api/index.js"],"names":["myAxios","jsonp","BASE_URL","WEATHER_AK","CITY","reqPicsList","get","reqLogin","username","password","post","reqCategoryList","reqWeather","cityCode","Promise","resolve","reject","url","err","data","console","log","status","lives","weather","city","temperature","weatherObj","error","reqAddCategory","categoryName","reqUpdateCategory","categoryId","reqProductList","pageNum","pageSize","params","reqUpdateProdStatus","productId","reqSearchProduct","searchType","keyWord","reqDeletePicture","name","reqAddProduct","productObj","reqUpdateProduct","reqRoles","reqAddRole","roleName","reqUpdateRole","roleObj","auth_time","Date","now","reqUsers","reqAddOrUpdateUser","userObj","reqDeleteUser","userId"],"mappings":"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","sourcesContent":["/* \r\n  1.项目中所有请求由该文件发出\r\n  2.以后每当发请求之前，都要在该文件里添加一个方法\r\n*/\r\n// https://restapi.amap.com/v3/weather/weatherInfo?city=${cityCode}&key=36cc4d40112f012a9568e75cd1d8332e\r\n//引入我们自定义的myAxios\r\nimport myAxios from './myAxios'\r\nimport jsonp from 'jsonp'\r\nimport {message} from 'antd'\r\n//引入请求的基本路径\r\nimport {BASE_URL,WEATHER_AK,CITY} from '../config'\r\n\r\n\r\n\r\n//获取图片列表\r\nexport const reqPicsList = ()=> myAxios.get(`https://picsum.photos/v2/list`)\r\n\r\n//发起登录请求\r\nexport const reqLogin = (username,password)=> myAxios.post(`${BASE_URL}/login`,{username,password})\r\n\r\n//获取商品列表\r\nexport const reqCategoryList = ()=> myAxios.get(`${BASE_URL}/manage/category/list`)\r\n\r\n//获取天气信息 \r\nexport const reqWeather = (cityCode) => {\r\n  return new Promise((resolve,reject)=>{\r\n    const url = `https://restapi.amap.com/v3/weather/weatherInfo?city=${CITY}&key=${WEATHER_AK}`\r\n    // 发送jsonp请求\r\n    jsonp(url,{},(err,data)=>{\r\n      console.log(err,data);\r\n      // 如果成功了\r\n      if (!err && data.status === '1') {\r\n        const {weather,city,temperature} = data.lives[0]\r\n        // console.log(weather);\r\n        let weatherObj = {weather,city,temperature}\r\n        resolve(weatherObj)\r\n      } else {\r\n        // 如果失败了\r\n        message.error('获取天气信息失败...')\r\n        return new Promise(()=>{})\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n// 添加分类\r\nexport const reqAddCategory = ({categoryName})=> myAxios.post(`${BASE_URL}/manage/category/add`,{categoryName})\r\n//更新分类\r\nexport const reqUpdateCategory = ({categoryId,categoryName})=> myAxios.post(`${BASE_URL}/manage/category/update`,{categoryName,categoryId})\r\n// 获取商品分页列表\r\nexport const reqProductList = (pageNum,pageSize)=> myAxios.get(`${BASE_URL}/manage/product/list`,{params:{pageNum,pageSize}})\r\n// 更新商品的状态(上架或下架)\r\nexport const reqUpdateProdStatus = (productId,status)=> myAxios.post(`${BASE_URL}/manage/product/updateStatus`,{productId,status})\r\n// 搜索商品分页列表 (根据商品名称 / 商品描述)\r\n// searchType: 搜索的类型, productName/productDesc\r\nexport const reqSearchProduct =  (pageNum,pageSize,searchType,keyWord)=> \r\n{\r\n  console.log(pageNum,pageSize,searchType,keyWord);\r\n  return myAxios.get(`${BASE_URL}/manage/product/search`,\r\n{params:{pageNum,pageSize,\r\n  // 将一个变量的值变成属性名 就要加[]\r\n  [searchType]:keyWord}\r\n})\r\n}\r\n\r\n//根据商品id获取商品信息\r\n// export const reqProdById = (productId)=> myAxios.get(`${BASE_URL}/manage/product/info`,{params:{productId}})\r\n\r\n//根据图片唯一名，删除图片\r\nexport const reqDeletePicture = (name)=> myAxios.post(`${BASE_URL}/manage/img/delete`,{name})\r\n//请求添加商品\r\n// export const reqAddProduct = (product)=> myAxios.post(`${BASE_URL}/manage/product/add`,product)\r\nexport const reqAddProduct = (productObj)=> myAxios.post(`${BASE_URL}/manage/product/add`,{...productObj})\r\n//请求更新商品\r\nexport const reqUpdateProduct = (productObj)=> myAxios.post(`${BASE_URL}/manage/product/update`,{...productObj})\r\n// 获取所有角色的列表\r\nexport const reqRoles = ()=> myAxios.get(`${BASE_URL}/manage/role/list`)\r\n// 添加角色\r\nexport const reqAddRole = (roleName)=> myAxios.post(`${BASE_URL}/manage/role/add`,{roleName})\r\n\r\n// 更新角色\r\nexport const reqUpdateRole = (roleObj)=> myAxios.post(`${BASE_URL}/manage/role/update`,{...roleObj,auth_time:Date.now()})\r\n\r\n//获取用户列表\r\nexport const reqUsers = ()=> myAxios.get(`${BASE_URL}/manage/user/list`)\r\n\r\n//请求添加用户\r\nexport const reqAddOrUpdateUser = (userObj)=> myAxios.post(`${BASE_URL}/manage/user/add`,{...userObj})\r\n\r\n//删除指定用户\r\nexport const reqDeleteUser = (userId)=> myAxios.post(`${BASE_URL}/manage/user/delete`,{userId})\r\n\r\n//添加/更新用户\r\n// export const reqAddOrUpdateUser = (user) => ajax(BASE+'/manage/user/'+(user._id?'update':'add'),user,'POST') "]},"metadata":{},"sourceType":"module"}