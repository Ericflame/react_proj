{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react-project\\\\src\\\\containers\\\\Product\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { PlusCircleOutlined, SearchOutlined } from '@ant-design/icons';\nimport { reqProductList, reqUpdateProdStatus } from '../../api/index';\nimport { PAGE_SIZE } from '../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = _Select;\nexport default class Product extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      productList: [],\n      //商品列表数据\n      total: '',\n      //当前在哪一页\n      current: 1,\n      //一共有几页\n      keyWord: '',\n      //搜索关键词\n      searchType: 'name'\n    };\n\n    this.getProductList = async (a = 1) => {\n      let result = await reqProductList(a, PAGE_SIZE);\n      const {\n        status,\n        data\n      } = result;\n\n      if (status === 0) {\n        console.log(data);\n        this.setState({\n          productList: data.list,\n          total: data.total,\n          current: data.pageNum\n        });\n      }\n    };\n\n    this.updateProdStatus = async ({\n      _id,\n      status\n    }) => {\n      let productList = [...this.state.productList];\n      if (status === 1) status = 2;else status = 1;\n      let result = await reqUpdateProdStatus(_id, status);\n\n      if (result.status === 0) {\n        _message.success('更新商品状态成功');\n\n        productList = productList.map(item => {\n          if (item._id === _id) {\n            item.status = status;\n          }\n\n          return item;\n        });\n        this.setState({\n          productList\n        });\n      } else _message.error('更新商品状态失败');\n    };\n  }\n\n  componentDidMount() {\n    this.getProductList();\n  }\n\n  // demo=(event)=>{\n  //     console.log(event.target.value);\n  //     this.setState({keyWord:event.target.value})\n  // }\n  render() {\n    const {\n      productList,\n      total,\n      current\n    } = this.state;\n    const dataSource = productList;\n    const columns = [{\n      title: '商品名称',\n      width: '18%',\n      dataIndex: 'name',\n      key: 'name'\n    }, {\n      title: '商品描述',\n      dataIndex: 'desc',\n      key: 'desc'\n    }, {\n      title: '价格',\n      dataIndex: 'price',\n      width: '9%',\n      key: 'price',\n      render: price => `￥${price}`,\n      align: 'center'\n    }, {\n      title: '状态',\n      // dataIndex: 'status',\n      width: '10%',\n      key: 'status',\n      align: 'center',\n      render: item => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(_Button, {\n            type: item.status === 1 ? 'danger' : 'primary',\n            onClick: () => {\n              this.updateProdStatus(item);\n            },\n            children: item.status === 1 ? '下架' : '上架'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.status === 1 ? '在售' : '已停售'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true);\n      }\n    }, {\n      title: '操作',\n      width: '10%',\n      // dataIndex: 'opera',\n      // key: 'opera',\n      align: 'center',\n      render: () => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(_Button, {\n            type: \"link\",\n            children: \"\\u8BE6\\u60C5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 60\n          }, this), /*#__PURE__*/_jsxDEV(_Button, {\n            type: \"link\",\n            children: \"\\u4FEE\\u6539\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this);\n      }\n    }];\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(_Card, {\n        title: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(_Select, {\n            defaultValue: \"name\",\n            style: {\n              width: 120\n            },\n            onChange: event => {\n              this.setState({\n                keyWord: event.target.value\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"name\",\n              children: \"\\u6309\\u540D\\u79F0\\u641C\\u7D22\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"desc\",\n              children: \"\\u6309\\u63CF\\u8FF0\\u641C\\u7D22\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(_Input, {\n            placeholder: \"\\u5173\\u952E\\u5B57\",\n            style: {\n              margin: '0px 1px',\n              width: '20%'\n            },\n            allowClear: true,\n            onChange: event => {\n              this.setState({\n                keyWord: event.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(_Button, {\n            type: \"primary\",\n            children: [/*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 52\n            }, this), \"\\u641C\\u7D22\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true),\n        extra: /*#__PURE__*/_jsxDEV(_Button, {\n          type: \"primary\",\n          children: [/*#__PURE__*/_jsxDEV(PlusCircleOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 51\n          }, this), \"\\u6DFB\\u52A0\\u5546\\u54C1\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 28\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Card content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Table, {\n          dataSource: dataSource,\n          columns: columns,\n          bordered: true,\n          rowKey: \"_id\",\n          pagination: {\n            total: total,\n            pageSize: PAGE_SIZE,\n            current: current,\n            onChange: this.getProductList\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/PC/Desktop/react-project/src/containers/Product/index.jsx"],"names":["React","Component","PlusCircleOutlined","SearchOutlined","reqProductList","reqUpdateProdStatus","PAGE_SIZE","Option","Product","state","productList","total","current","keyWord","searchType","getProductList","a","result","status","data","console","log","setState","list","pageNum","updateProdStatus","_id","success","map","item","error","componentDidMount","render","dataSource","columns","title","width","dataIndex","key","price","align","event","target","value","margin","pageSize","onChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Card, Button, Select, Input, Table,message } from 'antd';\r\nimport { PlusCircleOutlined, SearchOutlined } from '@ant-design/icons'\r\nimport { reqProductList,reqUpdateProdStatus } from '../../api/index'\r\nimport { PAGE_SIZE } from '../../config';\r\n\r\n\r\n\r\nconst { Option } = Select;\r\nexport default class Product extends Component {\r\n    state = {\r\n        productList: [], //商品列表数据\r\n        total: '',//当前在哪一页\r\n        current: 1,//一共有几页\r\n        keyWord:'',//搜索关键词\r\n        searchType:'name',\r\n    }\r\n    componentDidMount() {\r\n        this.getProductList()\r\n    }\r\n\r\n    getProductList = async (a = 1) => {\r\n        let result = await reqProductList(a, PAGE_SIZE)\r\n        const { status, data} = result\r\n        if (status === 0) {\r\n            console.log(data);\r\n            this.setState({\r\n                productList: data.list,\r\n                total: data.total,\r\n                current: data.pageNum\r\n            })\r\n        }\r\n    }\r\n    updateProdStatus = async({_id,status})=>{\r\n        let productList = [...this.state.productList]\r\n        if(status === 1) status = 2\r\n        else status = 1\r\n        let result = await reqUpdateProdStatus(_id,status)\r\n        if(result.status===0) {\r\n          message.success('更新商品状态成功')\r\n          productList = productList.map((item)=>{\r\n            if(item._id === _id){\r\n              item.status = status\r\n            }\r\n            return item\r\n          })\r\n          this.setState({productList})\r\n        }\r\n        else message.error('更新商品状态失败')\r\n      }\r\n\r\n    // demo=(event)=>{\r\n    //     console.log(event.target.value);\r\n    //     this.setState({keyWord:event.target.value})\r\n    // }\r\n\r\n    render() {\r\n        const { productList, total, current } = this.state\r\n        const dataSource = productList\r\n        const columns = [\r\n            {\r\n                title: '商品名称',\r\n                width: '18%',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n            },\r\n            {\r\n                title: '商品描述',\r\n                dataIndex: 'desc',\r\n                key: 'desc',\r\n            },\r\n            {\r\n                title: '价格',\r\n                dataIndex: 'price',\r\n                width: '9%',\r\n                key: 'price',\r\n                render: price => `￥${price}`,\r\n                align: 'center',\r\n            },\r\n            {\r\n                title: '状态',\r\n                // dataIndex: 'status',\r\n                width: '10%',\r\n                key: 'status',\r\n                align: 'center',\r\n                render: (item) => {\r\n                    return (\r\n                        <>\r\n                            <Button \r\n                            type={item.status === 1 ? 'danger':'primary'}\r\n                            onClick={()=>{this.updateProdStatus(item)}}\r\n                            >\r\n                                {item.status === 1 ? '下架' : '上架'}\r\n                            </Button><br />\r\n                            <span>{item.status === 1 ? '在售' : '已停售'}</span>\r\n                        </>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                title: '操作',\r\n                width: '10%',\r\n                // dataIndex: 'opera',\r\n                // key: 'opera',\r\n                align: 'center',\r\n                render: () => {\r\n                    return (\r\n                        <div>\r\n                            <Button type=\"link\">详情</Button><br />\r\n                            <Button type=\"link\">修改</Button>\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n        ];\r\n        return (\r\n            <>\r\n                <Card\r\n                    title={\r\n                        <>\r\n                            <Select defaultValue=\"name\" style={{ width: 120 }} \r\n                            onChange = {(event)=>{this.setState({keyWord:event.target.value})}}>\r\n                                <Option value=\"name\">按名称搜索</Option>\r\n                                <Option value=\"desc\">按描述搜索</Option>\r\n                            </Select>\r\n                            <Input placeholder=\"关键字\"\r\n                                style={{ margin: '0px 1px', width: '20%' }}\r\n                                allowClear\r\n                                onChange = {(event)=>{this.setState({keyWord:event.target.value})}}\r\n                            />\r\n                            <Button type=\"primary\"><SearchOutlined />搜索</Button>\r\n\r\n                        </>\r\n                    }\r\n                    extra={<Button type=\"primary\"><PlusCircleOutlined />添加商品</Button>}\r\n                >\r\n                    <p>Card content</p>\r\n                    <Table\r\n                        dataSource={dataSource}\r\n                        columns={columns}\r\n                        bordered\r\n                        rowKey=\"_id\"\r\n                        pagination={{\r\n                            total: total,\r\n                            pageSize: PAGE_SIZE,\r\n                            current: current,\r\n                            onChange: this.getProductList\r\n                        }}\r\n                    />\r\n                </Card>\r\n            </>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}