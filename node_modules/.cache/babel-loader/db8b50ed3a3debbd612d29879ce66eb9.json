{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react-project\\\\src\\\\containers\\\\Admin\\\\index.jsx\",\n    _dec,\n    _class,\n    _temp;\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { createDeleteUserInfoAction } from '../../redux/actions_creators/login_action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet Admin = (_dec = connect(state => ({\n  userInfo: state.userInfo\n}), {\n  deleteUserInfo: createDeleteUserInfoAction\n}), _dec(_class = (_temp = class Admin extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.logout = () => {\n      //触发redux删除所保存的用户信息\n      this.props.deleteUserInfo();\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n  } //退出登录的回调\n\n\n  //在render里，若想实现跳转，最好用<Redirect>              \n  render() {\n    //从redux中获取user和isLogin\n    const {\n      user,\n      isLogin\n    } = this.props.userInfo;\n\n    if (!isLogin) {\n      console.log('没有登录');\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 14\n      }, this);\n    } else {\n      console.log('登录了');\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\u6211\\u662FAdmin\\u7EC4\\u4EF6\\uFF0C\\u4F60\\u7684\\u540D\\u5B57\\u662F:\", user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.logout,\n          children: \"\\u9000\\u51FA\\u767B\\u5F55\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}, _temp)) || _class); //如下代码中的所有key是控制容器组件传递给UI组件的key\n//如下代码中的所有value是控制容器组件传递给UI组件的value\n\nexport default connect(state => ({\n  userInfo: state.userInfo\n}), {\n  deleteUserInfo: createDeleteUserInfoAction\n})(Admin);","map":{"version":3,"sources":["C:/Users/PC/Desktop/react-project/src/containers/Admin/index.jsx"],"names":["React","Component","connect","Redirect","createDeleteUserInfoAction","Admin","state","userInfo","deleteUserInfo","logout","props","componentDidMount","console","log","render","user","isLogin","username"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,0BAAR,QAAyC,2CAAzC;;IASMC,K,WANLH,OAAO,CACNI,KAAK,KAAK;AAACC,EAAAA,QAAQ,EAACD,KAAK,CAACC;AAAhB,CAAL,CADC,EAEN;AACEC,EAAAA,cAAc,EAACJ;AADjB,CAFM,C,yBAAR,MAMMC,KANN,SAMoBJ,SANpB,CAM6B;AAAA;AAAA;;AAAA,SAO3BQ,MAP2B,GAOlB,MAAI;AACX;AACA,WAAKC,KAAL,CAAWF,cAAX;AACD,KAV0B;AAAA;;AAE3BG,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AACD,GAJ0B,CAM3B;;;AAMA;AACAI,EAAAA,MAAM,GAAE;AACN;AACA,UAAM;AAACC,MAAAA,IAAD;AAAMC,MAAAA;AAAN,QAAiB,KAAKN,KAAL,CAAWH,QAAlC;;AACA,QAAG,CAACS,OAAJ,EAAY;AAEVJ,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAJD,MAIK;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,0BACE;AAAA,gCACE;AAAA,2FAAsBE,IAAI,CAACE,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,KAAKR,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;AACF;;AA7B0B,C,sBAgC3B;AACA;;AAGF,eAAeP,OAAO,CAClBI,KAAK,KAAK;AAACC,EAAAA,QAAQ,EAACD,KAAK,CAACC;AAAhB,CAAL,CADa,EAEpB;AACEC,EAAAA,cAAc,EAACJ;AADjB,CAFoB,CAAP,CAKXC,KALW,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {createDeleteUserInfoAction} from '../../redux/actions_creators/login_action'\r\n\r\n\r\n@connect(\r\n  state => ({userInfo:state.userInfo}),\r\n  {\r\n    deleteUserInfo:createDeleteUserInfoAction\r\n  }\r\n)\r\nclass Admin extends Component{\r\n\r\n  componentDidMount(){\r\n    console.log(this.props);\r\n  }\r\n\r\n  //退出登录的回调\r\n  logout = ()=>{\r\n    //触发redux删除所保存的用户信息\r\n    this.props.deleteUserInfo()\r\n  }\r\n  \r\n  //在render里，若想实现跳转，最好用<Redirect>              \r\n  render(){\r\n    //从redux中获取user和isLogin\r\n    const {user,isLogin} = this.props.userInfo\r\n    if(!isLogin){\r\n\r\n      console.log('没有登录');\r\n      return <Redirect to=\"/login\"/>\r\n    }else{\r\n      console.log('登录了');\r\n      return (\r\n        <div>\r\n          <div>我是Admin组件，你的名字是:{user.username}</div>\r\n          <button onClick={this.logout}>退出登录</button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n  \r\n  //如下代码中的所有key是控制容器组件传递给UI组件的key\r\n  //如下代码中的所有value是控制容器组件传递给UI组件的value\r\n\r\n\r\nexport default connect(\r\n    state => ({userInfo:state.userInfo}),\r\n  {\r\n    deleteUserInfo:createDeleteUserInfoAction\r\n  }\r\n  )(Admin)\r\n"]},"metadata":{},"sourceType":"module"}