{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react-project\\\\src\\\\containers\\\\User\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport ''; // import { formateDate } from '../../utils/dateUtils'\n// import LinkButton from '../../components/link-button/index'\n// import {reqDeleteUser, reqUsers,reqAddOrUpdateUser} from '../../api/index'\n\nimport UserForm from './user-form'; // 用户路由\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class User extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      //用来存放用户列表的数组\n      roles: [],\n      //所有角色的列表\n      isShow: false //是否显示对话框\n\n    };\n\n    this.addOrUpdateUser = async () => {\n      this.setState({\n        isShow: false\n      }); // console.log(this.form);\n\n      /*  // 收集输入数据\r\n       const user = this.form.getFieldsValue()\r\n       // console.log(user);\r\n       this.form.resetFields()\r\n          // 如果是更新 需要给user指定_id属性\r\n       if (this.user) {\r\n         user._id = this.user._id\r\n       }\r\n          // 提交添加的请求\r\n       const result = await reqAddOrUpdateUser(user)\r\n       if (result.status === 0) {\r\n         message.success(`${this.user?'修改':'添加'}用户成功！`)\r\n         // 更新显示的列表\r\n         this.getUsers()\r\n       } */\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        isShow: false\n      });\n      this.form.resetFields();\n    };\n  }\n\n  /*  // 获取用户\r\n   getUsers = async () => {\r\n     const result = await reqUsers()\r\n     if (result.status === 0) {\r\n       const {users,roles} = result.data\r\n       // console.log(result.data);\r\n       this.initRoleNames(roles)\r\n       this.setState({\r\n         users,\r\n         roles,\r\n       })\r\n     }\r\n   }\r\n      // 删除指定用户\r\n   deleteUser = (user) => {\r\n     Modal.confirm({\r\n       title: `确认删除${user.username}吗？`,\r\n       onOk: async () => {\r\n         const result = await reqDeleteUser(user._id)\r\n         if (result.status === 0) {\r\n           message.success('删除用户成功！')\r\n           this.getUsers()\r\n         }\r\n       }\r\n     })\r\n   }\r\n      UNSAFE_componentWillMount() {\r\n     this.initColumns()\r\n   }\r\n      componentDidMount(){\r\n     this.getUsers()\r\n   } */\n  render() {\n    const {\n      users,\n      roles,\n      isShow\n    } = this.state;\n    const dataSource = [];\n    const columns = [{\n      title: '用户名',\n      dataIndex: 'username'\n    }, {\n      title: '邮箱',\n      dataIndex: 'email'\n    }, {\n      title: '电话',\n      dataIndex: 'phone'\n    }, {\n      title: '注册时间',\n      dataIndex: 'create_time',\n      render: time => dayjs(time).format('YYYY年 MM月DD日 HH:mm:ss')\n    }, {\n      title: '所属角色',\n      dataIndex: 'role_id',\n      render: role_id => //this.roleNames[role_id]\n      (this.state.roles.find(role => role._id === role_id) || this.state.roles[0]).name // console.log('this',this.state.roles)\n\n    }, {\n      title: '操作',\n      render: user => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(_Button, {\n          type: \"link\",\n          onClick: () => this.showUpdate(user),\n          children: \"\\u4FEE\\u6539\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(_Button, {\n          type: \"link\",\n          onClick: () => {\n            this.deleteUser(user);\n          },\n          children: \"\\u5220\\u9664\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this)\n    }];\n\n    const title = /*#__PURE__*/_jsxDEV(_Button, {\n      onClick: () => this.showAdd,\n      type: \"primary\",\n      children: \"\\u521B\\u5EFA\\u7528\\u6237\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 23\n    }, this);\n\n    const user = this.user || {};\n    return /*#__PURE__*/_jsxDEV(_Card, {\n      title: title,\n      children: [/*#__PURE__*/_jsxDEV(_Table, {\n        bordered: true,\n        rowKey: \"_id\",\n        dataSource: users,\n        columns: this.columns,\n        pagination: {\n          defaultPageSize: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n        title: user._id ? '修改用户' : '添加用户',\n        visible: isShow,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/PC/Desktop/react-project/src/containers/User/index.jsx"],"names":["React","Component","UserForm","User","state","users","roles","isShow","addOrUpdateUser","setState","handleCancel","form","resetFields","render","dataSource","columns","title","dataIndex","time","dayjs","format","role_id","find","role","_id","name","user","showUpdate","deleteUser","showAdd","defaultPageSize","handleOk"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Table, Modal, Card, message } from 'antd'\r\nimport {} from ''\r\n// import { formateDate } from '../../utils/dateUtils'\r\n// import LinkButton from '../../components/link-button/index'\r\n// import {reqDeleteUser, reqUsers,reqAddOrUpdateUser} from '../../api/index'\r\nimport UserForm from './user-form'\r\n\r\n\r\n// 用户路由\r\nexport default class User extends Component {\r\n    state = {\r\n        users: [],  //用来存放用户列表的数组\r\n        roles: [],  //所有角色的列表\r\n        isShow: false,  //是否显示对话框\r\n    }\r\n     /* // 根据role的数组，生成包含所有角色名的对象(属性名用角色id值)\r\n     initRoleNames = (roles) => {\r\n       const roleNames = roles.reduce((pre,role) => {\r\n         pre[role._id] = role.name\r\n         return pre\r\n       },{})\r\n       //保存值\r\n       this.roleNames = roleNames\r\n     }\r\n \r\n     // 创建用户\r\n     showAdd = () => {\r\n       // 去除前面的user\r\n       this.user = null\r\n       this.setState({isShow:true})\r\n     }\r\n \r\n     // 显示修改界面\r\n     showUpdate = (user) => {\r\n       // 保存user的值\r\n       this.user = user\r\n       // 显示界面\r\n       this.setState({\r\n         isShow: true,\r\n       })\r\n     } */\r\n \r\n     // 添加/更新用户\r\n     addOrUpdateUser = async () => {\r\n \r\n       this.setState({isShow:false})\r\n       // console.log(this.form);\r\n \r\n      /*  // 收集输入数据\r\n       const user = this.form.getFieldsValue()\r\n       // console.log(user);\r\n       this.form.resetFields()\r\n \r\n       // 如果是更新 需要给user指定_id属性\r\n       if (this.user) {\r\n         user._id = this.user._id\r\n       }\r\n \r\n       // 提交添加的请求\r\n       const result = await reqAddOrUpdateUser(user)\r\n       if (result.status === 0) {\r\n         message.success(`${this.user?'修改':'添加'}用户成功！`)\r\n         // 更新显示的列表\r\n         this.getUsers()\r\n       } */\r\n     }\r\n\r\n    // 取消的回调\r\n    handleCancel = () => {\r\n        this.setState({ isShow: false })\r\n        this.form.resetFields()\r\n    }\r\n\r\n    /*  // 获取用户\r\n     getUsers = async () => {\r\n       const result = await reqUsers()\r\n       if (result.status === 0) {\r\n         const {users,roles} = result.data\r\n         // console.log(result.data);\r\n         this.initRoleNames(roles)\r\n         this.setState({\r\n           users,\r\n           roles,\r\n         })\r\n       }\r\n     }\r\n \r\n     // 删除指定用户\r\n     deleteUser = (user) => {\r\n       Modal.confirm({\r\n         title: `确认删除${user.username}吗？`,\r\n         onOk: async () => {\r\n           const result = await reqDeleteUser(user._id)\r\n           if (result.status === 0) {\r\n             message.success('删除用户成功！')\r\n             this.getUsers()\r\n           }\r\n         }\r\n       })\r\n     }\r\n \r\n     UNSAFE_componentWillMount() {\r\n       this.initColumns()\r\n     }\r\n \r\n     componentDidMount(){\r\n       this.getUsers()\r\n     } */\r\n\r\n    render() {\r\n        const { users, roles, isShow } = this.state\r\n        const dataSource = []\r\n        const columns = [\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'username',\r\n            },\r\n            {\r\n                title: '邮箱',\r\n                dataIndex: 'email',\r\n            },\r\n            {\r\n                title: '电话',\r\n                dataIndex: 'phone',\r\n            },\r\n            {\r\n                title: '注册时间',\r\n                dataIndex: 'create_time',\r\n                render: (time) => dayjs(time).format('YYYY年 MM月DD日 HH:mm:ss')\r\n            },\r\n            {\r\n                title: '所属角色',\r\n                dataIndex: 'role_id',\r\n                render: (role_id) =>  //this.roleNames[role_id]\r\n                    (this.state.roles.find(role => role._id === role_id) || this.state.roles[0]).name\r\n                // console.log('this',this.state.roles)\r\n            },\r\n            {\r\n                title: '操作',\r\n                render: (user) => (\r\n                    <span>\r\n                        <Button type='link' onClick={() => this.showUpdate(user)}>修改</Button>\r\n                        <Button type='link' onClick={() => { this.deleteUser(user) }}>删除</Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ]\r\n        const title = <Button onClick={() => this.showAdd}\r\n            type='primary'>创建用户</Button>\r\n        const user = this.user || {}\r\n        return (\r\n            <Card title={title}>\r\n                <Table\r\n                    bordered\r\n                    rowKey='_id'\r\n                    dataSource={users}\r\n                    columns={this.columns}\r\n                    pagination={{ defaultPageSize: 3 }} />\r\n\r\n                <Modal\r\n                    title={user._id ? '修改用户' : '添加用户'}\r\n                    visible={isShow}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}>\r\n                    {/* <UserForm roles={roles}\r\n               setForm={form => this.form = form}\r\n               user={user}/>     */}\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}