{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react-project\\\\src\\\\containers\\\\Login\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createDemo1Action, createDemo2Action } from '../../redux/actions_creators/test_action';\nimport './css/login.less';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport logo from './img/dora_17.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Item\n} = _Form;\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = event => {\n      event.preventDefault(); //阻止默认事件--禁止form表单提交---通过ajax发送\n\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          //alert('向服务器发送登录请求')\n          this.props.demo2('0719');\n        } else {\n          _message.error('表单输入有误，请检查！');\n        }\n      });\n    };\n\n    this.NameValidator = (rule, value, callback) => {\n      if (value) {\n        if (value.length >= 4 && value.length <= 30) {\n          return Promise.resolve();\n        } else {\n          return Promise.reject('名称长度为4-30个字符，一个中文字等于2个字符');\n        }\n      } else {\n        return Promise.resolve();\n      }\n    };\n\n    this.tailLayout = {\n      wrapperCol: {\n        offset: 10,\n        span: 16\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\u5546\\u54C1\\u7BA1\\u7406\\u7CFB\\u7EDF\", this.props.test]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"login-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u7528\\u6237\\u767B\\u9646\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Form, {\n          onSubmit: this.handleSubmit\n          /* onFinish={onFinish} */\n          ,\n          className: \"login-form\",\n          initialValues: {\n            username: '云显靖' //默认值\n\n          },\n          children: [/*#__PURE__*/_jsxDEV(Item, {\n            name: \"username\",\n            rules: [// 声明式验证: 直接使用别人定义好的验证规则进行验证\n            {\n              required: true,\n              whitespace: true,\n              message: '用户名必须输入'\n            }, {\n              min: 4,\n              message: '用户名至少4位'\n            }, {\n              max: 12,\n              message: '用户名最多12位'\n            }, {\n              pattern: /^[a-zA-Z0-9_]+$/,\n              message: '用户名必须是英文、数字或下划线组成'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n                className: \"site-form-item-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 41\n              }, this),\n              placeholder: \"\\u7528\\u6237\\u540D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Item, {\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: 'Please input your Password!'\n            }, {\n              validator: this.NameValidator\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n                className: \"site-form-item-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 41\n              }, this),\n              type: \"password\",\n              placeholder: \"\\u5BC6\\u7801\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Item, { ...this.tailLayout,\n            children: /*#__PURE__*/_jsxDEV(_Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              className: \"login-form-button\",\n              children: \"\\u767B\\u5F55\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n} // 暴露容器\n\n\nexport default connect(state => ({\n  test: state.test\n}), {\n  demo1: createDemo1Action,\n  demo2: createDemo2Action\n})(Login);","map":{"version":3,"sources":["C:/Users/PC/Desktop/react-project/src/containers/Login/index.jsx"],"names":["React","Component","connect","createDemo1Action","createDemo2Action","UserOutlined","LockOutlined","logo","Item","Login","handleSubmit","event","preventDefault","props","form","validateFields","err","values","demo2","error","NameValidator","rule","value","callback","length","Promise","resolve","reject","tailLayout","wrapperCol","offset","span","componentDidMount","console","log","render","test","username","required","whitespace","message","min","max","pattern","validator","state","demo1"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { connect } from 'react-redux'\r\nimport { createDemo1Action, createDemo2Action } from '../../redux/actions_creators/test_action'\r\nimport './css/login.less'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\r\nimport logo from './img/dora_17.png'\r\nconst { Item } = Form\r\n\r\nclass Login extends Component {\r\n    // 点击登录按钮的回调\r\n      handleSubmit = (event)=>{\r\n    event.preventDefault();//阻止默认事件--禁止form表单提交---通过ajax发送\r\n    this.props.form.validateFields((err, values) => {\r\n      if(!err){\r\n        //alert('向服务器发送登录请求')\r\n        this.props.demo2('0719')\r\n      }else{\r\n        message.error('表单输入有误，请检查！')\r\n      }\r\n    });\r\n  }\r\n    // 密码规则的回调\r\n    NameValidator = (rule, value, callback) => {\r\n        if (value) {\r\n            if (value.length >= 4 && value.length <= 30) {\r\n                return Promise.resolve()\r\n            } else {\r\n                return Promise.reject('名称长度为4-30个字符，一个中文字等于2个字符')\r\n            }\r\n        } else {\r\n            return Promise.resolve()\r\n        }\r\n    };\r\n\r\n    tailLayout = {\r\n        wrapperCol: { offset: 10, span: 16 },\r\n    };\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"login\">\r\n                <header>\r\n                    <img src={logo} alt=\"logo\" />\r\n                    <h1>商品管理系统{this.props.test}</h1>\r\n\r\n                </header>\r\n                <section className=\"login-content\">\r\n                    <h1>用户登陆</h1>\r\n                    {/*  表单函数组件*/}\r\n                    <Form\r\n                        onSubmit={this.handleSubmit}\r\n            /* onFinish={onFinish} */ className=\"login-form\"\r\n                        initialValues={{\r\n                            username: '云显靖',//默认值\r\n                        }}\r\n                    >\r\n                        <Item\r\n                            name=\"username\"\r\n                            rules={[// 声明式验证: 直接使用别人定义好的验证规则进行验证\r\n                                { required: true, whitespace: true, message: '用户名必须输入' },\r\n                                { min: 4, message: '用户名至少4位' },\r\n                                { max: 12, message: '用户名最多12位' },\r\n                                { pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是英文、数字或下划线组成' },\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                                placeholder=\"用户名\"\r\n                            />\r\n                        </Item>\r\n                        <Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your Password!',\r\n                                }, { validator: this.NameValidator, }\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                type=\"password\"\r\n                                placeholder=\"密码\"\r\n                            />\r\n                        </Item>\r\n                        <Item {...this.tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                登录\r\n          </Button>\r\n                        </Item>\r\n                    </Form>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// 暴露容器\r\nexport default connect(\r\n    state => ({ test: state.test }),\r\n    {\r\n        demo1: createDemo1Action,\r\n        demo2: createDemo2Action\r\n    }\r\n)(Login)\r\n\r\n"]},"metadata":{},"sourceType":"module"}