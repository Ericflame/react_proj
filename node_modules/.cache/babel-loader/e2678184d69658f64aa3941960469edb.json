{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react-project\\\\src\\\\containers\\\\Category\\\\index.jsx\",\n    _dec,\n    _class,\n    _temp;\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { PlusCircleOutlined } from '@ant-design/icons';\nimport { reqCategoryList, reqAddCategory, reqUpdateCategory } from '../../api/index';\nimport { PAGE_SIZE } from '../../config';\nimport AddForm from '../../components/AddForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet Category = (_dec = connect(state => ({})), _dec(_class = (_temp = class Category extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      categoryList: [],\n      //商品分类列表\n      visible: false,\n      //控制弹窗隐藏或显示\n      operType: 'add',\n      //操作类型\n      showStatus: 0,\n      //标识添加/更新的确认框是否显示 \n      isLoading: true,\n      //是否处于加载中\n      modalCurrentValue: '',\n      //弹窗显示的值---用于数据回显\n      modalCurrentId: ''\n    };\n\n    this.getCategoryList = async () => {\n      let result = await reqCategoryList();\n      this.setState({\n        isLoading: false\n      });\n      const {\n        status,\n        data,\n        msg\n      } = result;\n      /* data.map((item)=>{\r\n          item.key = item._id\r\n          return item\r\n      }) */\n\n      if (status === 0) {\n        this.setState({\n          categoryList: data.reverse()\n        }); //把商品的分类信息放入redux\n      } else {\n        _message.error(msg, 1);\n      }\n    };\n\n    this.demo = a => {\n      console.log(a);\n    };\n\n    this.showAdd = () => {\n      this.setState({\n        operType: 'add',\n        modalCurrentValue: '',\n        modalCurrentId: '',\n        visible: true\n      });\n    };\n\n    this.showUpdate = item => {\n      console.log(item);\n      const {\n        _id,\n        name\n      } = item;\n      this.setState({\n        modalCurrentValue: name,\n        operType: 'update',\n        visible: true,\n        modalCurrentId: _id\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        visible: false\n      });\n      this.form.resetFields();\n    };\n\n    this.toAdd = async values => {\n      let result = await reqAddCategory(values);\n      const {\n        status,\n        data,\n        msg\n      } = result;\n\n      if (status === 0) {\n        let categoryList = [...this.state.categoryList];\n        categoryList.unshift(data);\n        this.setState({\n          categoryList\n        });\n\n        _message.success('新增商品分类成功');\n\n        this.setState({\n          visible: false\n        });\n        this.form.resetFields();\n      }\n\n      if (status === 1) _message.error(msg, 1);\n    };\n\n    this.handleOk = () => {\n      const {\n        operType\n      } = this.state;\n      this.form.validateFields().then(values => {\n        if (operType === 'add') {\n          this.toAdd(values);\n          console.log(\"你要新增\");\n        }\n\n        if (operType === 'update') {\n          // console.log(this.state.modalCurrentId,values.categoryName);\n          // this.toUpdate(this.state.modalCurrentId, values.categoryName)\n          const categoryId = this.state.modalCurrentId;\n          const categoryName = values.categoryName;\n          const categoryObj = {\n            categoryId,\n            categoryName\n          };\n          this.toUpdate(categoryObj);\n          console.log(\"你要修改\");\n        }\n      }).catch(errorInfo => {\n        _message.warning('表单输入有误，请检查', 1);\n\n        return;\n      });\n    };\n\n    this.toUpdate = async categoryObj => {\n      let result = await reqUpdateCategory(categoryObj);\n      const {\n        status,\n        msg\n      } = result;\n\n      if (status === 0) {\n        _message.success('更新分类名称成功', 1);\n\n        this.getCategoryList();\n        this.setState({\n          visible: false\n        });\n        this.form.resetFields();\n      } else {\n        _message.error(msg, 1);\n      }\n    };\n  }\n\n  componentDidMount() {\n    //请求商品分类列表\n    this.getCategoryList();\n  } //获取商品分类列表\n\n\n  render() {\n    const {\n      categoryList,\n      visible,\n      operType,\n      isLoading,\n      modalCurrentValue\n    } = this.state;\n    const dataSource = categoryList;\n    const columns = [{\n      title: '分类名',\n      dataIndex: 'name',\n      key: 'name'\n    }, {\n      title: '操作',\n      // dataIndex: 'name',\n      key: 'haha',\n      render: item => {\n        return /*#__PURE__*/_jsxDEV(_Button, {\n          type: \"link\",\n          onClick: () => {\n            this.showUpdate(item);\n          },\n          children: \"\\u4FEE\\u6539\\u5206\\u7C7B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 44\n        }, this);\n      },\n      width: '25%',\n      align: 'center'\n    }];\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(_Card, {\n        title: \"\",\n        extra: /*#__PURE__*/_jsxDEV(_Button, {\n          onClick: this.showAdd,\n          type: \"primary\",\n          href: \"#\",\n          children: [/*#__PURE__*/_jsxDEV(PlusCircleOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this), \"\\u6DFB\\u52A0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 39\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(_Table, {\n          rowKey: \"_id\",\n          bordered: true,\n          dataSource: dataSource,\n          columns: columns,\n          pagination: {\n            pageSize: PAGE_SIZE,\n            showQuickJumper: true\n          },\n          loading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n        okText: \"\\u786E\\u5B9A\",\n        cancelText: \"\\u53D6\\u6D88\",\n        title: operType === 'add' ? '新增分类' : '修改分类',\n        visible: visible,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        children: /*#__PURE__*/_jsxDEV(AddForm\n        /* categorys={categorys} parentId={parentId} */\n        , {\n          modalCurrentValue: modalCurrentValue,\n          setForm: form => {\n            this.form = form;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}, _temp)) || _class);\nexport { Category as default };","map":{"version":3,"sources":["C:/Users/PC/Desktop/react-project/src/containers/Category/index.jsx"],"names":["React","Component","connect","PlusCircleOutlined","reqCategoryList","reqAddCategory","reqUpdateCategory","PAGE_SIZE","AddForm","Category","state","categoryList","visible","operType","showStatus","isLoading","modalCurrentValue","modalCurrentId","getCategoryList","result","setState","status","data","msg","reverse","error","demo","a","console","log","showAdd","showUpdate","item","_id","name","handleCancel","form","resetFields","toAdd","values","unshift","success","handleOk","validateFields","then","categoryId","categoryName","categoryObj","toUpdate","catch","errorInfo","warning","componentDidMount","render","dataSource","columns","title","dataIndex","key","width","align","pageSize","showQuickJumper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Card, Button, Table, message, Modal } from 'antd';\r\nimport {connect} from 'react-redux'\r\nimport { PlusCircleOutlined } from '@ant-design/icons'\r\nimport { reqCategoryList,reqAddCategory,reqUpdateCategory } from '../../api/index'\r\nimport { PAGE_SIZE } from '../../config'\r\nimport AddForm from '../../components/AddForm'\r\n\r\n@connect(\r\n    state => ({}),\r\n)\r\nexport default class Category extends Component {\r\n    state = {\r\n        categoryList: [],//商品分类列表\r\n        visible: false,//控制弹窗隐藏或显示\r\n        operType: 'add',//操作类型\r\n        showStatus: 0, //标识添加/更新的确认框是否显示 \r\n        isLoading: true,//是否处于加载中\r\n        modalCurrentValue: '',//弹窗显示的值---用于数据回显\r\n        modalCurrentId: '',\r\n    }\r\n    componentDidMount() {\r\n        //请求商品分类列表\r\n        this.getCategoryList()\r\n    }\r\n    //获取商品分类列表\r\n    getCategoryList = async () => {\r\n        let result = await reqCategoryList()\r\n        this.setState({ isLoading: false })\r\n        const { status, data, msg } = result\r\n        /* data.map((item)=>{\r\n            item.key = item._id\r\n            return item\r\n        }) */\r\n        if (status === 0) {\r\n            this.setState({ categoryList: data.reverse() })\r\n            //把商品的分类信息放入redux\r\n\r\n        } else {\r\n            message.error(msg, 1)\r\n        }\r\n    }\r\n    demo = (a) => {\r\n        console.log(a);\r\n    }\r\n    // 展示弹窗\r\n    showAdd = () => {\r\n        this.setState({\r\n            operType: 'add',\r\n            modalCurrentValue:'',\r\n            modalCurrentId:'',\r\n            visible: true,\r\n        })\r\n    }\r\n    showUpdate = (item) => {\r\n        console.log(item);\r\n        const { _id, name } = item\r\n        this.setState({\r\n            modalCurrentValue: name,\r\n            operType: 'update',\r\n            visible: true,\r\n            modalCurrentId: _id\r\n        })\r\n    }\r\n    // 响应点击取消\r\n    handleCancel = () => {\r\n        this.setState({ visible: false })\r\n        this.form.resetFields()\r\n    }\r\n    toAdd = async (values) => {\r\n        let result = await reqAddCategory(values)\r\n        const { status, data, msg } = result\r\n        if (status === 0) {\r\n            let categoryList = [...this.state.categoryList]\r\n            categoryList.unshift(data)\r\n            this.setState({ categoryList })\r\n            message.success('新增商品分类成功')\r\n            this.setState({ visible: false })\r\n            this.form.resetFields()\r\n\r\n        }\r\n        if (status === 1) message.error(msg, 1)\r\n    }\r\n    // 显示添加的确认框\r\n    handleOk = () => {\r\n        const { operType } = this.state\r\n        this.form.validateFields()\r\n            .then(values => {\r\n                if (operType === 'add') {\r\n                    this.toAdd(values)\r\n                    console.log(\"你要新增\");\r\n                }\r\n                if (operType === 'update') {\r\n                    // console.log(this.state.modalCurrentId,values.categoryName);\r\n                    // this.toUpdate(this.state.modalCurrentId, values.categoryName)\r\n                    const categoryId = this.state.modalCurrentId\r\n                    const categoryName = values.categoryName\r\n                    const categoryObj = {categoryId,categoryName}\r\n                    this.toUpdate(categoryObj)\r\n                    console.log(\"你要修改\");\r\n                }\r\n            })\r\n            .catch(errorInfo => {\r\n                message.warning('表单输入有误，请检查', 1)\r\n                return\r\n            })\r\n    }\r\n    toUpdate = async(categoryObj) => {\r\n        let result = await reqUpdateCategory(categoryObj)\r\n        const {status,msg} = result\r\n        if(status === 0 ){\r\n            message.success('更新分类名称成功',1)\r\n            this.getCategoryList()\r\n            this.setState({ \r\n                visible: false\r\n\r\n             })\r\n            this.form.resetFields()\r\n        }else{\r\n            message.error(msg,1)\r\n        }\r\n    }\r\n    render() {\r\n        const { categoryList, visible, operType, isLoading, modalCurrentValue } = this.state\r\n        const dataSource = categoryList\r\n        const columns = [\r\n            {\r\n                title: '分类名',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n            },\r\n            {\r\n                title: '操作',\r\n                // dataIndex: 'name',\r\n                key: 'haha',\r\n                render: (item) => { return <Button type=\"link\" onClick={() => { this.showUpdate(item) }}>修改分类</Button> },\r\n                width: '25%',\r\n                align: 'center'\r\n            },\r\n        ];\r\n        return (\r\n            <>\r\n                <Card title=\"\" extra={<Button onClick={this.showAdd} type=\"primary\" href=\"#\">\r\n                    <PlusCircleOutlined />添加</Button>}>\r\n                    <Table rowKey=\"_id\" bordered={true} dataSource={dataSource} columns={columns}\r\n                        pagination={{ pageSize: PAGE_SIZE, showQuickJumper: true }} loading={isLoading} />\r\n                </Card>\r\n                <Modal okText=\"确定\" cancelText=\"取消\" title={operType === 'add' ? '新增分类' : '修改分类'}\r\n                    visible={visible} onOk={this.handleOk} onCancel={this.handleCancel}>\r\n                    <AddForm /* categorys={categorys} parentId={parentId} */ modalCurrentValue={modalCurrentValue}\r\n                        setForm={(form) => { this.form = form }} />\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}