{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react-project\\\\src\\\\containers\\\\Product\\\\pictures-wall.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { reqDeleteImg } from '../../api'; // 用于图片上传的组件\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nexport default class PicturesWall extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      previewVisible: false,\n      //用来标识是否显示大图预览Modal\n      previewImage: '',\n      //大图的url\n      fileList: [\n        /* {\r\n          uid: '-1',  //文件的唯一标识 建议设置为负数 以防和内部id产生冲突\r\n          name: 'image.png',  //文件名\r\n          status: 'done',   //状态之一\r\n          // done: 已经完成上传  uploading: 正在上传中  removed: 已删除\r\n          // 图片地址\r\n          url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n        }, */\n      ]\n    };\n\n    this.getImgs = () => {\n      return this.state.fileList.map(file => file.name);\n    };\n\n    this.handleCancel = () => this.setState({\n      previewVisible: false\n    });\n\n    this.handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      } // 显示指定file的大图\n\n\n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true\n      });\n    };\n\n    this.handleChange = async ({\n      file,\n      fileList\n    }) => {\n      // console.log('handleChange',file.status,file,);\n      // console.log(file === fileList[fileList.length-1]);   false\n      // 这两个是同一个文件 但是指向两个内容一致的对象 \n      //  一旦上传成功 将当前上传的file的信息修正(name url)\n      if (file.status === 'done') {\n        const result = file.response; //{status: 0,data:{name:'xxx',url:'图片地址'}}\n\n        if (result.status === 0) {\n          _message.success('上传图片成功');\n\n          const {\n            name,\n            url\n          } = result.data;\n          file = fileList[fileList.length - 1];\n          file.name = name;\n          file.url = url;\n        } else {\n          _message.error('上传图片失败');\n        }\n      } else if (file.status === 'removed') {\n        // 删除图片的操作\n        const result = await reqDeleteImg(file.name);\n\n        if (result.status === 0) {\n          _message.success('删除图片成功');\n        } else {\n          _message.error('删除图片失败');\n        }\n      } //   在操作(上传/删除)过程中更新fileList的状态\n\n\n      this.setState({\n        fileList\n      });\n    };\n\n    let _fileList = []; // 如果传入了imgs属性\n\n    const {\n      imgs\n    } = this.props;\n\n    if (imgs && imgs.length > 0) {\n      _fileList = imgs.map((img, index) => ({\n        uid: -index,\n        name: img,\n        status: 'done',\n        url: 'http:localhost:5000/upload/' + img\n      }));\n    } // 初始化状态\n\n\n    this.state = {\n      previewVisible: false,\n      previewImage: '',\n      fileList: _fileList\n    };\n  } //   获取所有已上传图片文件名的数组\n\n\n  render() {\n    const {\n      previewVisible,\n      previewImage,\n      fileList\n    } = this.state;\n\n    const uploadButton = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clearfix\",\n      children: [/*#__PURE__*/_jsxDEV(_Upload, {\n        action: \"/manage/img/upload\" //上传图片的接口地址\n        ,\n        accept: \"image/*\" //只接收图片格式\n        ,\n        name: \"image\" //请求参数名\n        ,\n        listType: \"picture-card\" //卡片样式\n        ,\n        fileList: fileList //所有已经上传的文件列表\n        ,\n        onPreview: this.handlePreview,\n        onChange: this.handleChange,\n        children: fileList.length >= 3 ? null : uploadButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n        visible: previewVisible,\n        footer: null,\n        onCancel: this.handleCancel,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"example\",\n          style: {\n            width: '100%'\n          },\n          src: previewImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nPicturesWall.propTypes = {\n  imgs: PropTypes.array\n};","map":{"version":3,"sources":["C:/Users/PC/Desktop/react-project/src/containers/Product/pictures-wall.jsx"],"names":["React","PropTypes","PlusOutlined","reqDeleteImg","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","PicturesWall","Component","constructor","props","state","previewVisible","previewImage","fileList","getImgs","map","name","handleCancel","setState","handlePreview","url","preview","originFileObj","handleChange","status","response","success","data","length","imgs","img","index","uid","render","uploadButton","width","propTypes","array"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Upload, Modal, message } from 'antd';\r\nimport {PlusOutlined} from '@ant-design/icons';\r\n\r\nimport { reqDeleteImg } from '../../api'\r\n\r\n// 用于图片上传的组件\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nexport default class PicturesWall extends React.Component {\r\n\r\n  static propTypes = {\r\n    imgs: PropTypes.array\r\n  }\r\n\r\n  state = {\r\n    previewVisible: false,   //用来标识是否显示大图预览Modal\r\n    previewImage: '',   //大图的url\r\n    fileList: [\r\n      /* {\r\n        uid: '-1',  //文件的唯一标识 建议设置为负数 以防和内部id产生冲突\r\n        name: 'image.png',  //文件名\r\n        status: 'done',   //状态之一\r\n        // done: 已经完成上传  uploading: 正在上传中  removed: 已删除\r\n        // 图片地址\r\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n      }, */\r\n    ],\r\n  };\r\n\r\n  constructor(props){\r\n\r\n    super(props)\r\n\r\n    let fileList = []\r\n\r\n    // 如果传入了imgs属性\r\n    const {imgs} = this.props\r\n    if (imgs && imgs.length > 0 ) {\r\n      fileList = imgs.map((img,index) => ({\r\n        uid: -index,\r\n        name: img,\r\n        status: 'done',\r\n        url: 'http:localhost:5000/upload/' + img\r\n      }))\r\n    }\r\n\r\n    // 初始化状态\r\n    this.state = ({\r\n      previewVisible: false, \r\n      previewImage: '',\r\n      fileList  \r\n    })\r\n  }\r\n\r\n  //   获取所有已上传图片文件名的数组\r\n  getImgs = () => {\r\n      return this.state.fileList.map(file => file.name)\r\n  }\r\n\r\n  //隐藏Modal\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n    // 显示指定file的大图\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  //file: 当前操作的图片文件（上传/删除）\r\n//  fileList: 所有已上传图片文件对象的数组\r\n  handleChange = async ({ file, fileList }) => {\r\n\r\n    // console.log('handleChange',file.status,file,);\r\n\r\n    // console.log(file === fileList[fileList.length-1]);   false\r\n    // 这两个是同一个文件 但是指向两个内容一致的对象 \r\n\r\n    //  一旦上传成功 将当前上传的file的信息修正(name url)\r\n    if (file.status === 'done') {\r\n        const result = file.response    //{status: 0,data:{name:'xxx',url:'图片地址'}}\r\n        if (result.status === 0) {\r\n            message.success('上传图片成功')\r\n            const {name,url} = result.data\r\n            file = fileList[fileList.length-1]\r\n            file.name = name\r\n            file.url = url\r\n        } else {\r\n            message.error('上传图片失败')\r\n        }\r\n    } else if (file.status === 'removed') {\r\n        // 删除图片的操作\r\n        const result = await reqDeleteImg(file.name)\r\n        if (result.status === 0) {\r\n            message.success('删除图片成功')\r\n        } else {\r\n            message.error('删除图片失败')\r\n        }\r\n    }\r\n\r\n    //   在操作(上传/删除)过程中更新fileList的状态\r\n    this.setState({ fileList })\r\n    };\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <PlusOutlined /> \r\n        <div>Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"clearfix\">\r\n        <Upload\r\n          action=\"/manage/img/upload\"  //上传图片的接口地址\r\n          accept='image/*'   //只接收图片格式\r\n          name='image'   //请求参数名\r\n          listType=\"picture-card\"  //卡片样式\r\n          fileList={fileList}    //所有已经上传的文件列表\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 3 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}