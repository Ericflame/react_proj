{"ast":null,"code":"import \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\n// 可以发送异步ajax请求的函数模块 封装ajax库\n// 函数的返回值是一个promise对象\n\n/* \r\n  1、优化1：统一处理请求异常\r\n      在外层包一个自己创建的promise对象\r\n      在请求出错时 不执行reject(error) 而是显示错误提示\r\n  \r\n  2、优化2：异步得到不是reponse 而是response.data\r\n      在请求成功resolve时：resolve(response.data)\r\n*/\nimport axios from 'axios';\nexport default function ajax(url, data = {}, type = 'GET') {\n  return new Promise((resolve, reject) => {\n    let promise; // 1、执行异步ajax请求\n\n    if (type === 'GET') {\n      //发送GET请求\n      promise = axios.get(url, {\n        //配置对象\n        params: data //指定请求参数\n\n      });\n    } else {\n      //发送POST请求\n      promise = axios.post(url, data);\n    }\n\n    promise.then(response => {\n      // 2、如果成功了 调用resolve(value)\n      resolve(response.data);\n    }).catch(error => {\n      // 3、如果失败了 不调用reject(reason) 而是提示异常信息\n      _message.error('请求出错了：' + error.message);\n    });\n  });\n} // 请求登录接口\n// ajax('/login',{username:'tom',password:'12345'},'POST').then\n// 添加用户\n// ajax('/manage/user/add',{username:'tom',password:'12345',phone:'13765433456'},'POST').then","map":{"version":3,"sources":["C:/Users/PC/Desktop/react-project/src/api/ajax.js"],"names":["axios","ajax","url","data","type","Promise","resolve","reject","promise","get","params","post","then","response","catch","error","message"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,eAAe,SAASC,IAAT,CAAcC,GAAd,EAAkBC,IAAI,GAAC,EAAvB,EAA0BC,IAAI,GAAC,KAA/B,EAAqC;AAElD,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAkB;AACnC,QAAIC,OAAJ,CADmC,CAGnC;;AACA,QAAIJ,IAAI,KAAK,KAAb,EAAoB;AAAE;AACpBI,MAAAA,OAAO,GAAGR,KAAK,CAACS,GAAN,CAAUP,GAAV,EAAc;AAAE;AACtBQ,QAAAA,MAAM,EAAEP,IADY,CACL;;AADK,OAAd,CAAV;AAGD,KAJD,MAIO;AAAE;AACPK,MAAAA,OAAO,GAAGR,KAAK,CAACW,IAAN,CAAWT,GAAX,EAAeC,IAAf,CAAV;AACD;;AACDK,IAAAA,OAAO,CAACI,IAAR,CAAaC,QAAQ,IAAE;AACrB;AACAP,MAAAA,OAAO,CAACO,QAAQ,CAACV,IAAV,CAAP;AACD,KAHD,EAGGW,KAHH,CAGSC,KAAK,IAAE;AAChB;AACE,eAAQA,KAAR,CAAc,WAAWA,KAAK,CAACC,OAA/B;AACD,KAND;AAQD,GAnBM,CAAP;AAqBD,C,CAED;AACA;AACA;AACA","sourcesContent":["// 可以发送异步ajax请求的函数模块 封装ajax库\r\n// 函数的返回值是一个promise对象\r\n\r\n/* \r\n  1、优化1：统一处理请求异常\r\n      在外层包一个自己创建的promise对象\r\n      在请求出错时 不执行reject(error) 而是显示错误提示\r\n  \r\n  2、优化2：异步得到不是reponse 而是response.data\r\n      在请求成功resolve时：resolve(response.data)\r\n*/\r\n\r\nimport axios from 'axios'\r\nimport {message} from 'antd'\r\n\r\nexport default function ajax(url,data={},type='GET'){\r\n\r\n  return new Promise((resolve,reject)=>{\r\n    let promise\r\n\r\n    // 1、执行异步ajax请求\r\n    if (type === 'GET') { //发送GET请求\r\n      promise = axios.get(url,{ //配置对象\r\n          params: data   //指定请求参数\r\n      })\r\n    } else {　//发送POST请求\r\n      promise = axios.post(url,data)\r\n    }\r\n    promise.then(response=>{\r\n      // 2、如果成功了 调用resolve(value)\r\n      resolve(response.data)\r\n    }).catch(error=>{\r\n    // 3、如果失败了 不调用reject(reason) 而是提示异常信息\r\n      message.error('请求出错了：' + error.message)\r\n    })\r\n\r\n  })\r\n\r\n}\r\n\r\n// 请求登录接口\r\n// ajax('/login',{username:'tom',password:'12345'},'POST').then\r\n// 添加用户\r\n// ajax('/manage/user/add',{username:'tom',password:'12345',phone:'13765433456'},'POST').then"]},"metadata":{},"sourceType":"module"}