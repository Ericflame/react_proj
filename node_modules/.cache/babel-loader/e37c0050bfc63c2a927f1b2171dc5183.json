{"ast":null,"code":"import _objectSpread from\"C:/Users/PC/Desktop/\\u6E90\\u7801/react_Project/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import\"antd/es/button/style\";import _Button from\"antd/es/button\";import\"antd/es/input/style\";import _Input from\"antd/es/input\";import _regeneratorRuntime from\"C:/Users/PC/Desktop/\\u6E90\\u7801/react_Project/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import\"antd/es/message/style\";import _message from\"antd/es/message\";import _asyncToGenerator from\"C:/Users/PC/Desktop/\\u6E90\\u7801/react_Project/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/PC/Desktop/\\u6E90\\u7801/react_Project/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"antd/es/form/style\";import _Form from\"antd/es/form\";import React from'react';import{connect}from'react-redux';import{createSaveUserInfoAction}from'../../redux/actions_creators/login_action';import'./css/login.less';import{reqLogin}from'../../api';import{UserOutlined,LockOutlined}from'@ant-design/icons';import logo from'./img/dora_17.png';import{Redirect}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Item=_Form.Item;var Login=function Login(props){var _Form$useForm=_Form.useForm(),_Form$useForm2=_slicedToArray(_Form$useForm,1),form=_Form$useForm2[0];// 如果用户已经登录 自动跳转到管理界面\n/* const user = props.user\r\n    if (user._id) {\r\n      return <Redirect to='/home'/>\r\n    } */ // 点击登录按钮的回调\nvar onFinish=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){var username,password,result,data,status,msg;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// console.log('Received values of form: ', values);\n// 请求登录\nusername=values.username,password=values.password;/* reqLogin(username,password).then(response => {\r\n        console.log('成功了',response.data);\r\n      }).catch(error => {\r\n        console.log('失败了',error.message);\r\n      }) */ //#region \n// 优化1\n_context.next=3;return reqLogin(username,password);case 3:result=_context.sent;data=result.data,status=result.status,msg=result.msg;// {status:0, data:user}  {status:1,msg:'xxx'}\nif(status===0){//登录成功\n// 提示登录成功\n// console.log('请求成功了',data);\n_message.success('登录成功');// 跳转到admin界面（不需要再回退回到登录）\nprops.saveUserInfo(data);props.history.replace('/Admin');}else{//登录失败\n_message.warning(msg,1);//提示错误信息\n}case 6:case\"end\":return _context.stop();}}},_callee);}));return function onFinish(_x){return _ref.apply(this,arguments);};}();var NameValidator=function NameValidator(value){if(value){if(value.length>=4&&value.length<=30){return Promise.resolve();}else{return Promise.resolve();/* reject('名称长度为4-30个字符，一个中文字等于2个字符') */}}else{return Promise.resolve();}};var tailLayout={wrapperCol:{offset:10,span:16}};var isLogin=props.isLogin;if(isLogin){return/*#__PURE__*/_jsx(Redirect,{to:\"/Admin/Home\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"login\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"login-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"logo\"}),/*#__PURE__*/_jsxs(\"h1\",{children:[\"\\u540E\\u53F0\\u7BA1\\u7406\\u7CFB\\u7EDF\",props.test]})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"login-content\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u7528\\u6237\\u767B\\u9646\"}),/*#__PURE__*/_jsxs(_Form,{form:form,name:\"normal_login\",className:\"login-form\",initialValues:{remember:true,username:'云显靖'},onFinish:onFinish// onSubmit={handleSubmit}\n,children:[/*#__PURE__*/_jsx(Item,{name:\"username\"// 声明式验证：直接使用别人定义好的验证规则进行验证\n,rules:[{required:true,whitespace:true,message:'请输入用户名!'},{min:4,message:'用户名最少4位'},{max:12,message:'用户名最多12位'},{pattern:/^[a-zA-Z0-9_]+$/,message:'用户名必须是英文 数字或者下划线组成'}],children:/*#__PURE__*/_jsx(_Input,{prefix:/*#__PURE__*/_jsx(UserOutlined,{className:\"site-form-item-icon\"}),placeholder:\"\\u7528\\u6237\\u540D\",style:{color:'rgba(0,0,0,.25)'}})}),/*#__PURE__*/_jsx(Item,{name:\"password\",rules:[{required:true,message:'Please input your Password!'},{validator:NameValidator}],children:/*#__PURE__*/_jsx(_Input,{prefix:/*#__PURE__*/_jsx(LockOutlined,{className:\"site-form-item-icon\"}),type:\"password\",placeholder:\"\\u5BC6\\u7801\",style:{color:'rgba(0,0,0,.25)'}})}),/*#__PURE__*/_jsx(Item,_objectSpread(_objectSpread({},tailLayout),{},{children:/*#__PURE__*/_jsx(_Button,{type:\"primary\",htmlType:\"submit\",className:\"login-form-button\",children:\"\\u767B\\u5F55\"})}))]})]})]});};// 暴露容器\nexport default connect(function(state){return{isLogin:state.userInfo.isLogin};},{saveUserInfo:createSaveUserInfoAction})(Login);","map":{"version":3,"sources":["C:/Users/PC/Desktop/源码/react_Project/react-project/src/containers/Login/index.jsx"],"names":["React","connect","createSaveUserInfoAction","reqLogin","UserOutlined","LockOutlined","logo","Redirect","Item","Login","props","useForm","form","onFinish","values","username","password","result","data","status","msg","success","saveUserInfo","history","replace","warning","NameValidator","value","length","Promise","resolve","tailLayout","wrapperCol","offset","span","isLogin","test","remember","required","whitespace","message","min","max","pattern","color","validator","state","userInfo"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Form, Input, Button,message} from 'antd';\r\nimport { connect } from 'react-redux'\r\nimport {createSaveUserInfoAction} from '../../redux/actions_creators/login_action'\r\nimport './css/login.less'\r\nimport {reqLogin} from '../../api'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\r\nimport logo from './img/dora_17.png'\r\nimport { Redirect } from 'react-router-dom';\r\nconst { Item } = Form\r\n\r\nconst Login = (props) => {\r\n    const [form] = Form.useForm();\r\n    // 如果用户已经登录 自动跳转到管理界面\r\n    /* const user = props.user\r\n    if (user._id) {\r\n      return <Redirect to='/home'/>\r\n    } */\r\n    // 点击登录按钮的回调\r\n    const onFinish = (async(values) => {\r\n      // console.log('Received values of form: ', values);\r\n  \r\n      // 请求登录\r\n      const {username,password} = values\r\n  \r\n      /* reqLogin(username,password).then(response => {\r\n        console.log('成功了',response.data);\r\n      }).catch(error => {\r\n        console.log('失败了',error.message);\r\n      }) */\r\n      \r\n      //#region \r\n      // 优化1\r\n      \r\n        const result = await reqLogin(username,password)\r\n        let {data,status,msg} = result        \r\n        // {status:0, data:user}  {status:1,msg:'xxx'}\r\n        if (status === 0) {  //登录成功\r\n          // 提示登录成功\r\n          // console.log('请求成功了',data);\r\n          message.success('登录成功')\r\n          // 跳转到admin界面（不需要再回退回到登录）\r\n          props.saveUserInfo(data)\r\n          props.history.replace('/Admin')\r\n\r\n        } else {   //登录失败\r\n          message.warning(msg,1)  //提示错误信息\r\n        }\r\n      \r\n    });\r\n     \r\n\r\n    const NameValidator = (value) => {\r\n        if (value) {\r\n          if (value.length >= 4 && value.length <= 30) {\r\n            return Promise.resolve()\r\n          } else {\r\n            return Promise.resolve()/* reject('名称长度为4-30个字符，一个中文字等于2个字符') */\r\n          }\r\n        } else {\r\n          return Promise.resolve()\r\n        }\r\n      };\r\n\r\n    const tailLayout = {\r\n      wrapperCol: { offset: 10, span: 16 },\r\n  };\r\n\r\n  const {isLogin} = props\r\n  if(isLogin){\r\n    return <Redirect to=\"/Admin/Home\"/>\r\n  }\r\n    return (\r\n      <div className=\"login\">\r\n        <header className=\"login-header\">\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>后台管理系统{props.test}</h1>\r\n        </header>\r\n        <section className=\"login-content\">\r\n          <h1>用户登陆</h1>\r\n\r\n          <Form form={form} name=\"normal_login\" className=\"login-form\"\r\n            initialValues={{\r\n              remember: true,\r\n              username:'云显靖'\r\n            }}\r\n            onFinish={onFinish}\r\n            // onSubmit={handleSubmit}\r\n          >\r\n            <Item\r\n              name=\"username\"\r\n              // 声明式验证：直接使用别人定义好的验证规则进行验证\r\n              rules={[\r\n                {required: true, whitespace: true, message: '请输入用户名!'},\r\n                {min: 4, message: '用户名最少4位'},\r\n                {max: 12, message: '用户名最多12位'},\r\n                {pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是英文 数字或者下划线组成'},\r\n              ]}\r\n            >\r\n              <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"用户名\" style={{ color: 'rgba(0,0,0,.25)' }} />\r\n            </Item>\r\n            <Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your Password!',\r\n                },{validator: NameValidator,}\r\n              ]}\r\n            >\r\n              <Input prefix={<LockOutlined className=\"site-form-item-icon\" />} type=\"password\" placeholder=\"密码\" style={{ color: 'rgba(0,0,0,.25)' }}/>\r\n            </Item>\r\n            <Item {...tailLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                登录\r\n              </Button>\r\n            </Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    );\r\n  };\r\n// 暴露容器\r\nexport default connect(\r\n    state => ({isLogin:state.userInfo.isLogin}),\r\n  {\r\n    saveUserInfo:createSaveUserInfoAction\r\n  }\r\n)(Login)\r\n\r\n"]},"metadata":{},"sourceType":"module"}