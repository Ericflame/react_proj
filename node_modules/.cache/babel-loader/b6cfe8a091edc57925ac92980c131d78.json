{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react-project\\\\src\\\\containers\\\\Product\\\\add_update.jsx\";\nimport React, { Component } from 'react';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\nimport PicturesWall from './pictures-wall';\nimport RichTextEditor from './rich-text-editor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Item\n} = _Form;\nconst {\n  TextArea\n} = _Input;\nexport default class AddUpdate extends Component {\n  constructor(props) {\n    super(props); // 创建用来保存ref标识的标签对象的容器\n\n    this.formRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      options: []\n    };\n\n    this.initOptions = async categorys => {\n      // 根据categorys 生成options数组\n      const options = categorys.map(c => ({\n        value: c._id,\n        label: c.name,\n        isLeaf: false //不是叶子 即还有其他子集分类\n\n      })); // 如果是一个二级分类商品的更新\n\n      const {\n        isUpdate,\n        product\n      } = this;\n      const {\n        pCategoryId\n      } = product;\n\n      if (isUpdate && pCategoryId !== '0') {\n        // 获取相应的二级分类列表\n        const subCategorys = await this.getCategorys(pCategoryId); // 生成二级下拉列表的options\n\n        const childOptions = subCategorys.map(c => ({\n          value: c._id,\n          label: c.name,\n          isLeaf: true\n        })); // 找到当前商品相应的一级option对象\n\n        const targetOption = options.find(option => option.value === pCategoryId); // 关联到对应的一级option上\n\n        targetOption.children = childOptions;\n      } // 更新options状态\n\n\n      this.setState({\n        options\n      });\n    };\n\n    this.getCategorys = async parentId => {\n      const result = await reqCategorys(parentId);\n\n      if (result.status === 0) {\n        const categorys = result.data; // 判断 一级列表还是二级列表\n\n        if (parentId === '0') {\n          this.initOptions(categorys);\n        } else {\n          // 二级列表\n          // 返回二级列表 ===> 当前async函数返回的promise就会成功且value为categorys\n          return categorys;\n        }\n      }\n    };\n\n    this.validatePrice = (rule, value, callback) => {\n      if (value * 1 > 0) {\n        // callback()  //验证通过\n        return Promise.resolve();\n      } else {\n        // 验证不通过\n        // callback('价格必须要大于0！')  会有警告 返回一个promise\n        return Promise.reject('价格必须要大于0！');\n      }\n    };\n\n    this.loadData = async selectedOptions => {\n      // 得到点击的列表项 即option对象\n      const targetOption = selectedOptions[0]; // 显示loading效果\n\n      targetOption.loading = true; // 根据选中的分类 请求获取二级分类列表\n\n      const subCategorys = await this.getCategorys(targetOption.value); // 隐藏loading\n\n      targetOption.loading = false;\n\n      if (subCategorys && subCategorys.length > 0) {\n        // 说明现在存在二级分类\n        // 生成一个二级列表的options单\n        const cOptions = subCategorys.map(c => ({\n          value: c._id,\n          label: c.name,\n          isLeaf: true\n        })); // 关联到当前的target.option身上 ===> children\n\n        targetOption.children = cOptions;\n      } else {\n        // 当前选中的列表项没有二级分类\n        targetOption.isLeaf = true;\n      } // 更新options状态\n\n\n      this.setState({\n        options: [...this.state.options]\n      });\n    };\n\n    this.submit = () => {\n      // 进行表单验证 通过才发送请求\n      this.formRef.current.validateFields().then(async values => {\n        // 1、收集数据\n        // console.log('values',values);\n        const {\n          name,\n          desc,\n          price,\n          categoryIds\n        } = values;\n        let pCategoryId, categoryId;\n\n        if (categoryIds.length === 1) {\n          pCategoryId = '0';\n          categoryId = categoryIds[0];\n        } else {\n          pCategoryId = categoryIds[0];\n          categoryId = categoryIds[1];\n        }\n\n        const imgs = this.pw.current.getImgs();\n        const detail = this.editor.current.getDetail(); // 封装成product对象\n\n        const product = {\n          name,\n          desc,\n          price,\n          imgs,\n          detail\n        };\n        console.log('product', product);\n        /* // 如果是更新需要添加_id\r\n        if (this.isUpdate) {\r\n          product._id = this.product._id\r\n        }\r\n          // 2、调用接口请求函数去添加/更新\r\n        const result = await reqAddOrUpdateProduct(product)\r\n        console.log(result);\r\n        // 3、根据结果显示\r\n        if (result.status === 0) {\r\n          message.success(`${this.isUpdate ? '更新':'添加'}商品成功！`)\r\n          this.props.history.goBack()\r\n        } else {\r\n          message.error(`${this.isUpdate ? '更新':'添加'}商品失败！`)\r\n        } */\n\n        let result; // 如果是更新需要添加_id\n\n        if (this.isUpdate) {\n          product._id = this.product._id;\n          result = await reaUpdateProduct(product);\n\n          if (result.status === 0) {\n            message.success(` 更新商品成功！`);\n            this.props.history.goBack();\n          } else {\n            message.error(`更新商品失败！`);\n          }\n        } else {\n          result = await reqAddProduct(product); // console.log('添加',result);   result.status===1\n\n          if (result.status === 0) {\n            message.success(` 添加商品成功！`);\n            this.props.history.goBack();\n          } else {\n            message.error(`添加商品失败！`);\n          }\n        } // alert('提交请求成功')\n        // console.log('submitvalue',values);\n        // console.log('submit', this.pw.current.getImgs());\n        // const imgs= this.pw.current.getImgs()\n        // const detail = this.editor.current.getDetail()\n        // console.log('submit',imgs,detail);\n\n      }).catch(errInfo => {\n        console.log('请求提交错误', errInfo);\n      });\n    };\n\n    this.pw = /*#__PURE__*/React.createRef();\n    this.editor = /*#__PURE__*/React.createRef();\n  } // 更新options数组\n\n\n  componentDidMount() {\n    this.getCategorys('0'); //获取一级列表\n  }\n\n  UNSAFE_componentWillMount() {\n    // 如果是添加则会没值 否则有值\n    const product = this.props.location.state; // 保存是否为更新的标识  \n\n    this.isUpdate = !!product; //强制转换为一个布尔值\n    // 保存商品 若没有 保存一个空对象 则下面设置初始值则不会报错\n\n    this.product = product || {};\n  }\n\n  render() {\n    // 指定Item配置对象\n    const layout = {\n      labelCol: {\n        span: 2 //指定左侧label的宽度\n\n      },\n      wrapperCol: {\n        span: 8 //指定右侧包裹的宽度\n\n      }\n    };\n    /* \r\n          const {isUpdate,product} = this\r\n          const {pCategoryId,categoryId,imgs,detail} = product\r\n          // 用来接收级联分类ID的数组\r\n          const categorys = []\r\n          if (isUpdate) {\r\n            // 商品处于一级分类列表中\r\n            if (pCategoryId === '0') {\r\n              categorys.push(categoryId)\r\n            } else {\r\n              // 商品为二级分类\r\n              categorys.push(pCategoryId)\r\n              categorys.push(categoryId)\r\n            }\r\n          } */\n\n    const title = /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(_Button, {\n        type: \"link\",\n        onClick: () => this.props.history.goBack(),\n        children: /*#__PURE__*/_jsxDEV(ArrowLeftOutlined, {\n          style: {\n            marginRight: 10,\n            fontSize: 20\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: isUpdate ? '修改商品' : '添加商品'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(_Card, {\n      title: title,\n      children: /*#__PURE__*/_jsxDEV(_Form, {\n        ref: this.formRef,\n        ...layout,\n        children: [/*#__PURE__*/_jsxDEV(Item, {\n          name: \"name\",\n          rules: [{\n            required: true,\n            message: '必须输入商品名称'\n          }],\n          initialValue: product.name,\n          label: \"\\u5546\\u54C1\\u540D\\u79F0\",\n          children: /*#__PURE__*/_jsxDEV(_Input, {\n            placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u54C1\\u540D\\u79F0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          name: \"desc\",\n          initialValue: product.desc,\n          rules: [{\n            required: true,\n            message: '必须输入商品描述'\n          }],\n          label: \"\\u5546\\u54C1\\u63CF\\u8FF0\",\n          children: /*#__PURE__*/_jsxDEV(TextArea, {\n            placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u54C1\\u63CF\\u8FF0\",\n            autoSize: {\n              minRows: 2,\n              maxRows: 5\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          name: \"price\",\n          initialValue: product.price,\n          rules: [{\n            required: true,\n            message: '必须输入商品价格'\n          }, {\n            validator: this.validatePrice\n          }],\n          label: \"\\u5546\\u54C1\\u4EF7\\u683C\",\n          children: /*#__PURE__*/_jsxDEV(_Input, {\n            type: \"number\",\n            addonAfter: \"\\u5143\",\n            placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u54C1\\u4EF7\\u683C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          name: \"categoryIds\",\n          initialValue: categorys,\n          rules: [{\n            required: true,\n            message: '必须指定商品的分类'\n          }],\n          label: \"\\u5546\\u54C1\\u5206\\u7C7B\",\n          children: /*#__PURE__*/_jsxDEV(Cascader, {\n            placeholder: \"\\u8BF7\\u6307\\u5B9A\\u5546\\u54C1\\u7684\\u5206\\u7C7B\",\n            options: this.state.options //需要显示的列表数据数组\n            ,\n            loadData: this.loadData //当选择某个列表项 加载下一级列表的回调\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          label: \"\\u5546\\u54C1\\u56FE\\u7247\",\n          children: /*#__PURE__*/_jsxDEV(PicturesWall, {\n            ref: this.pw,\n            imgs: imgs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          label: \"\\u5546\\u54C1\\u8BE6\\u60C5\",\n          labelCol: {\n            span: 2\n          },\n          wrapperCol: {\n            span: 20\n          },\n          children: /*#__PURE__*/_jsxDEV(RichTextEditor, {\n            ref: this.editor,\n            detail: detail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(_Button, {\n            onClick: this.submit,\n            type: \"primary\",\n            children: \"\\u63D0\\u4EA4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/PC/Desktop/react-project/src/containers/Product/add_update.jsx"],"names":["React","Component","ArrowLeftOutlined","PicturesWall","RichTextEditor","Item","TextArea","AddUpdate","constructor","props","formRef","createRef","state","options","initOptions","categorys","map","c","value","_id","label","name","isLeaf","isUpdate","product","pCategoryId","subCategorys","getCategorys","childOptions","targetOption","find","option","children","setState","parentId","result","reqCategorys","status","data","validatePrice","rule","callback","Promise","resolve","reject","loadData","selectedOptions","loading","length","cOptions","submit","current","validateFields","then","values","desc","price","categoryIds","categoryId","imgs","pw","getImgs","detail","editor","getDetail","console","log","reaUpdateProduct","message","success","history","goBack","error","reqAddProduct","catch","errInfo","componentDidMount","UNSAFE_componentWillMount","location","render","layout","labelCol","span","wrapperCol","title","marginRight","fontSize","required","minRows","maxRows","validator"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button,Form,Input,Card,messageCascader, } from \"antd\"\r\nimport { ArrowLeftOutlined } from '@ant-design/icons';\r\nimport PicturesWall from './pictures-wall' \r\nimport RichTextEditor from './rich-text-editor'\r\n\r\nconst {Item} = Form\r\nconst {TextArea} = Input\r\nexport default class AddUpdate extends Component {\r\n    formRef = React.createRef();\r\n\r\n  state = {\r\n    options: [],\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    // 创建用来保存ref标识的标签对象的容器\r\n    this.pw = React.createRef()\r\n    this.editor = React.createRef()\r\n  }\r\n\r\n  // 更新options数组\r\n  initOptions = async (categorys) => {\r\n    // 根据categorys 生成options数组\r\n    const options = categorys.map(c => ({\r\n      value: c._id,\r\n      label: c.name,\r\n      isLeaf: false,  //不是叶子 即还有其他子集分类\r\n    }))\r\n\r\n    // 如果是一个二级分类商品的更新\r\n    const {isUpdate,product} = this\r\n    const {pCategoryId} = product\r\n    if (isUpdate && pCategoryId !== '0') {\r\n      // 获取相应的二级分类列表\r\n      const subCategorys = await this.getCategorys(pCategoryId)\r\n      // 生成二级下拉列表的options\r\n      const childOptions = subCategorys.map(c=>({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true,\r\n      }))\r\n      // 找到当前商品相应的一级option对象\r\n      const targetOption = options.find(option => option.value === pCategoryId)\r\n      // 关联到对应的一级option上\r\n      targetOption.children = childOptions\r\n    }\r\n\r\n    // 更新options状态\r\n    this.setState({options})\r\n  }\r\n\r\n\r\n  // 用于异步获取一级/二级分类列表 并且显示\r\n  // async函数的返回值就是一个新的promise对象 promise的结果和值由async的结果决定\r\n\r\n  getCategorys = async (parentId) => {\r\n    const result = await reqCategorys(parentId)\r\n    if (result.status === 0) {\r\n      const categorys = result.data\r\n      // 判断 一级列表还是二级列表\r\n      if (parentId === '0') {\r\n        this.initOptions(categorys)\r\n      } else {\r\n        // 二级列表\r\n        // 返回二级列表 ===> 当前async函数返回的promise就会成功且value为categorys\r\n        return categorys\r\n      }\r\n    }\r\n  }\r\n\r\n  // 定义验证价格的函数\r\n  validatePrice = (rule,value,callback) => {\r\n    if (value * 1 > 0) {\r\n      // callback()  //验证通过\r\n      return Promise.resolve()\r\n    } else {\r\n      // 验证不通过\r\n      // callback('价格必须要大于0！')  会有警告 返回一个promise\r\n      return Promise.reject('价格必须要大于0！')\r\n    }\r\n  }\r\n\r\n  // 用于加载下一级列表的回调函数\r\n  loadData = async selectedOptions => {\r\n    // 得到点击的列表项 即option对象\r\n    const targetOption = selectedOptions[0]\r\n    // 显示loading效果\r\n    targetOption.loading = true\r\n\r\n    // 根据选中的分类 请求获取二级分类列表\r\n    const subCategorys = await this.getCategorys(targetOption.value)\r\n    // 隐藏loading\r\n    targetOption.loading = false\r\n\r\n    if (subCategorys && subCategorys.length > 0) {\r\n      // 说明现在存在二级分类\r\n      // 生成一个二级列表的options单\r\n      const cOptions = subCategorys.map(c=>({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true,  \r\n      }))\r\n      // 关联到当前的target.option身上 ===> children\r\n      targetOption.children = cOptions\r\n    } else {\r\n      // 当前选中的列表项没有二级分类\r\n      targetOption.isLeaf = true \r\n    }\r\n    \r\n      // 更新options状态\r\n      this.setState({\r\n        options: [...this.state.options],\r\n      })\r\n  }\r\n\r\n  submit =  () => {\r\n    // 进行表单验证 通过才发送请求\r\n    this.formRef.current.validateFields()\r\n    .then( async values => {\r\n\r\n      // 1、收集数据\r\n      // console.log('values',values);\r\n      const {name,desc,price,categoryIds} = values\r\n      let pCategoryId,categoryId\r\n      if (categoryIds.length === 1) {\r\n        pCategoryId = '0'\r\n        categoryId = categoryIds[0]\r\n      } else {\r\n        pCategoryId = categoryIds[0]\r\n        categoryId = categoryIds[1]\r\n      }\r\n      const imgs= this.pw.current.getImgs()\r\n      const detail = this.editor.current.getDetail()\r\n\r\n      // 封装成product对象\r\n      const product = {name,desc,price,imgs,detail}\r\n      console.log('product',product);\r\n\r\n      /* // 如果是更新需要添加_id\r\n      if (this.isUpdate) {\r\n        product._id = this.product._id\r\n      }\r\n\r\n      // 2、调用接口请求函数去添加/更新\r\n      const result = await reqAddOrUpdateProduct(product)\r\n      console.log(result);\r\n      // 3、根据结果显示\r\n      if (result.status === 0) {\r\n        message.success(`${this.isUpdate ? '更新':'添加'}商品成功！`)\r\n        this.props.history.goBack()\r\n      } else {\r\n        message.error(`${this.isUpdate ? '更新':'添加'}商品失败！`)\r\n      } */\r\n\r\n      let result\r\n      // 如果是更新需要添加_id\r\n      if (this.isUpdate) {\r\n        product._id = this.product._id\r\n        result = await reaUpdateProduct(product)\r\n        if (result.status === 0) {\r\n          message.success(` 更新商品成功！`)\r\n          this.props.history.goBack()\r\n        } else {\r\n          message.error(`更新商品失败！`)\r\n        }\r\n      } else {\r\n        result = await reqAddProduct(product)\r\n        // console.log('添加',result);   result.status===1\r\n        if (result.status === 0) {\r\n          message.success(` 添加商品成功！`)\r\n          this.props.history.goBack()\r\n        } else {\r\n          message.error(`添加商品失败！`)\r\n        }\r\n      }\r\n\r\n      \r\n      \r\n\r\n      // alert('提交请求成功')\r\n      // console.log('submitvalue',values);\r\n      // console.log('submit', this.pw.current.getImgs());\r\n      // const imgs= this.pw.current.getImgs()\r\n      // const detail = this.editor.current.getDetail()\r\n      // console.log('submit',imgs,detail);\r\n    })\r\n    .catch(errInfo => {\r\n      console.log('请求提交错误', errInfo);\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCategorys('0')  //获取一级列表\r\n  }\r\n\r\n  UNSAFE_componentWillMount(){\r\n    // 如果是添加则会没值 否则有值\r\n    const product = this.props.location.state\r\n    // 保存是否为更新的标识  \r\n    this.isUpdate = !!product  //强制转换为一个布尔值\r\n    // 保存商品 若没有 保存一个空对象 则下面设置初始值则不会报错\r\n    this.product = product || {}\r\n  }\r\n    render() {\r\n\r\n        // 指定Item配置对象\r\n        const layout = {\r\n          labelCol: {\r\n            span: 2,   //指定左侧label的宽度\r\n          },\r\n          wrapperCol: {\r\n            span: 8,  //指定右侧包裹的宽度\r\n          },\r\n        }\r\n  /* \r\n        const {isUpdate,product} = this\r\n        const {pCategoryId,categoryId,imgs,detail} = product\r\n        // 用来接收级联分类ID的数组\r\n        const categorys = []\r\n        if (isUpdate) {\r\n          // 商品处于一级分类列表中\r\n          if (pCategoryId === '0') {\r\n            categorys.push(categoryId)\r\n          } else {\r\n            // 商品为二级分类\r\n            categorys.push(pCategoryId)\r\n            categorys.push(categoryId)\r\n          }\r\n        } */\r\n  \r\n          const title = (\r\n            <span>\r\n              <Button type=\"link\" onClick={()=>this.props.history.goBack()}>\r\n                <ArrowLeftOutlined style={{marginRight:10,fontSize:20}}/>\r\n              </Button>\r\n              <span>{isUpdate?'修改商品':'添加商品'}</span>\r\n            </span>\r\n          )\r\n  \r\n          return (\r\n            <Card title={title}>\r\n              <Form ref={this.formRef} {...layout}>\r\n                <Item name='name' rules={[\r\n                  { required: true, message: '必须输入商品名称' },\r\n                  ]} initialValue={product.name} label='商品名称'>\r\n                  <Input placeholder='请输入商品名称'/>\r\n                </Item>\r\n                <Item name='desc' initialValue={product.desc} rules={[\r\n                  { required: true, message: '必须输入商品描述' },\r\n                  ]} label='商品描述'>\r\n                  <TextArea placeholder='请输入商品描述' autoSize={{minRows:2,maxRows:5}}/>\r\n                </Item>\r\n                <Item name='price' initialValue={product.price} rules={[\r\n                  { required: true, message: '必须输入商品价格' },\r\n                  { validator: this.validatePrice}\r\n                  ]} label='商品价格'>\r\n                  <Input type='number' addonAfter='元' placeholder='请输入商品价格'/>\r\n                </Item>\r\n                <Item name='categoryIds' initialValue={categorys} rules={[{required:true,message: '必须指定商品的分类'},]} label='商品分类'>\r\n                  <Cascader\r\n                    placeholder='请指定商品的分类'\r\n                    options={this.state.options}  //需要显示的列表数据数组\r\n                    loadData={this.loadData}   //当选择某个列表项 加载下一级列表的回调\r\n                  />\r\n                </Item>\r\n                <Item label='商品图片'>\r\n                  <PicturesWall ref={this.pw} imgs={imgs}/>\r\n                </Item>\r\n                <Item label='商品详情' labelCol={{span:2}} wrapperCol={{span: 20}}>\r\n                  <RichTextEditor ref={this.editor} detail={detail}/>\r\n                </Item>\r\n                <Item>\r\n                  <Button onClick={this.submit} type='primary'>提交</Button>\r\n                </Item>\r\n              </Form>\r\n            </Card>\r\n          )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}