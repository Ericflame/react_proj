{"ast":null,"code":"import\"antd/es/card/style\";import _Card from\"antd/es/card\";import\"antd/es/modal/style\";import _Modal from\"antd/es/modal\";import\"antd/es/table/style\";import _Table from\"antd/es/table\";import\"antd/es/button/style\";import _Button from\"antd/es/button\";import _toConsumableArray from\"C:/Users/PC/Desktop/\\u6E90\\u7801/react_Project/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"C:/Users/PC/Desktop/\\u6E90\\u7801/react_Project/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import\"antd/es/message/style\";import _message from\"antd/es/message\";import _asyncToGenerator from\"C:/Users/PC/Desktop/\\u6E90\\u7801/react_Project/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:/Users/PC/Desktop/\\u6E90\\u7801/react_Project/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/PC/Desktop/\\u6E90\\u7801/react_Project/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/PC/Desktop/\\u6E90\\u7801/react_Project/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/PC/Desktop/\\u6E90\\u7801/react_Project/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";var _dec,_class,_temp;import React,{Component}from'react';import{connect}from'react-redux';import dayjs from'dayjs';import{PAGE_SIZE}from'../../config/index.js';// import { formateDate } from '../../utils/dateUtils'\n// import LinkButton from '../../components/link-button/index'\nimport{/* reqDeleteUser, */reqUsers,reqAddOrUpdateUser}from'../../api/index';import UserForm from'./user-form';// 用户路由\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var User=(_dec=connect(function(state){return{};},{}),_dec(_class=(_temp=/*#__PURE__*/function(_Component){_inherits(User,_Component);var _super=_createSuper(User);function User(){var _this;_classCallCheck(this,User);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={users:[],//用来存放用户列表的数组\nroles:[],//所有角色的列表\nisShow:false//是否显示对话框\n};_this.getUserList=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result,status,data,msg;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return reqUsers();case 2:result=_context.sent;status=result.status,data=result.data,msg=result.msg;// console.log(data);\nif(status===0){_this.setState({users:data.users.reverse(),roles:data.roles});_message.success('获取用户列表成功');}else{_message.error(msg,1);}case 5:case\"end\":return _context.stop();}}},_callee);}));_this.handleOk=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var value,result,status,data,msg,users;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// console.log(this.form);\n// 收集输入数据\nvalue=_this.form.getFieldsValue();console.log(value);_this.form.resetFields();// 如果是更新 需要给user指定_id属性\nif(_this.value){value._id=_this.value._id;}// 提交添加的请求\n_context2.next=6;return reqAddOrUpdateUser(value);case 6:result=_context2.sent;status=result.status,data=result.data,msg=result.msg;if(status===0){_message.success(\"\".concat(_this.user?'修改':'添加',\"\\u7528\\u6237\\u6210\\u529F\\uFF01\"));users=_toConsumableArray(_this.state.users);users.unshift(data);_this.setState({users:users,isShow:false});// 更新显示的列表\n_this.getUserList();}else{_message.error(msg,1);}case 9:case\"end\":return _context2.stop();}}},_callee2);}));_this.showAdd=function(){// 去除前面的user\n_this.user=null;_this.setState({isShow:true});};_this.handleCancel=function(){_this.setState({isShow:false});_this.form.resetFields();};return _this;}_createClass(User,[{key:\"componentDidMount\",value:function componentDidMount(){this.getUserList();}/* // 根据role的数组，生成包含所有角色名的对象(属性名用角色id值)\r\n    initRoleNames = (roles) => {\r\n      const roleNames = roles.reduce((pre,role) => {\r\n        pre[role._id] = role.name\r\n        return pre\r\n      },{})\r\n      //保存值\r\n      this.roleNames = roleNames\r\n    }\r\n    // 显示修改界面\r\n    showUpdate = (user) => {\r\n      // 保存user的值\r\n      this.user = user\r\n      // 显示界面\r\n      this.setState({\r\n        isShow: true,\r\n      })\r\n    } */ // 添加/更新用户\n},{key:\"render\",value:/* \r\n     // 删除指定用户\r\n     deleteUser = (user) => {\r\n       Modal.confirm({\r\n         title: `确认删除${user.username}吗？`,\r\n         onOk: async () => {\r\n           const result = await reqDeleteUser(user._id)\r\n           if (result.status === 0) {\r\n             message.success('删除用户成功！')\r\n             this.getUsers()\r\n           }\r\n         }\r\n       })\r\n     }\r\n \r\n     UNSAFE_componentWillMount() {\r\n       this.initColumns()\r\n     }\r\n \r\n     componentDidMount(){\r\n       this.getUsers()\r\n     } */function render(){var _this2=this;var _this$state=this.state,users=_this$state.users,roles=_this$state.roles,isShow=_this$state.isShow;var columns=[{title:'用户名',dataIndex:'username',key:'username'},{title:'邮箱',dataIndex:'email',key:'email'},{title:'电话',dataIndex:'phone',key:'phone'},{title:'注册时间',dataIndex:'create_time',key:'create_time',render:function render(time){return dayjs(time).format('YYYY年 MM月DD日 HH:mm:ss');}},{title:'所属角色',dataIndex:'role_id',key:'role_id',render:function render(id){var result=_this2.state.roles.find(function(item){return item._id===id;});if(result)return result.name;}},{title:'操作',key:'option',render:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(_Button,{type:\"link\",children:\"\\u4FEE\\u6539\"}),/*#__PURE__*/_jsx(_Button,{type:\"link\",children:\"\\u5220\\u9664\"})]});}}];var title=/*#__PURE__*/_jsx(_Button,{onClick:function onClick(){_this2.setState({isShow:true});// this.form.resetFields()\n},type:\"primary\",children:\"\\u521B\\u5EFA\\u7528\\u6237\"});var user=this.user||{};return/*#__PURE__*/_jsxs(_Card,{title:title,children:[/*#__PURE__*/_jsx(_Table,{bordered:true,rowKey:\"_id\",dataSource:users,columns:columns,pagination:{defaultPageSize:PAGE_SIZE}}),/*#__PURE__*/_jsx(_Modal,{title:user._id?'修改用户':'添加用户',visible:isShow,onOk:this.handleOk,onCancel:this.handleCancel,children:/*#__PURE__*/_jsx(UserForm,{roles:roles,setForm:function setForm(form){return _this2.form=form;},user:user})})]});}}]);return User;}(Component),_temp))||_class);export default User;","map":{"version":3,"sources":["C:/Users/PC/Desktop/源码/react_Project/react-project/src/containers/User/index.jsx"],"names":["React","Component","connect","dayjs","PAGE_SIZE","reqUsers","reqAddOrUpdateUser","UserForm","User","state","users","roles","isShow","getUserList","result","status","data","msg","setState","reverse","success","error","handleOk","value","form","getFieldsValue","console","log","resetFields","_id","user","unshift","showAdd","handleCancel","columns","title","dataIndex","key","render","time","format","id","find","item","name","defaultPageSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Table, Modal, Card, message } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport dayjs from 'dayjs'\r\nimport { PAGE_SIZE } from '../../config/index.js'\r\n// import { formateDate } from '../../utils/dateUtils'\r\n// import LinkButton from '../../components/link-button/index'\r\nimport {/* reqDeleteUser, */ reqUsers, reqAddOrUpdateUser } from '../../api/index'\r\nimport UserForm from './user-form'\r\n// 用户路由\r\n@connect(\r\n    state => ({}),\r\n    {}\r\n)\r\nclass User extends Component {\r\n    state = {\r\n        users: [],  //用来存放用户列表的数组\r\n        roles: [],  //所有角色的列表\r\n        isShow: false,  //是否显示对话框\r\n    }\r\n\r\n\r\n    getUserList = async () => {\r\n        let result = await reqUsers()\r\n        const { status, data, msg } = result\r\n        // console.log(data);\r\n        if (status === 0) {\r\n            this.setState({\r\n                users: data.users.reverse(),\r\n                roles: data.roles\r\n            })\r\n            message.success('获取用户列表成功')\r\n        } else {\r\n            message.error(msg, 1)\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getUserList()\r\n    }\r\n    /* // 根据role的数组，生成包含所有角色名的对象(属性名用角色id值)\r\n    initRoleNames = (roles) => {\r\n      const roleNames = roles.reduce((pre,role) => {\r\n        pre[role._id] = role.name\r\n        return pre\r\n      },{})\r\n      //保存值\r\n      this.roleNames = roleNames\r\n    }\r\n    // 显示修改界面\r\n    showUpdate = (user) => {\r\n      // 保存user的值\r\n      this.user = user\r\n      // 显示界面\r\n      this.setState({\r\n        isShow: true,\r\n      })\r\n    } */\r\n\r\n    // 添加/更新用户\r\n    handleOk = async () => {\r\n        // console.log(this.form);\r\n        // 收集输入数据\r\n        const value = this.form.getFieldsValue()\r\n        console.log(value);\r\n        this.form.resetFields()\r\n\r\n        // 如果是更新 需要给user指定_id属性\r\n        if (this.value) {\r\n            value._id = this.value._id\r\n        }\r\n        // 提交添加的请求\r\n        let result = await reqAddOrUpdateUser(value)\r\n        const { status, data, msg } = result\r\n        if (status === 0) {\r\n            message.success(`${this.user ? '修改' : '添加'}用户成功！`)\r\n            let users = [...this.state.users]\r\n            users.unshift(data)\r\n            this.setState({\r\n                users, isShow: false\r\n            })\r\n            // 更新显示的列表\r\n            this.getUserList()\r\n        } else {\r\n            message.error(msg, 1)\r\n        }\r\n    }\r\n    // 创建用户\r\n    showAdd = () => {\r\n        // 去除前面的user\r\n        this.user = null\r\n        this.setState({ isShow: true })\r\n    }\r\n\r\n    // 取消的回调\r\n    handleCancel = () => {\r\n        this.setState({ isShow: false })\r\n        this.form.resetFields()\r\n    }\r\n    /* \r\n     // 删除指定用户\r\n     deleteUser = (user) => {\r\n       Modal.confirm({\r\n         title: `确认删除${user.username}吗？`,\r\n         onOk: async () => {\r\n           const result = await reqDeleteUser(user._id)\r\n           if (result.status === 0) {\r\n             message.success('删除用户成功！')\r\n             this.getUsers()\r\n           }\r\n         }\r\n       })\r\n     }\r\n \r\n     UNSAFE_componentWillMount() {\r\n       this.initColumns()\r\n     }\r\n \r\n     componentDidMount(){\r\n       this.getUsers()\r\n     } */\r\n\r\n    render() {\r\n        const { users, roles, isShow } = this.state\r\n        const columns = [\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'username',\r\n                key: 'username',\r\n            },\r\n            {\r\n                title: '邮箱',\r\n                dataIndex: 'email',\r\n                key: 'email',\r\n            },\r\n            {\r\n                title: '电话',\r\n                dataIndex: 'phone',\r\n                key: 'phone',\r\n            },\r\n            {\r\n                title: '注册时间',\r\n                dataIndex: 'create_time',\r\n                key: 'create_time',\r\n                render: time => dayjs(time).format('YYYY年 MM月DD日 HH:mm:ss')\r\n            },\r\n            {\r\n                title: '所属角色',\r\n                dataIndex: 'role_id',\r\n                key: 'role_id',\r\n                render: (id) => {\r\n                    let result = this.state.roles.find((item) => {\r\n                        return item._id === id\r\n                    })\r\n                    if (result) return result.name\r\n                }\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'option',\r\n                render: () => (\r\n                    <div>\r\n                        <Button\r\n                            type='link'\r\n                        >修改\r\n                  </Button>\r\n                        <Button\r\n                            type='link'\r\n                        >删除\r\n                  </Button>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n        const title = <Button onClick={() => {\r\n            this.setState({ isShow: true });\r\n            // this.form.resetFields()\r\n        }}\r\n            type='primary'>创建用户</Button>\r\n        const user = this.user || {}\r\n        return (\r\n            <Card title={title}>\r\n                <Table\r\n                    bordered\r\n                    rowKey='_id'\r\n                    dataSource={users}\r\n                    columns={columns}\r\n                    pagination={{ defaultPageSize: PAGE_SIZE }} />\r\n\r\n                <Modal\r\n                    title={user._id ? '修改用户' : '添加用户'}\r\n                    visible={isShow}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}>\r\n                    <UserForm roles={roles}\r\n                        setForm={form => this.form = form}\r\n                        user={user} />\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nexport default User\r\n"]},"metadata":{},"sourceType":"module"}