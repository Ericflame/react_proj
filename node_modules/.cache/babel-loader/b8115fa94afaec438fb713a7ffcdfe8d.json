{"ast":null,"code":"import\"antd/es/card/style\";import _Card from\"antd/es/card\";import\"antd/es/table/style\";import _Table from\"antd/es/table\";import\"antd/es/button/style\";import _Button from\"antd/es/button\";import\"antd/es/message/style\";import _message from\"antd/es/message\";import\"antd/es/modal/style\";import _Modal from\"antd/es/modal\";import _regeneratorRuntime from\"C:/Users/PC/Desktop/\\u6E90\\u7801/react_Project/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/PC/Desktop/\\u6E90\\u7801/react_Project/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:/Users/PC/Desktop/\\u6E90\\u7801/react_Project/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/PC/Desktop/\\u6E90\\u7801/react_Project/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/PC/Desktop/\\u6E90\\u7801/react_Project/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/PC/Desktop/\\u6E90\\u7801/react_Project/react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";var _dec,_class,_temp;import React,{PureComponent}from'react';import{connect}from'react-redux';import{reqRoles,reqAddRole,reqUpdateRole,reqDeleteUser}from'../../api/index';import dayjs from'dayjs';import ADDForm from'./add-form';import AuthForm from'./auth-form';// 角色路由\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Role=(_dec=connect(function(state){return{username:state.userInfo.user.username};},{}),_dec(_class=(_temp=/*#__PURE__*/function(_PureComponent){_inherits(Role,_PureComponent);var _super=_createSuper(Role);function Role(props){var _this;_classCallCheck(this,Role);_this=_super.call(this,props);_this.state={roles:[],//用来存放各种角色的数组\nisShowAdd:false,//是否显示添加界面\nisShowAuth:false,//是否显示设置权限界面\n_id:'',checkedKeys:[]};_this.getRoles=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result,roles;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return reqRoles();case 2:result=_context.sent;if(result.status===0){roles=result.data;_this.setState({roles:roles});}case 4:case\"end\":return _context.stop();}}},_callee);}));_this.deleteUser=function(user){_Modal.confirm({title:\"\\u786E\\u8BA4\\u5220\\u9664\".concat(user.username,\"\\u5417\\uFF1F\"),onOk:function(){var _onOk=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return reqDeleteUser(user._id);case 2:result=_context2.sent;if(result.status===0){_message.success('删除用户成功！');_this.getUsers();}case 4:case\"end\":return _context2.stop();}}},_callee2);}));function onOk(){return _onOk.apply(this,arguments);}return onOk;}()});};_this.handleOk=function(){console.log(\"哈哈\");//进行表单验证\n//   console.log(this.form);\n_this.form.validateFields().then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(values){var roleName,result,msg,status;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0://隐藏确认框\n_this.setState({isShowAdd:false});//收集输入数据\nroleName=values.roleName;_this.form.resetFields();// console.log(roleName);\n//发请求添加\n_context3.next=5;return reqAddRole(roleName);case 5:result=_context3.sent;msg=result.msg,status=result.status;if(status===0){_message.success('新增角色成功');_this.getRoles();_this.setState({isShowAdd:false});// 更新roles状态  更新后的数据和之前的状态数据有关\n/* this.setState(state=>({\r\n                      roles: [...state.roles,role],\r\n                      \r\n                    })) */}else{_message.error(msg,1);}case 8:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x){return _ref2.apply(this,arguments);};}()).catch(function(errorInfo){alert('出错',errorInfo);});};_this.handleCancel=function(){_this.form.resetFields();_this.setState({isShowAdd:false});};_this.updateRole=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var menus,_id,username,result,status,msg;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:menus=_this.auth.current.getMenus();// const menu = menus.split('/').reverse()[0]\n_id=_this.state._id;username=_this.props.username;_context4.next=5;return reqUpdateRole({_id:_id,auth_name:username,menus:menus});case 5:result=_context4.sent;status=result.status,msg=result.msg;if(status===0){_message.success('授权成功',1);_this.setState({isShowAuth:false});_this.getRoles();}else{_message.error(msg,1);}/* \r\n         // 隐藏确认框\r\n         this.setState({\r\n           isShowAuth: false\r\n         })\r\n         // 得到最新的menus\r\n         role.menus = menus\r\n         role.auth_name = memoryUtils.user.username\r\n         console.log(role); */ // 请求更新\n/* const result = await reqUpdateRole(role)\r\n        if (result.status === 0) {\r\n          // 如果当前更新的是自己角色的权限 需要强制退出\r\n          if (role._id === memoryUtils.user.role_id) {\r\n            // 清空本地存储\r\n            memoryUtils.user = {}\r\n            storageUtils.removeUser()\r\n            this.props.history.replace('/login')\r\n            message.success('用户权限已更新,请重新登录!')\r\n          } else {\r\n            message.success('设置权限成功')\r\n            // 获取显示列表的两种方式\r\n            // this.getRoles()\r\n            this.setState({\r\n              roles: [...this.state.roles]\r\n            })\r\n          }\r\n  \r\n          \r\n        } */case 8:case\"end\":return _context4.stop();}}},_callee4);}));_this.handleCancelUpdate=function(){_this.setState({isShowAuth:false});// this.form.resetFields()\n};_this.showAuth=function(id){var roles=_this.state.roles;var result=roles.find(function(item){return item._id===id;});if(result){console.log(result);_this.setState({checkedKeys:result.menus});}_this.setState({isShowAuth:true,_id:id});};_this.showAdd=function(){// this.form.resetFields()\n_this.setState({isShowAdd:true});};_this.auth=/*#__PURE__*/React.createRef();return _this;}_createClass(Role,[{key:\"componentDidMount\",value:function componentDidMount(){//发送请求获取角色列表数据\nthis.getRoles();}// 获取角色的列表数据\n},{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,roles=_this$state.roles,checkedKeys=_this$state.checkedKeys,isShowAdd=_this$state.isShowAdd,isShowAuth=_this$state.isShowAuth;var columns=[{title:'角色名称',dataIndex:'name',key:'name'},{title:'创建时间',dataIndex:'create_time',key:'create_time',render:function render(time){return dayjs(time).format('YYYY年 MM月DD日 HH:mm:ss');}},{title:'授权时间',dataIndex:'auth_time',key:'auth_time',render:function render(time){return time?dayjs(time).format('YYYY年 MM月DD日 HH:mm:ss'):'';}},{title:'授权人',dataIndex:'auth_name',key:'auth_name'},{title:'操作',key:'option',render:function render(item){return/*#__PURE__*/_jsx(_Button,{type:\"link\",onClick:function onClick(){_this2.showAuth(item._id);},children:\"\\u8BBE\\u7F6E\\u6743\\u9650\"});}}];var title=/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(_Button,{onClick:function onClick(){_this2.showAdd();},type:\"primary\",children:\"\\u521B\\u5EFA\\u89D2\\u8272\"}),\" \\xA0 \\xA0\"]});return/*#__PURE__*/_jsxs(_Card,{title:title,children:[/*#__PURE__*/_jsx(_Table,{bordered:true,rowKey:\"_id\",dataSource:roles,columns:columns/* pagination={{ defaultPageSize: 3 }} */,onRow:this.onRow}),/*#__PURE__*/_jsx(_Modal,{title:\"\\u6DFB\\u52A0\\u89D2\\u8272\",visible:isShowAdd,onOk:this.handleOk,onText:\"\\u786E\\u8BA4\",cancelText:\"\\u53D6\\u6D88\",onCancel:this.handleCancel,children:/*#__PURE__*/_jsx(ADDForm,{setForm:function setForm(form){return _this2.form=form;}})}),/*#__PURE__*/_jsx(_Modal,{onText:\"\\u786E\\u8BA4\",cancelText:\"\\u53D6\\u6D88\",title:\"\\u8BBE\\u7F6E\\u89D2\\u8272\\u6743\\u9650\",visible:isShowAuth,onOk:this.updateRole,onCancel:this.handleCancelUpdate,children:/*#__PURE__*/_jsx(AuthForm,{ref:this.auth,role:checkedKeys})})]});}}]);return Role;}(PureComponent),_temp))||_class);export default Role;","map":{"version":3,"sources":["C:/Users/PC/Desktop/源码/react_Project/react-project/src/containers/Role/index.jsx"],"names":["React","PureComponent","connect","reqRoles","reqAddRole","reqUpdateRole","reqDeleteUser","dayjs","ADDForm","AuthForm","Role","state","username","userInfo","user","props","roles","isShowAdd","isShowAuth","_id","checkedKeys","getRoles","result","status","data","setState","deleteUser","confirm","title","onOk","success","getUsers","handleOk","console","log","form","validateFields","then","values","roleName","resetFields","msg","error","catch","errorInfo","alert","handleCancel","updateRole","menus","auth","current","getMenus","auth_name","handleCancelUpdate","showAuth","id","find","item","showAdd","createRef","columns","dataIndex","key","render","time","format","onRow"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport { Card, Button, Table, Modal, message } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { reqRoles, reqAddRole, reqUpdateRole,reqDeleteUser } from '../../api/index'\r\nimport dayjs from 'dayjs'\r\nimport ADDForm from './add-form'\r\nimport AuthForm from './auth-form'\r\n\r\n\r\n// 角色路由\r\n@connect(\r\n    state => ({ username: state.userInfo.user.username }),\r\n    {}\r\n)\r\nclass Role extends PureComponent {\r\n    state = {\r\n        roles: [],  //用来存放各种角色的数组\r\n        isShowAdd: false,  //是否显示添加界面\r\n        isShowAuth: false, //是否显示设置权限界面\r\n        _id: '',\r\n        checkedKeys: []\r\n    }\r\n    constructor(props) {\r\n        super(props)\r\n        this.auth = React.createRef()\r\n    }\r\n    componentDidMount() {\r\n        //发送请求获取角色列表数据\r\n        this.getRoles()\r\n    }\r\n    // 获取角色的列表数据\r\n    getRoles = async () => {\r\n        const result = await reqRoles()\r\n        if (result.status === 0) {\r\n            const roles = result.data\r\n            this.setState({ roles })\r\n        }\r\n    }\r\n\r\n    // 修改指定用户\r\n\r\n\r\n    // 删除指定用户\r\n    deleteUser = (user) => {\r\n        Modal.confirm({\r\n            title: `确认删除${user.username}吗？`,\r\n            onOk: async () => {\r\n                const result = await reqDeleteUser(user._id)\r\n                if (result.status === 0) {\r\n                    message.success('删除用户成功！')\r\n                    this.getUsers()\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    // 添加角色成功的回调函数\r\n    handleOk = () => {\r\n        console.log(\"哈哈\");\r\n        //进行表单验证\r\n        //   console.log(this.form);\r\n        this.form.validateFields()\r\n            .then(async (values) => {\r\n                //隐藏确认框\r\n                this.setState({ isShowAdd: false })\r\n                //收集输入数据\r\n                const { roleName } = values\r\n                this.form.resetFields()\r\n                // console.log(roleName);\r\n                //发请求添加\r\n                const result = await reqAddRole(roleName)\r\n                const { msg, status } = result\r\n                if (status === 0) {\r\n                    message.success('新增角色成功')\r\n                    this.getRoles()\r\n                    this.setState({ isShowAdd: false })\r\n                    // 更新roles状态  更新后的数据和之前的状态数据有关\r\n                    /* this.setState(state=>({\r\n                      roles: [...state.roles,role],\r\n                      \r\n                    })) */\r\n                } else {\r\n                    message.error(msg, 1)\r\n                }\r\n            }\r\n            )\r\n            .catch(errorInfo => {\r\n                alert('出错', errorInfo)\r\n            });\r\n    }\r\n\r\n    //取消添加角色的回调\r\n    handleCancel = () => {\r\n        this.form.resetFields()\r\n        this.setState({ isShowAdd: false })\r\n    }\r\n\r\n    // 更新角色的回调函数\r\n    updateRole = async () => {\r\n        const menus = this.auth.current.getMenus()\r\n        // const menu = menus.split('/').reverse()[0]\r\n        const { _id } = this.state\r\n        const { username } = this.props\r\n\r\n        let result = await reqUpdateRole({ _id, auth_name: username, menus })\r\n        const { status, msg } = result\r\n        if (status === 0) {\r\n            message.success('授权成功', 1)\r\n            this.setState({ isShowAuth: false })\r\n            this.getRoles()\r\n        } else {\r\n            message.error(msg, 1)\r\n        }\r\n        /* \r\n         // 隐藏确认框\r\n         this.setState({\r\n           isShowAuth: false\r\n         })\r\n         // 得到最新的menus\r\n         role.menus = menus\r\n         role.auth_name = memoryUtils.user.username\r\n         console.log(role); */\r\n        // 请求更新\r\n        /* const result = await reqUpdateRole(role)\r\n        if (result.status === 0) {\r\n          // 如果当前更新的是自己角色的权限 需要强制退出\r\n          if (role._id === memoryUtils.user.role_id) {\r\n            // 清空本地存储\r\n            memoryUtils.user = {}\r\n            storageUtils.removeUser()\r\n            this.props.history.replace('/login')\r\n            message.success('用户权限已更新,请重新登录!')\r\n          } else {\r\n            message.success('设置权限成功')\r\n            // 获取显示列表的两种方式\r\n            // this.getRoles()\r\n            this.setState({\r\n              roles: [...this.state.roles]\r\n            })\r\n          }\r\n  \r\n          \r\n        } */\r\n    }\r\n\r\n    // 取消更新角色的回调\r\n    handleCancelUpdate = () => {\r\n        this.setState({ isShowAuth: false })\r\n        // this.form.resetFields()\r\n    }\r\n    //用于展示授权弹窗\r\n    showAuth = (id) => {\r\n        const { roles } = this.state\r\n        let result = roles.find((item) => {\r\n            return item._id === id\r\n        })\r\n        if (result) {\r\n            console.log(result);\r\n            this.setState({ checkedKeys: result.menus })\r\n        }\r\n        this.setState({ isShowAuth: true, _id: id })\r\n    }\r\n    //展示新增弹窗\r\n    showAdd = () => {\r\n        // this.form.resetFields()\r\n        this.setState({ isShowAdd: true })\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { roles, checkedKeys, isShowAdd, isShowAuth } = this.state\r\n        const columns = [\r\n            {\r\n                title: '角色名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'create_time',\r\n                key: 'create_time',\r\n                render: (time) => dayjs(time).format('YYYY年 MM月DD日 HH:mm:ss')\r\n            },\r\n            {\r\n                title: '授权时间',\r\n                dataIndex: 'auth_time',\r\n                key: 'auth_time',\r\n                render: (time) => time ? dayjs(time).format('YYYY年 MM月DD日 HH:mm:ss') : ''\r\n            },\r\n            {\r\n                title: '授权人',\r\n                dataIndex: 'auth_name',\r\n                key: 'auth_name',\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'option',\r\n                render: (item) => <Button type='link' onClick={() => { this.showAuth(item._id) }}>设置权限</Button>\r\n            }\r\n        ];\r\n        const title = (\r\n            <span>\r\n                <Button onClick={() => {this.showAdd()}} type='primary'>创建角色</Button> &nbsp; &nbsp;\r\n                {/* <Button type='primary' disabled={!role._id}\r\n                    onClick={() => { this.setState({ isShowAuth: true }) }} >设置角色权限</Button> */}\r\n            </span>\r\n        )\r\n        return (\r\n            <Card title={title}>\r\n                <Table\r\n                    bordered\r\n                    rowKey='_id'\r\n                    dataSource={roles}\r\n                    columns={columns}\r\n                    /* pagination={{ defaultPageSize: 3 }} */\r\n                    onRow={this.onRow} />\r\n                <Modal\r\n                    title='添加角色'\r\n                    visible={isShowAdd}\r\n                    onOk={this.handleOk}\r\n                    onText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <ADDForm setForm={form => this.form = form} />\r\n                </Modal>\r\n                <Modal\r\n                    onText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                    title='设置角色权限'\r\n                    visible={isShowAuth}\r\n                    onOk={this.updateRole}\r\n                    onCancel={this.handleCancelUpdate}\r\n                >\r\n                    <AuthForm ref={this.auth} role={checkedKeys} />\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nexport default Role"]},"metadata":{},"sourceType":"module"}