{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react-project\\\\src\\\\containers\\\\Role\\\\index.jsx\",\n    _dec,\n    _class,\n    _temp;\n\nimport React, { PureComponent } from 'react';\n// import {reqRoles,reqAddRole,reqUpdateRole} from '../../api/index'\nimport ADDForm from './add-form';\nimport AuthForm from './auth-form';\nimport { connect } from 'react-redux'; // 角色路由\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet Role = (_dec = connect(state => ({}), {}), _dec(_class = (_temp = class Role extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roles: [],\n      //用来存放各种角色的数组\n      role: {},\n      //选中的role\n      isShowAdd: false,\n      //是否显示添加界面\n      isShowAuth: false //是否显示设置权限界面\n\n    };\n\n    this.initColumn = () => {\n      this.columns = [{\n        title: '角色名称',\n        dataIndex: 'name'\n      }, {\n        title: '创建时间',\n        dataIndex: 'create_time',\n        render: create_time => formateDate(create_time)\n      }, {\n        title: '授权时间',\n        dataIndex: 'auth_time',\n        render: formateDate\n      }, {\n        title: '授权人',\n        dataIndex: 'auth_name'\n      }];\n    };\n\n    this.getRoles = async () => {\n      const result = await reqRoles();\n\n      if (result.status === 0) {\n        const roles = result.data;\n        this.setState({\n          roles\n        });\n      }\n    };\n\n    this.onRow = role => {\n      return {\n        onClick: event => {\n          this.setState({\n            role\n          });\n        }\n      };\n    };\n\n    this.addRole = () => {\n      //进行表单验证\n      //   console.log(this.form);\n      this.form.validateFields().then(async values => {\n        //隐藏确认框\n        this.setState({\n          isShowAdd: false\n        }); //收集输入数据\n\n        const {\n          roleName\n        } = values;\n        this.form.resetFields(); //发请求添加\n\n        const result = await reqAddRole(roleName);\n\n        if (result.status === 0) {\n          //   this.getRoles()\n          // 新产生的角色\n          const role = result.data; // 更新roles状态  更新后的数据和之前的状态数据有关\n\n          this.setState(state => ({\n            roles: [...state.roles, role]\n          }));\n        } else {\n          _message.error('添加角色失败');\n        }\n      }).catch(errorInfo => {\n        alert('出错', errorInfo);\n      });\n    };\n\n    this.handleCancel = () => {\n      this.form.resetFields();\n      this.setState({\n        isShowAdd: false\n      });\n    };\n\n    this.updateRole = async () => {\n      // 隐藏确认框\n      this.setState({\n        isShowAuth: false\n      });\n      const role = this.state.role; // 得到最新的menus\n\n      const menus = this.auth.current.getMenus();\n      role.menus = menus;\n      role.auth_time = Date.now();\n      role.auth_name = memoryUtils.user.username; // 请求更新\n\n      const result = await reqUpdateRole(role);\n\n      if (result.status === 0) {\n        // 如果当前更新的是自己角色的权限 需要强制退出\n        if (role._id === memoryUtils.user.role_id) {\n          // 清空本地存储\n          memoryUtils.user = {};\n          storageUtils.removeUser();\n          this.props.history.replace('/login');\n\n          _message.success('用户权限已更新,请重新登录!');\n        } else {\n          _message.success('设置权限成功'); // 获取显示列表的两种方式\n          // this.getRoles()\n\n\n          this.setState({\n            roles: [...this.state.roles]\n          });\n        }\n      }\n    };\n\n    this.handleCancelUpdate = () => {\n      this.setState({\n        isShowAuth: false\n      }); // this.form.resetFields()\n    };\n\n    this.auth = /*#__PURE__*/React.createRef();\n  }\n\n  UNSAFE_componentWillMount() {\n    this.initColumn();\n  }\n\n  componentDidMount() {\n    //发送请求获取角色列表数据\n    this.getRoles();\n  }\n\n  render() {\n    const {\n      roles,\n      role,\n      isShowAdd,\n      isShowAuth\n    } = this.state;\n\n    const title = /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(_Button, {\n        onClick: () => {\n          this.setState({\n            isShowAdd: true\n          });\n        },\n        type: \"primary\",\n        children: \"\\u521B\\u5EFA\\u89D2\\u8272\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this), \" \\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(_Button, {\n        type: \"primary\",\n        disabled: !role._id,\n        onClick: () => {\n          this.setState({\n            isShowAuth: true\n          });\n        },\n        children: \"\\u8BBE\\u7F6E\\u89D2\\u8272\\u6743\\u9650\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(_Card, {\n      title: title,\n      children: [/*#__PURE__*/_jsxDEV(_Table, {\n        bordered: true,\n        rowKey: \"_id\",\n        dataSource: roles,\n        columns: this.columns,\n        pagination: {\n          defaultPageSize: 3\n        },\n        rowSelection: {\n          type: 'radio',\n          selectedRowKeys: [role._id],\n          // 当选择某个radio的回调\n          onSelect: role => {\n            this.setState({\n              role\n            });\n          }\n        },\n        onRow: this.onRow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n        title: \"\\u6DFB\\u52A0\\u89D2\\u8272\",\n        visible: isShowAdd,\n        onOk: this.addRole,\n        onCancel: this.handleCancel,\n        children: /*#__PURE__*/_jsxDEV(ADDForm, {\n          setForm: form => this.form = form\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n        title: \"\\u8BBE\\u7F6E\\u89D2\\u8272\\u6743\\u9650\",\n        visible: isShowAuth,\n        onOk: this.updateRole,\n        onCancel: this.handleCancelUpdate,\n        children: /*#__PURE__*/_jsxDEV(AuthForm, {\n          ref: this.auth,\n          role: role\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }, this);\n  }\n\n}, _temp)) || _class);\nexport default Role;","map":{"version":3,"sources":["C:/Users/PC/Desktop/react-project/src/containers/Role/index.jsx"],"names":["React","PureComponent","ADDForm","AuthForm","connect","Role","state","constructor","props","roles","role","isShowAdd","isShowAuth","initColumn","columns","title","dataIndex","render","create_time","formateDate","getRoles","result","reqRoles","status","data","setState","onRow","onClick","event","addRole","form","validateFields","then","values","roleName","resetFields","reqAddRole","error","catch","errorInfo","alert","handleCancel","updateRole","menus","auth","current","getMenus","auth_time","Date","now","auth_name","memoryUtils","user","username","reqUpdateRole","_id","role_id","storageUtils","removeUser","history","replace","success","handleCancelUpdate","createRef","UNSAFE_componentWillMount","componentDidMount","defaultPageSize","type","selectedRowKeys","onSelect"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport { Card , Button, Table,Modal, message} from 'antd'\r\n// import {reqRoles,reqAddRole,reqUpdateRole} from '../../api/index'\r\nimport ADDForm from './add-form'\r\nimport AuthForm from './auth-form'\r\nimport { connect } from 'react-redux'\r\n\r\n// 角色路由\r\n@connect(\r\n    state =>({}),\r\n    {}\r\n)\r\nclass Role extends PureComponent {\r\n    state = {\r\n      roles: [],  //用来存放各种角色的数组\r\n      role: {},  //选中的role\r\n      isShowAdd: false,  //是否显示添加界面\r\n      isShowAuth: false, //是否显示设置权限界面\r\n    }\r\n\r\n\r\n    constructor(props){\r\n      super(props)\r\n      this.auth = React.createRef()\r\n    }\r\n\r\n    initColumn = () => {\r\n      this.columns = [\r\n        {\r\n          title: '角色名称',\r\n          dataIndex: 'name',\r\n        },\r\n        {\r\n          title: '创建时间',\r\n          dataIndex: 'create_time',\r\n          render: (create_time) => formateDate(create_time)\r\n        },\r\n        {\r\n          title: '授权时间',\r\n          dataIndex: 'auth_time',\r\n          render: formateDate\r\n        },\r\n        {\r\n          title: '授权人',\r\n          dataIndex: 'auth_name'\r\n        }\r\n      ] \r\n    }\r\n\r\n    // 获取角色的列表数据\r\n    getRoles = async () => {\r\n      const result = await reqRoles()\r\n      if (result.status === 0) {\r\n        const roles = result.data\r\n        this.setState({roles})\r\n      }\r\n    }\r\n\r\n    onRow = (role) => {\r\n      return {\r\n        onClick: event => {\r\n          this.setState({role})\r\n        }\r\n      }\r\n    }\r\n\r\n    // 添加角色成功的回调函数\r\n    addRole = () => {\r\n      //进行表单验证\r\n    //   console.log(this.form);\r\n    this.form.validateFields()\r\n    .then(async (values)=>{\r\n        //隐藏确认框\r\n        this.setState({isShowAdd:false})\r\n        //收集输入数据\r\n        const {roleName} = values\r\n        this.form.resetFields()\r\n        //发请求添加\r\n        const result = await reqAddRole(roleName)\r\n        if (result.status===0) {\r\n        //   this.getRoles()\r\n        // 新产生的角色\r\n        const role = result.data\r\n        // 更新roles状态  更新后的数据和之前的状态数据有关\r\n        this.setState(state=>({\r\n          roles: [...state.roles,role]\r\n        }))\r\n        } else {\r\n          message.error('添加角色失败')\r\n        }\r\n      }\r\n    )\r\n    .catch(errorInfo => {\r\n        alert('出错',errorInfo)\r\n      });\r\n    }\r\n\r\n    //取消添加角色的回调\r\n    handleCancel = () => {\r\n      this.form.resetFields()\r\n      this.setState({isShowAdd:false})\r\n    }\r\n\r\n    // 更新角色的回调函数\r\n    updateRole = async () => {\r\n      // 隐藏确认框\r\n      this.setState({\r\n        isShowAuth: false\r\n      })\r\n      const role = this.state.role\r\n      // 得到最新的menus\r\n      const menus = this.auth.current.getMenus()\r\n      role.menus = menus\r\n      role.auth_time = Date.now()\r\n      role.auth_name = memoryUtils.user.username\r\n\r\n      // 请求更新\r\n      const result = await reqUpdateRole(role)\r\n      if (result.status === 0) {\r\n        // 如果当前更新的是自己角色的权限 需要强制退出\r\n        if (role._id === memoryUtils.user.role_id) {\r\n          // 清空本地存储\r\n          memoryUtils.user = {}\r\n          storageUtils.removeUser()\r\n          this.props.history.replace('/login')\r\n          message.success('用户权限已更新,请重新登录!')\r\n        } else {\r\n          message.success('设置权限成功')\r\n          // 获取显示列表的两种方式\r\n          // this.getRoles()\r\n          this.setState({\r\n            roles: [...this.state.roles]\r\n          })\r\n        }\r\n\r\n        \r\n      }\r\n    }\r\n\r\n    // 取消更新角色的回调\r\n    handleCancelUpdate = () => {\r\n      this.setState({isShowAuth:false})\r\n      // this.form.resetFields()\r\n    }\r\n\r\n    UNSAFE_componentWillMount(){\r\n      this.initColumn()\r\n    }\r\n\r\n    componentDidMount(){\r\n      //发送请求获取角色列表数据\r\n      this.getRoles()\r\n    }\r\n    render() {\r\n        const {roles,role, isShowAdd,isShowAuth} = this.state\r\n\r\n        const title = (\r\n          <span>\r\n            <Button onClick={()=>{this.setState({isShowAdd: true})}} type='primary'>创建角色</Button> &nbsp; &nbsp;\r\n            <Button type='primary' disabled={!role._id}\r\n             onClick={()=>{this.setState({isShowAuth: true})}} >设置角色权限</Button>\r\n          </span>\r\n        )\r\n        return (\r\n          <Card title={title}>\r\n            <Table \r\n            bordered  \r\n            rowKey='_id'\r\n            dataSource={roles}\r\n            columns={this.columns}\r\n            pagination={{defaultPageSize: 3}}\r\n            rowSelection={{type:'radio',selectedRowKeys:[role._id],\r\n              // 当选择某个radio的回调\r\n              onSelect: (role)=>{this.setState({role})}\r\n            }}\r\n            onRow={this.onRow} />\r\n            <Modal \r\n            title='添加角色'\r\n            visible={isShowAdd}\r\n            onOk={this.addRole}\r\n            onCancel={this.handleCancel}\r\n            >\r\n              <ADDForm setForm={form=>this.form = form} />\r\n            </Modal>\r\n            <Modal \r\n              title='设置角色权限'\r\n              visible={isShowAuth}\r\n              onOk={this.updateRole}\r\n              onCancel={this.handleCancelUpdate}\r\n            >\r\n              <AuthForm ref={this.auth} role={role}/>\r\n            </Modal>\r\n          </Card>\r\n        )\r\n    }\r\n}\r\nexport default Role"]},"metadata":{},"sourceType":"module"}