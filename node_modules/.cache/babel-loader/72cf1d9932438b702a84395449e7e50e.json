{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react-project\\\\src\\\\containers\\\\User\\\\index.jsx\",\n    _dec,\n    _class,\n    _temp;\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { dayjs } from 'dayjs';\nimport { PAGE_SIZE } from '../../config/index.js'; // import { formateDate } from '../../utils/dateUtils'\n// import LinkButton from '../../components/link-button/index'\n\nimport {\n/* reqDeleteUser, */\nreqUsers\n/* ,reqAddOrUpdateUser */\n} from '../../api/index';\nimport UserForm from './user-form'; // 用户路由\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet User = (_dec = connect(state => ({}), {}), _dec(_class = (_temp = class User extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      //用来存放用户列表的数组\n      roles: [],\n      //所有角色的列表\n      isShow: false //是否显示对话框\n\n    };\n\n    this.getUserList = async () => {\n      let result = await reqUsers();\n      const {\n        status,\n        data,\n        msg\n      } = result;\n\n      if (status === 0) {\n        this.setState({\n          users: data.users,\n          roles: data.roles\n        });\n\n        _message.success('获取用户列表成功');\n      } else {\n        _message.error(msg, 1);\n      }\n    };\n\n    this.handleOk = async () => {\n      this.setState({\n        isShow: false\n      }); // console.log(this.form);\n\n      /*  // 收集输入数据\r\n       const user = this.form.getFieldsValue()\r\n       // console.log(user);\r\n       this.form.resetFields()\r\n          // 如果是更新 需要给user指定_id属性\r\n       if (this.user) {\r\n         user._id = this.user._id\r\n       }\r\n          // 提交添加的请求\r\n       const result = await reqAddOrUpdateUser(user)\r\n       if (result.status === 0) {\r\n         message.success(`${this.user?'修改':'添加'}用户成功！`)\r\n         // 更新显示的列表\r\n         this.getUsers()\r\n       } */\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        isShow: false\n      });\n      this.form.resetFields();\n    };\n\n    this.deleteUser = user => {\n      _Modal.confirm({\n        title: `确认删除${user.username}吗？`,\n        onOk: async () => {\n          const result = await reqDeleteUser(user._id);\n\n          if (result.status === 0) {\n            _message.success('删除用户成功！');\n\n            this.getUsers();\n          }\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getUserList();\n  }\n  /* // 根据role的数组，生成包含所有角色名的对象(属性名用角色id值)\r\n  initRoleNames = (roles) => {\r\n    const roleNames = roles.reduce((pre,role) => {\r\n      pre[role._id] = role.name\r\n      return pre\r\n    },{})\r\n    //保存值\r\n    this.roleNames = roleNames\r\n  }\r\n     // 创建用户\r\n  showAdd = () => {\r\n    // 去除前面的user\r\n    this.user = null\r\n    this.setState({isShow:true})\r\n  }\r\n     // 显示修改界面\r\n  showUpdate = (user) => {\r\n    // 保存user的值\r\n    this.user = user\r\n    // 显示界面\r\n    this.setState({\r\n      isShow: true,\r\n    })\r\n  } */\n  // 添加/更新用户\n\n\n  UNSAFE_componentWillMount() {\n    this.initColumns();\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  render() {\n    const {\n      users,\n      roles,\n      isShow\n    } = this.state;\n    const dataSource = [];\n    const columns = [{\n      title: '用户名',\n      dataIndex: 'username'\n    }, {\n      title: '邮箱',\n      dataIndex: 'email'\n    }, {\n      title: '电话',\n      dataIndex: 'phone'\n    }, {\n      title: '注册时间',\n      dataIndex: 'create_time',\n      render: time => dayjs(time).format('YYYY年 MM月DD日 HH:mm:ss')\n    }, {\n      title: '所属角色',\n      dataIndex: 'role_id',\n      render: role_id => //this.roleNames[role_id]\n      (this.state.roles.find(role => role._id === role_id) || this.state.roles[0]).name // console.log('this',this.state.roles)\n\n    }, {\n      title: '操作',\n      render: user => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(_Button, {\n          type: \"link\",\n          onClick: () => this.showUpdate(user),\n          children: \"\\u4FEE\\u6539\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(_Button, {\n          type: \"link\",\n          onClick: () => {\n            this.deleteUser(user);\n          },\n          children: \"\\u5220\\u9664\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this)\n    }];\n\n    const title = /*#__PURE__*/_jsxDEV(_Button, {\n      onClick: () => this.showAdd,\n      type: \"primary\",\n      children: \"\\u521B\\u5EFA\\u7528\\u6237\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 23\n    }, this);\n\n    const user = this.user || {};\n    return /*#__PURE__*/_jsxDEV(_Card, {\n      title: title,\n      children: [/*#__PURE__*/_jsxDEV(_Table, {\n        bordered: true,\n        rowKey: \"_id\",\n        dataSource: users,\n        columns: columns,\n        pagination: {\n          defaultPageSize: PAGE_SIZE\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n        title: user._id ? '修改用户' : '添加用户',\n        visible: isShow,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this);\n  }\n\n}, _temp)) || _class);\nexport default User;","map":{"version":3,"sources":["C:/Users/PC/Desktop/react-project/src/containers/User/index.jsx"],"names":["React","Component","connect","dayjs","PAGE_SIZE","reqUsers","UserForm","User","state","users","roles","isShow","getUserList","result","status","data","msg","setState","success","error","handleOk","handleCancel","form","resetFields","deleteUser","user","confirm","title","username","onOk","reqDeleteUser","_id","getUsers","componentDidMount","UNSAFE_componentWillMount","initColumns","render","dataSource","columns","dataIndex","time","format","role_id","find","role","name","showUpdate","showAdd","defaultPageSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Table, Modal, Card, message } from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport {dayjs} from 'dayjs'\r\nimport {PAGE_SIZE} from '../../config/index.js'\r\n// import { formateDate } from '../../utils/dateUtils'\r\n// import LinkButton from '../../components/link-button/index'\r\nimport {/* reqDeleteUser, */ reqUsers/* ,reqAddOrUpdateUser */} from '../../api/index'\r\nimport UserForm from './user-form'\r\n// 用户路由\r\n@connect(\r\n    state=>({}),\r\n    {}\r\n)\r\nclass User extends Component {\r\n    state = {\r\n        users: [],  //用来存放用户列表的数组\r\n        roles: [],  //所有角色的列表\r\n        isShow: false,  //是否显示对话框\r\n    }\r\n\r\n\r\n    getUserList = async()=>{\r\n        let result = await reqUsers()\r\n        const {status,data,msg} = result\r\n        if(status === 0 ){\r\n            this.setState({\r\n                users:data.users,\r\n                roles:data.roles\r\n            })\r\n            message.success('获取用户列表成功')\r\n        }else{\r\n            message.error(msg,1)\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.getUserList()\r\n    }\r\n     /* // 根据role的数组，生成包含所有角色名的对象(属性名用角色id值)\r\n     initRoleNames = (roles) => {\r\n       const roleNames = roles.reduce((pre,role) => {\r\n         pre[role._id] = role.name\r\n         return pre\r\n       },{})\r\n       //保存值\r\n       this.roleNames = roleNames\r\n     }\r\n \r\n     // 创建用户\r\n     showAdd = () => {\r\n       // 去除前面的user\r\n       this.user = null\r\n       this.setState({isShow:true})\r\n     }\r\n \r\n     // 显示修改界面\r\n     showUpdate = (user) => {\r\n       // 保存user的值\r\n       this.user = user\r\n       // 显示界面\r\n       this.setState({\r\n         isShow: true,\r\n       })\r\n     } */\r\n \r\n     // 添加/更新用户\r\n     handleOk = async () => {\r\n \r\n       this.setState({isShow:false})\r\n       // console.log(this.form);\r\n \r\n      /*  // 收集输入数据\r\n       const user = this.form.getFieldsValue()\r\n       // console.log(user);\r\n       this.form.resetFields()\r\n \r\n       // 如果是更新 需要给user指定_id属性\r\n       if (this.user) {\r\n         user._id = this.user._id\r\n       }\r\n \r\n       // 提交添加的请求\r\n       const result = await reqAddOrUpdateUser(user)\r\n       if (result.status === 0) {\r\n         message.success(`${this.user?'修改':'添加'}用户成功！`)\r\n         // 更新显示的列表\r\n         this.getUsers()\r\n       } */\r\n     }\r\n\r\n    // 取消的回调\r\n    handleCancel = () => {\r\n        this.setState({ isShow: false })\r\n        this.form.resetFields()\r\n    }\r\n     // 删除指定用户\r\n     deleteUser = (user) => {\r\n       Modal.confirm({\r\n         title: `确认删除${user.username}吗？`,\r\n         onOk: async () => {\r\n           const result = await reqDeleteUser(user._id)\r\n           if (result.status === 0) {\r\n             message.success('删除用户成功！')\r\n             this.getUsers()\r\n           }\r\n         }\r\n       })\r\n     }\r\n \r\n     UNSAFE_componentWillMount() {\r\n       this.initColumns()\r\n     }\r\n \r\n     componentDidMount(){\r\n       this.getUsers()\r\n     }\r\n\r\n    render() {\r\n        const { users, roles, isShow } = this.state\r\n        const dataSource = []\r\n        const columns = [\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'username',\r\n            },\r\n            {\r\n                title: '邮箱',\r\n                dataIndex: 'email',\r\n            },\r\n            {\r\n                title: '电话',\r\n                dataIndex: 'phone',\r\n            },\r\n            {\r\n                title: '注册时间',\r\n                dataIndex: 'create_time',\r\n                render: (time) => dayjs(time).format('YYYY年 MM月DD日 HH:mm:ss')\r\n            },\r\n            {\r\n                title: '所属角色',\r\n                dataIndex: 'role_id',\r\n                render: (role_id) =>  //this.roleNames[role_id]\r\n                    (this.state.roles.find(role => role._id === role_id) || this.state.roles[0]).name\r\n                // console.log('this',this.state.roles)\r\n            },\r\n            {\r\n                title: '操作',\r\n                render: (user) => (\r\n                    <span>\r\n                        <Button type='link' onClick={() => this.showUpdate(user)}>修改</Button>\r\n                        <Button type='link' onClick={() => { this.deleteUser(user) }}>删除</Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ]\r\n        const title = <Button onClick={() => this.showAdd}\r\n            type='primary'>创建用户</Button>\r\n        const user = this.user || {}\r\n        return (\r\n            <Card title={title}>\r\n                <Table\r\n                    bordered\r\n                    rowKey='_id'\r\n                    dataSource={users}\r\n                    columns={columns}\r\n                    pagination={{ defaultPageSize: PAGE_SIZE }} />\r\n\r\n                <Modal\r\n                    title={user._id ? '修改用户' : '添加用户'}\r\n                    visible={isShow}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}>\r\n                    {/* <UserForm roles={roles}\r\n               setForm={form => this.form = form}\r\n               user={user}/>     */}\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nexport default User\r\n"]},"metadata":{},"sourceType":"module"}