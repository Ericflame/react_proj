{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react-project\\\\src\\\\containers\\\\User\\\\index.jsx\",\n    _dec,\n    _class,\n    _temp;\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport dayjs from 'dayjs';\nimport { PAGE_SIZE } from '../../config/index.js'; // import { formateDate } from '../../utils/dateUtils'\n// import LinkButton from '../../components/link-button/index'\n\nimport {\n/* reqDeleteUser, */\nreqUsers, reqAddOrUpdateUser } from '../../api/index';\nimport UserForm from './user-form'; // 用户路由\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet User = (_dec = connect(state => ({}), {}), _dec(_class = (_temp = class User extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      //用来存放用户列表的数组\n      roles: [],\n      //所有角色的列表\n      isShow: false //是否显示对话框\n\n    };\n\n    this.getUserList = async () => {\n      let result = await reqUsers();\n      const {\n        status,\n        data,\n        msg\n      } = result;\n\n      if (status === 0) {\n        this.setState({\n          users: data.users,\n          roles: data.roles\n        });\n\n        _message.success('获取用户列表成功');\n      } else {\n        _message.error(msg, 1);\n      }\n    };\n\n    this.handleOk = async () => {\n      this.setState({\n        isShow: false\n      }); // console.log(this.form);\n      // 收集输入数据\n\n      const value = this.form.getFieldsValue();\n      console.log(value);\n      this.form.resetFields(); // 如果是更新 需要给user指定_id属性\n\n      if (this.user) {\n        user._id = this.user._id;\n      } // 提交添加的请求\n\n\n      let result = await reqAddOrUpdateUser(value);\n      const {\n        status,\n        data,\n        msg\n      } = result;\n\n      if (status === 0) {\n        _message.success(`${this.user ? '修改' : '添加'}用户成功！`);\n\n        let userList = [this.state.users];\n        this.setState({}); // 更新显示的列表\n\n        this.getUserList();\n      } else {\n        _message.error(msg, 1);\n      }\n    };\n\n    this.showAdd = () => {\n      // 去除前面的user\n      this.user = null;\n      this.setState({\n        isShow: true\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        isShow: false\n      });\n      this.form.resetFields();\n    };\n  }\n\n  componentDidMount() {\n    this.getUserList();\n  }\n  /* // 根据role的数组，生成包含所有角色名的对象(属性名用角色id值)\r\n  initRoleNames = (roles) => {\r\n    const roleNames = roles.reduce((pre,role) => {\r\n      pre[role._id] = role.name\r\n      return pre\r\n    },{})\r\n    //保存值\r\n    this.roleNames = roleNames\r\n  }\r\n  // 显示修改界面\r\n  showUpdate = (user) => {\r\n    // 保存user的值\r\n    this.user = user\r\n    // 显示界面\r\n    this.setState({\r\n      isShow: true,\r\n    })\r\n  } */\n  // 添加/更新用户\n\n\n  /* \r\n   // 删除指定用户\r\n   deleteUser = (user) => {\r\n     Modal.confirm({\r\n       title: `确认删除${user.username}吗？`,\r\n       onOk: async () => {\r\n         const result = await reqDeleteUser(user._id)\r\n         if (result.status === 0) {\r\n           message.success('删除用户成功！')\r\n           this.getUsers()\r\n         }\r\n       }\r\n     })\r\n   }\r\n      UNSAFE_componentWillMount() {\r\n     this.initColumns()\r\n   }\r\n      componentDidMount(){\r\n     this.getUsers()\r\n   } */\n  render() {\n    const {\n      users,\n      roles,\n      isShow\n    } = this.state;\n    const columns = [{\n      title: '用户名',\n      dataIndex: 'username',\n      key: 'username'\n    }, {\n      title: '邮箱',\n      dataIndex: 'email',\n      key: 'email'\n    }, {\n      title: '电话',\n      dataIndex: 'phone',\n      key: 'phone'\n    }, {\n      title: '注册时间',\n      dataIndex: 'create_time',\n      key: 'create_time',\n      render: time => dayjs(time).format('YYYY年 MM月DD日 HH:mm:ss')\n    }, {\n      title: '所属角色',\n      dataIndex: 'role_id',\n      key: 'role_id',\n      render: id => {\n        let result = this.state.roles.find(item => {\n          return item._id === id;\n        });\n        if (result) return result.name;\n      }\n    }, {\n      title: '操作',\n      key: 'option',\n      render: () => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(_Button, {\n          type: \"link\",\n          children: \"\\u4FEE\\u6539\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(_Button, {\n          type: \"link\",\n          children: \"\\u5220\\u9664\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this)\n    }];\n\n    const title = /*#__PURE__*/_jsxDEV(_Button, {\n      onClick: () => {\n        this.setState({\n          isShow: true\n        });\n        /* this.props.form.resetFields() */\n      },\n      type: \"primary\",\n      children: \"\\u521B\\u5EFA\\u7528\\u6237\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 23\n    }, this);\n\n    const user = this.user || {};\n    return /*#__PURE__*/_jsxDEV(_Card, {\n      title: title,\n      children: [/*#__PURE__*/_jsxDEV(_Table, {\n        bordered: true,\n        rowKey: \"_id\",\n        dataSource: users,\n        columns: columns,\n        pagination: {\n          defaultPageSize: PAGE_SIZE\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n        title: user._id ? '修改用户' : '添加用户',\n        visible: isShow,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        children: /*#__PURE__*/_jsxDEV(UserForm, {\n          roles: roles,\n          setForm: form => this.form = form,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this);\n  }\n\n}, _temp)) || _class);\nexport default User;","map":{"version":3,"sources":["C:/Users/PC/Desktop/react-project/src/containers/User/index.jsx"],"names":["React","Component","connect","dayjs","PAGE_SIZE","reqUsers","reqAddOrUpdateUser","UserForm","User","state","users","roles","isShow","getUserList","result","status","data","msg","setState","success","error","handleOk","value","form","getFieldsValue","console","log","resetFields","user","_id","userList","showAdd","handleCancel","componentDidMount","render","columns","title","dataIndex","key","time","format","id","find","item","name","defaultPageSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Table, Modal, Card, message } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport dayjs from 'dayjs'\r\nimport { PAGE_SIZE } from '../../config/index.js'\r\n// import { formateDate } from '../../utils/dateUtils'\r\n// import LinkButton from '../../components/link-button/index'\r\nimport {/* reqDeleteUser, */ reqUsers,reqAddOrUpdateUser } from '../../api/index'\r\nimport UserForm from './user-form'\r\n// 用户路由\r\n@connect(\r\n    state => ({}),\r\n    {}\r\n)\r\nclass User extends Component {\r\n    state = {\r\n        users: [],  //用来存放用户列表的数组\r\n        roles: [],  //所有角色的列表\r\n        isShow: false,  //是否显示对话框\r\n    }\r\n\r\n\r\n    getUserList = async () => {\r\n        let result = await reqUsers()\r\n        const { status, data, msg } = result\r\n        if (status === 0) {\r\n            this.setState({\r\n                users: data.users,\r\n                roles: data.roles\r\n            })\r\n            message.success('获取用户列表成功')\r\n        } else {\r\n            message.error(msg, 1)\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getUserList()\r\n    }\r\n    /* // 根据role的数组，生成包含所有角色名的对象(属性名用角色id值)\r\n    initRoleNames = (roles) => {\r\n      const roleNames = roles.reduce((pre,role) => {\r\n        pre[role._id] = role.name\r\n        return pre\r\n      },{})\r\n      //保存值\r\n      this.roleNames = roleNames\r\n    }\r\n    // 显示修改界面\r\n    showUpdate = (user) => {\r\n      // 保存user的值\r\n      this.user = user\r\n      // 显示界面\r\n      this.setState({\r\n        isShow: true,\r\n      })\r\n    } */\r\n\r\n    // 添加/更新用户\r\n    handleOk = async () => {\r\n\r\n        this.setState({ isShow: false })\r\n        // console.log(this.form);\r\n         // 收集输入数据\r\n         const value = this.form.getFieldsValue()\r\n         console.log(value);\r\n         this.form.resetFields()\r\n   \r\n         // 如果是更新 需要给user指定_id属性\r\n         if (this.user) {\r\n           user._id = this.user._id\r\n         }\r\n         // 提交添加的请求\r\n         let result = await reqAddOrUpdateUser(value)\r\n         const {status,data,msg} = result\r\n         if (status === 0) {\r\n           message.success(`${this.user?'修改':'添加'}用户成功！`)\r\n           let userList = [this.state.users]\r\n           this.setState({\r\n\r\n           })\r\n           // 更新显示的列表\r\n           this.getUserList()\r\n         }else{\r\n            message.error(msg,1)\r\n         }\r\n    }\r\n    // 创建用户\r\n    showAdd = () => {\r\n        // 去除前面的user\r\n        this.user = null\r\n        this.setState({ isShow: true })\r\n    }\r\n\r\n    // 取消的回调\r\n    handleCancel = () => {\r\n        this.setState({ isShow: false })\r\n        this.form.resetFields()\r\n    }\r\n    /* \r\n     // 删除指定用户\r\n     deleteUser = (user) => {\r\n       Modal.confirm({\r\n         title: `确认删除${user.username}吗？`,\r\n         onOk: async () => {\r\n           const result = await reqDeleteUser(user._id)\r\n           if (result.status === 0) {\r\n             message.success('删除用户成功！')\r\n             this.getUsers()\r\n           }\r\n         }\r\n       })\r\n     }\r\n \r\n     UNSAFE_componentWillMount() {\r\n       this.initColumns()\r\n     }\r\n \r\n     componentDidMount(){\r\n       this.getUsers()\r\n     } */\r\n\r\n    render() {\r\n        const { users, roles, isShow } = this.state\r\n        const columns = [\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'username',\r\n                key: 'username',\r\n            },\r\n            {\r\n                title: '邮箱',\r\n                dataIndex: 'email',\r\n                key: 'email',\r\n            },\r\n            {\r\n                title: '电话',\r\n                dataIndex: 'phone',\r\n                key: 'phone',\r\n            },\r\n            {\r\n                title: '注册时间',\r\n                dataIndex: 'create_time',\r\n                key: 'create_time',\r\n                render: time => dayjs(time).format('YYYY年 MM月DD日 HH:mm:ss')\r\n            },\r\n            {\r\n                title: '所属角色',\r\n                dataIndex: 'role_id',\r\n                key: 'role_id',\r\n                render: (id) => {\r\n                    let result = this.state.roles.find((item) => {\r\n                        return item._id === id\r\n                    })\r\n                    if (result) return result.name\r\n                }\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'option',\r\n                render: () => (\r\n                    <div>\r\n                        <Button\r\n                            type='link'\r\n                        >修改\r\n                  </Button>\r\n                        <Button\r\n                            type='link'\r\n                        >删除\r\n                  </Button>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n        const title = <Button onClick={()=>{this.setState({isShow:true});/* this.props.form.resetFields() */}}\r\n            type='primary'>创建用户</Button>\r\n        const user = this.user || {}\r\n        return (\r\n            <Card title={title}>\r\n                <Table\r\n                    bordered\r\n                    rowKey='_id'\r\n                    dataSource={users}\r\n                    columns={columns}\r\n                    pagination={{ defaultPageSize: PAGE_SIZE }} />\r\n\r\n                <Modal\r\n                    title={user._id ? '修改用户' : '添加用户'}\r\n                    visible={isShow}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}>\r\n                    <UserForm roles={roles}\r\n                        setForm={form => this.form = form}\r\n                        user={user} />\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nexport default User\r\n"]},"metadata":{},"sourceType":"module"}