{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react-project\\\\src\\\\containers\\\\Role\\\\index.jsx\",\n    _dec,\n    _class,\n    _temp;\n\nimport React, { PureComponent } from 'react';\nimport { reqRoles, reqAddRole\n/* reqUpdateRole */\n} from '../../api/index';\nimport dayjs from 'dayjs';\nimport ADDForm from './add-form';\nimport AuthForm from './auth-form';\nimport { connect } from 'react-redux'; // 角色路由\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet Role = (_dec = connect(state => ({}), {}), _dec(_class = (_temp = class Role extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roles: [],\n      //用来存放各种角色的数组\n      role: {},\n      //选中的role\n      isShowAdd: false,\n      //是否显示添加界面\n      isShowAuth: false //是否显示设置权限界面\n\n    };\n\n    this.getRoles = async () => {\n      const result = await reqRoles();\n\n      if (result.status === 0) {\n        const roles = result.data;\n        this.setState({\n          roles\n        });\n      }\n    };\n\n    this.handleOk = () => {\n      console.log(\"哈哈\"); //进行表单验证\n      //   console.log(this.form);\n\n      this.form.validateFields().then(async values => {\n        //隐藏确认框\n        this.setState({\n          isShowAdd: false\n        }); //收集输入数据\n\n        const {\n          roleName\n        } = values;\n        this.form.resetFields(); // console.log(roleName);\n        //发请求添加\n\n        const result = await reqAddRole(roleName);\n        const {\n          data,\n          msg,\n          status\n        } = result;\n\n        if (status === 0) {\n          _message.success('新增角色成功');\n\n          this.getRoles();\n          this.setState({\n            isShowAdd: false\n          }); // 新产生的角色\n\n          const role = data; // 更新roles状态  更新后的数据和之前的状态数据有关\n\n          /* this.setState(state=>({\r\n            roles: [...state.roles,role],\r\n            \r\n          })) */\n        } else {\n          _message.error(msg, 1);\n        }\n      }).catch(errorInfo => {\n        alert('出错', errorInfo);\n      });\n    };\n\n    this.handleCancel = () => {\n      this.form.resetFields();\n      this.setState({\n        isShowAdd: false\n      });\n    };\n\n    this.updateRole = async () => {\n      /*  // 隐藏确认框\r\n       this.setState({\r\n         isShowAuth: false\r\n       })\r\n       const role = this.state.role\r\n       // 得到最新的menus\r\n       const menus = this.auth.current.getMenus()\r\n       role.menus = menus\r\n       role.auth_time = Date.now()\r\n       role.auth_name = memoryUtils.user.username\r\n            // 请求更新\r\n       const result = await reqUpdateRole(role)\r\n       if (result.status === 0) {\r\n         // 如果当前更新的是自己角色的权限 需要强制退出\r\n         if (role._id === memoryUtils.user.role_id) {\r\n           // 清空本地存储\r\n           memoryUtils.user = {}\r\n           storageUtils.removeUser()\r\n           this.props.history.replace('/login')\r\n           message.success('用户权限已更新,请重新登录!')\r\n         } else {\r\n           message.success('设置权限成功')\r\n           // 获取显示列表的两种方式\r\n           // this.getRoles()\r\n           this.setState({\r\n             roles: [...this.state.roles]\r\n           })\r\n         }\r\n              \r\n       } */\n    };\n\n    this.handleCancelUpdate = () => {\n      this.setState({\n        isShowAuth: false\n      }); // this.form.resetFields()\n    };\n\n    this.showAuth = id => {\n      const {\n        roles\n      } = this.state;\n      let result = roles.find(item => {\n        return item._id === id;\n      });\n      if (result) this.setState({\n        checkedKeys: result.menus\n      });\n      this.setState({\n        isShowAuth: true,\n        _id: id\n      });\n    };\n\n    this.auth = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    //发送请求获取角色列表数据\n    this.getRoles();\n  } // 获取角色的列表数据\n\n\n  render() {\n    const {\n      roles,\n      role,\n      isShowAdd,\n      isShowAuth\n    } = this.state;\n    const columns = [{\n      title: '角色名称',\n      dataIndex: 'name',\n      key: 'name'\n    }, {\n      title: '创建时间',\n      dataIndex: 'create_time',\n      key: 'create_time',\n      render: time => dayjs(time).format('YYYY年 MM月DD日 HH:mm:ss')\n    }, {\n      title: '授权时间',\n      dataIndex: 'auth_time',\n      key: 'auth_time',\n      render: time => time ? dayjs(time).format('YYYY年 MM月DD日 HH:mm:ss') : ''\n    }, {\n      title: '授权人',\n      dataIndex: 'auth_name',\n      key: 'auth_name'\n    }, {\n      title: '操作',\n      key: 'option',\n      render: item => /*#__PURE__*/_jsxDEV(_Button, {\n        type: \"link\",\n        onClick: () => {\n          this.showAuth(item._id);\n        },\n        children: \"\\u8BBE\\u7F6E\\u6743\\u9650\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 35\n      }, this)\n    }];\n\n    const title = /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(_Button, {\n        onClick: () => {\n          this.setState({\n            isShowAdd: true\n          });\n        },\n        type: \"primary\",\n        children: \"\\u521B\\u5EFA\\u89D2\\u8272\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), \" \\xA0 \\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(_Card, {\n      title: title,\n      children: [/*#__PURE__*/_jsxDEV(_Table, {\n        bordered: true,\n        rowKey: \"_id\",\n        dataSource: roles,\n        columns: columns\n        /* pagination={{ defaultPageSize: 3 }} */\n        ,\n        rowSelection: {\n          type: 'radio',\n          selectedRowKeys: [role._id],\n          // 当选择某个radio的回调\n          onSelect: role => {\n            this.setState({\n              role\n            });\n          }\n        },\n        onRow: this.onRow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n        title: \"\\u6DFB\\u52A0\\u89D2\\u8272\",\n        visible: isShowAdd,\n        onOk: this.handleOk,\n        onText: \"\\u786E\\u8BA4\",\n        cancelText: \"\\u53D6\\u6D88\",\n        onCancel: this.handleCancel,\n        children: /*#__PURE__*/_jsxDEV(ADDForm, {\n          setForm: form => this.form = form\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this);\n  }\n\n}, _temp)) || _class);\nexport default Role;","map":{"version":3,"sources":["C:/Users/PC/Desktop/react-project/src/containers/Role/index.jsx"],"names":["React","PureComponent","reqRoles","reqAddRole","dayjs","ADDForm","AuthForm","connect","Role","state","constructor","props","roles","role","isShowAdd","isShowAuth","getRoles","result","status","data","setState","handleOk","console","log","form","validateFields","then","values","roleName","resetFields","msg","success","error","catch","errorInfo","alert","handleCancel","updateRole","handleCancelUpdate","showAuth","id","find","item","_id","checkedKeys","menus","auth","createRef","componentDidMount","render","columns","title","dataIndex","key","time","format","type","selectedRowKeys","onSelect","onRow"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport { Card, Button, Table, Modal, message,Tree } from 'antd'\r\nimport { reqRoles, reqAddRole,/* reqUpdateRole */ } from '../../api/index'\r\nimport dayjs from 'dayjs'\r\nimport ADDForm from './add-form'\r\nimport AuthForm from './auth-form'\r\nimport { connect } from 'react-redux'\r\n\r\n// 角色路由\r\n@connect(\r\n    state => ({}),\r\n    {}\r\n)\r\nclass Role extends PureComponent {\r\n    state = {\r\n        roles: [],  //用来存放各种角色的数组\r\n        role: {},  //选中的role\r\n        isShowAdd: false,  //是否显示添加界面\r\n        isShowAuth: false, //是否显示设置权限界面\r\n    }\r\n    constructor(props) {\r\n        super(props)\r\n        this.auth = React.createRef()\r\n    }\r\n    componentDidMount() {\r\n        //发送请求获取角色列表数据\r\n        this.getRoles()\r\n    }\r\n    // 获取角色的列表数据\r\n    getRoles = async () => {\r\n        const result = await reqRoles()\r\n        if (result.status === 0) {\r\n            const roles = result.data\r\n            this.setState({ roles })\r\n        }\r\n    }\r\n\r\n    /* onRow = (role) => {\r\n        return {\r\n            onClick: event => {\r\n                this.setState({ role })\r\n            }\r\n        }\r\n    } */\r\n\r\n    // 添加角色成功的回调函数\r\n    handleOk = () => {\r\n        console.log(\"哈哈\");\r\n        //进行表单验证\r\n        //   console.log(this.form);\r\n        this.form.validateFields()\r\n            .then(async (values) => {\r\n                //隐藏确认框\r\n                this.setState({ isShowAdd: false })\r\n                //收集输入数据\r\n                const { roleName } = values\r\n                this.form.resetFields()\r\n                // console.log(roleName);\r\n                //发请求添加\r\n                const result = await reqAddRole(roleName)\r\n                const { data, msg, status } = result\r\n                if (status === 0) {\r\n                    message.success('新增角色成功')\r\n                    this.getRoles()\r\n                    this.setState({ isShowAdd: false })\r\n                    // 新产生的角色\r\n                    const role = data\r\n                    // 更新roles状态  更新后的数据和之前的状态数据有关\r\n                    /* this.setState(state=>({\r\n                      roles: [...state.roles,role],\r\n                      \r\n                    })) */\r\n                } else {\r\n                    message.error(msg, 1)\r\n                }\r\n            }\r\n            )\r\n            .catch(errorInfo => {\r\n                alert('出错', errorInfo)\r\n            });\r\n    }\r\n\r\n    //取消添加角色的回调\r\n    handleCancel = () => {\r\n        this.form.resetFields()\r\n        this.setState({ isShowAdd: false })\r\n    }\r\n\r\n    // 更新角色的回调函数\r\n    updateRole = async () => {\r\n        /*  // 隐藏确认框\r\n         this.setState({\r\n           isShowAuth: false\r\n         })\r\n         const role = this.state.role\r\n         // 得到最新的menus\r\n         const menus = this.auth.current.getMenus()\r\n         role.menus = menus\r\n         role.auth_time = Date.now()\r\n         role.auth_name = memoryUtils.user.username\r\n   \r\n         // 请求更新\r\n         const result = await reqUpdateRole(role)\r\n         if (result.status === 0) {\r\n           // 如果当前更新的是自己角色的权限 需要强制退出\r\n           if (role._id === memoryUtils.user.role_id) {\r\n             // 清空本地存储\r\n             memoryUtils.user = {}\r\n             storageUtils.removeUser()\r\n             this.props.history.replace('/login')\r\n             message.success('用户权限已更新,请重新登录!')\r\n           } else {\r\n             message.success('设置权限成功')\r\n             // 获取显示列表的两种方式\r\n             // this.getRoles()\r\n             this.setState({\r\n               roles: [...this.state.roles]\r\n             })\r\n           }\r\n   \r\n           \r\n         } */\r\n    }\r\n\r\n    // 取消更新角色的回调\r\n    handleCancelUpdate = () => {\r\n        this.setState({ isShowAuth: false })\r\n        // this.form.resetFields()\r\n    }\r\n    //用于展示授权弹窗\r\n    showAuth = (id) => {\r\n        const { roles } = this.state\r\n        let result = roles.find((item) => {\r\n            return item._id === id\r\n        })\r\n        if (result) this.setState({ checkedKeys: result.menus })\r\n        this.setState({ isShowAuth: true, _id: id })\r\n    }\r\n\r\n    render() {\r\n        const { roles, role, isShowAdd, isShowAuth } = this.state\r\n        const columns = [\r\n            {\r\n                title: '角色名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'create_time',\r\n                key: 'create_time',\r\n                render: (time) => dayjs(time).format('YYYY年 MM月DD日 HH:mm:ss')\r\n            },\r\n            {\r\n                title: '授权时间',\r\n                dataIndex: 'auth_time',\r\n                key: 'auth_time',\r\n                render: (time) => time ? dayjs(time).format('YYYY年 MM月DD日 HH:mm:ss') : ''\r\n            },\r\n            {\r\n                title: '授权人',\r\n                dataIndex: 'auth_name',\r\n                key: 'auth_name',\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'option',\r\n                render: (item) => <Button type='link' onClick={() => { this.showAuth(item._id) }}>设置权限</Button>\r\n            }\r\n        ];\r\n        const title = (\r\n            <span>\r\n                <Button onClick={() => { this.setState({ isShowAdd: true }) }} type='primary'>创建角色</Button> &nbsp; &nbsp;\r\n                {/* <Button type='primary' disabled={!role._id}\r\n                    onClick={() => { this.setState({ isShowAuth: true }) }} >设置角色权限</Button> */}\r\n            </span>\r\n        )\r\n        return (\r\n            <Card title={title}>\r\n                <Table\r\n                    bordered\r\n                    rowKey='_id'\r\n                    dataSource={roles}\r\n                    columns={columns}\r\n                    /* pagination={{ defaultPageSize: 3 }} */\r\n                    rowSelection={{\r\n                        type: 'radio', selectedRowKeys: [role._id],\r\n                        // 当选择某个radio的回调\r\n                        onSelect: (role) => { this.setState({ role }) }\r\n                    }}\r\n                    onRow={this.onRow} />\r\n                <Modal\r\n                    title='添加角色'\r\n                    visible={isShowAdd}\r\n                    onOk={this.handleOk}\r\n                    onText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <ADDForm setForm={form => this.form = form} />\r\n                </Modal>\r\n               {/*  <Modal\r\n                    onText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                    title='设置角色权限'\r\n                    visible={isShowAuth}\r\n                    onOk={this.updateRole}\r\n                    onCancel={this.handleCancelUpdate}\r\n                >\r\n                    <AuthForm ref={this.auth} role={role} />\r\n                </Modal> */}\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nexport default Role"]},"metadata":{},"sourceType":"module"}