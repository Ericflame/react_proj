{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\react-project\\\\src\\\\containers\\\\Role\\\\index.jsx\",\n    _dec,\n    _class,\n    _temp;\n\nimport React, { PureComponent } from 'react';\nimport { reqRoles\n/* ,reqAddRole,reqUpdateRole */\n} from '../../api/index';\nimport dayjs from 'dayjs';\nimport ADDForm from './add-form';\nimport AuthForm from './auth-form';\nimport { connect } from 'react-redux'; // 角色路由\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet Role = (_dec = connect(state => ({}), {}), _dec(_class = (_temp = class Role extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roles: [],\n      //用来存放各种角色的数组\n      role: {},\n      //选中的role\n      isShowAdd: false,\n      //是否显示添加界面\n      isShowAuth: false //是否显示设置权限界面\n\n    };\n\n    this.getRoles = async () => {\n      const result = await reqRoles();\n\n      if (result.status === 0) {\n        const roles = result.data;\n        this.setState({\n          roles\n        });\n      }\n    };\n\n    this.onRow = role => {\n      return {\n        onClick: event => {\n          this.setState({\n            role\n          });\n        }\n      };\n    };\n\n    this.handleOk = () => {\n      /*   //进行表单验证\r\n      //   console.log(this.form);\r\n      this.form.validateFields()\r\n      .then(async (values)=>{\r\n          //隐藏确认框\r\n          this.setState({isShowAdd:false})\r\n          //收集输入数据\r\n          const {roleName} = values\r\n          this.form.resetFields()\r\n          //发请求添加\r\n          const result = await reqAddRole(roleName)\r\n          if (result.status===0) {\r\n          //   this.getRoles()\r\n          // 新产生的角色\r\n          const role = result.data\r\n          // 更新roles状态  更新后的数据和之前的状态数据有关\r\n          this.setState(state=>({\r\n            roles: [...state.roles,role]\r\n          }))\r\n          } else {\r\n            message.error('添加角色失败')\r\n          }\r\n        }\r\n      )\r\n      .catch(errorInfo => {\r\n          alert('出错',errorInfo)\r\n        }); */\n    };\n\n    this.handleCancel = () => {\n      /* this.form.resetFields()\r\n      this.setState({isShowAdd:false}) */\n    };\n\n    this.updateRole = async () => {\n      /*  // 隐藏确认框\r\n       this.setState({\r\n         isShowAuth: false\r\n       })\r\n       const role = this.state.role\r\n       // 得到最新的menus\r\n       const menus = this.auth.current.getMenus()\r\n       role.menus = menus\r\n       role.auth_time = Date.now()\r\n       role.auth_name = memoryUtils.user.username\r\n         // 请求更新\r\n       const result = await reqUpdateRole(role)\r\n       if (result.status === 0) {\r\n         // 如果当前更新的是自己角色的权限 需要强制退出\r\n         if (role._id === memoryUtils.user.role_id) {\r\n           // 清空本地存储\r\n           memoryUtils.user = {}\r\n           storageUtils.removeUser()\r\n           this.props.history.replace('/login')\r\n           message.success('用户权限已更新,请重新登录!')\r\n         } else {\r\n           message.success('设置权限成功')\r\n           // 获取显示列表的两种方式\r\n           // this.getRoles()\r\n           this.setState({\r\n             roles: [...this.state.roles]\r\n           })\r\n         }\r\n           \r\n       } */\n    };\n\n    this.handleCancelUpdate = () => {\n      this.setState({\n        isShowAuth: false\n      }); // this.form.resetFields()\n    };\n\n    this.auth = /*#__PURE__*/React.createRef();\n  } // 获取角色的列表数据\n\n\n  componentDidMount() {\n    //发送请求获取角色列表数据\n    this.getRoles();\n  }\n\n  render() {\n    const {\n      roles,\n      role,\n      isShowAdd,\n      isShowAuth\n    } = this.state;\n    const columns = [{\n      title: '角色名称',\n      dataIndex: 'name'\n    }, {\n      title: '创建时间',\n      dataIndex: 'create_time',\n      render: create_time => dayjs(create_time).format('YYYY年 MM月DD日 HH:mm:ss')\n    }, // dayjs().format('YYYY年 MM月DD日 HH:mm:ss')\n    {\n      title: '授权时间',\n      dataIndex: 'auth_time',\n      render: time => time ? dayjs(time).format('YYYY年 MM月DD日 HH:mm:ss') : ''\n    }, {\n      title: '授权人',\n      dataIndex: 'auth_name'\n    }];\n\n    const title = /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(_Button, {\n        /* onClick={()=>{this.setState({isShowAdd: true})}} */\n        type: \"primary\",\n        children: \"\\u521B\\u5EFA\\u89D2\\u8272\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this), \" \\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(_Button, {\n        type: \"primary\"\n        /* disabled={!role._id} */\n\n        /* onClick={()=>{this.setState({isShowAuth: true})}} */\n        ,\n        children: \"\\u8BBE\\u7F6E\\u89D2\\u8272\\u6743\\u9650\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(_Card, {\n      title: title,\n      children: [/*#__PURE__*/_jsxDEV(_Table, {\n        bordered: true // rowKey='_id'\n        // dataSource={roles}\n        ,\n        columns: columns,\n        pagination: {\n          defaultPageSize: 3\n        },\n        rowSelection: {\n          type: 'radio'\n          /* selectedRowKeys:[role._id], */\n          // 当选择某个radio的回调\n          //   onSelect: (role)=>{this.setState({role})}\n\n        },\n        onRow: this.onRow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n        title: \"\\u6DFB\\u52A0\\u89D2\\u8272\" // visible={isShowAdd}\n        ,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        children: /*#__PURE__*/_jsxDEV(ADDForm\n        /* setForm={form=>this.form = form} */\n        , {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n        title: \"\\u8BBE\\u7F6E\\u89D2\\u8272\\u6743\\u9650\" //   visible={isShowAuth}\n        ,\n        onOk: this.updateRole,\n        onCancel: this.handleCancelUpdate,\n        children: /*#__PURE__*/_jsxDEV(AuthForm\n        /* ref={this.auth} role={role} */\n        , {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }, this);\n  }\n\n}, _temp)) || _class);\nexport default Role;","map":{"version":3,"sources":["C:/Users/PC/Desktop/react-project/src/containers/Role/index.jsx"],"names":["React","PureComponent","reqRoles","dayjs","ADDForm","AuthForm","connect","Role","state","constructor","props","roles","role","isShowAdd","isShowAuth","getRoles","result","status","data","setState","onRow","onClick","event","handleOk","handleCancel","updateRole","handleCancelUpdate","auth","createRef","componentDidMount","render","columns","title","dataIndex","create_time","format","time","defaultPageSize","type"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport { Card , Button, Table,Modal, message} from 'antd'\r\nimport {reqRoles/* ,reqAddRole,reqUpdateRole */} from '../../api/index'\r\nimport dayjs from 'dayjs'\r\nimport ADDForm from './add-form'\r\nimport AuthForm from './auth-form'\r\nimport { connect } from 'react-redux'\r\n\r\n// 角色路由\r\n@connect(\r\n    state =>({}),\r\n    {}\r\n)\r\nclass Role extends PureComponent {\r\n    state = {\r\n      roles: [],  //用来存放各种角色的数组\r\n      role: {},  //选中的role\r\n      isShowAdd: false,  //是否显示添加界面\r\n      isShowAuth: false, //是否显示设置权限界面\r\n    }\r\n\r\n\r\n    constructor(props){\r\n      super(props)\r\n      this.auth = React.createRef()\r\n    }\r\n    // 获取角色的列表数据\r\n    getRoles = async () => {\r\n      const result = await reqRoles()\r\n      if (result.status === 0) {\r\n        const roles = result.data\r\n        this.setState({roles})\r\n      }\r\n    }\r\n\r\n    onRow = (role) => {\r\n      return {\r\n        onClick: event => {\r\n          this.setState({role})\r\n        }\r\n      }\r\n    }\r\n\r\n    // 添加角色成功的回调函数\r\n    handleOk= () => {\r\n    /*   //进行表单验证\r\n    //   console.log(this.form);\r\n    this.form.validateFields()\r\n    .then(async (values)=>{\r\n        //隐藏确认框\r\n        this.setState({isShowAdd:false})\r\n        //收集输入数据\r\n        const {roleName} = values\r\n        this.form.resetFields()\r\n        //发请求添加\r\n        const result = await reqAddRole(roleName)\r\n        if (result.status===0) {\r\n        //   this.getRoles()\r\n        // 新产生的角色\r\n        const role = result.data\r\n        // 更新roles状态  更新后的数据和之前的状态数据有关\r\n        this.setState(state=>({\r\n          roles: [...state.roles,role]\r\n        }))\r\n        } else {\r\n          message.error('添加角色失败')\r\n        }\r\n      }\r\n    )\r\n    .catch(errorInfo => {\r\n        alert('出错',errorInfo)\r\n      }); */\r\n    }\r\n\r\n    //取消添加角色的回调\r\n    handleCancel = () => {\r\n      /* this.form.resetFields()\r\n      this.setState({isShowAdd:false}) */\r\n    }\r\n\r\n    // 更新角色的回调函数\r\n    updateRole = async () => {\r\n     /*  // 隐藏确认框\r\n      this.setState({\r\n        isShowAuth: false\r\n      })\r\n      const role = this.state.role\r\n      // 得到最新的menus\r\n      const menus = this.auth.current.getMenus()\r\n      role.menus = menus\r\n      role.auth_time = Date.now()\r\n      role.auth_name = memoryUtils.user.username\r\n\r\n      // 请求更新\r\n      const result = await reqUpdateRole(role)\r\n      if (result.status === 0) {\r\n        // 如果当前更新的是自己角色的权限 需要强制退出\r\n        if (role._id === memoryUtils.user.role_id) {\r\n          // 清空本地存储\r\n          memoryUtils.user = {}\r\n          storageUtils.removeUser()\r\n          this.props.history.replace('/login')\r\n          message.success('用户权限已更新,请重新登录!')\r\n        } else {\r\n          message.success('设置权限成功')\r\n          // 获取显示列表的两种方式\r\n          // this.getRoles()\r\n          this.setState({\r\n            roles: [...this.state.roles]\r\n          })\r\n        }\r\n\r\n        \r\n      } */\r\n    }\r\n\r\n    // 取消更新角色的回调\r\n    handleCancelUpdate = () => {\r\n      this.setState({isShowAuth:false})\r\n      // this.form.resetFields()\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n      //发送请求获取角色列表数据\r\n      this.getRoles()\r\n    }\r\n    render() {\r\n        const {roles,role, isShowAdd,isShowAuth} = this.state\r\n        const columns = [\r\n            {\r\n              title: '角色名称',\r\n              dataIndex: 'name',\r\n            },\r\n            {\r\n              title: '创建时间',\r\n              dataIndex: 'create_time',\r\n              render: (create_time) => dayjs(create_time).format('YYYY年 MM月DD日 HH:mm:ss')\r\n            },\r\n            // dayjs().format('YYYY年 MM月DD日 HH:mm:ss')\r\n            {\r\n              title: '授权时间',\r\n              dataIndex: 'auth_time',\r\n              render: (time) => time ? dayjs(time).format('YYYY年 MM月DD日 HH:mm:ss'):''\r\n            },\r\n            {\r\n              title: '授权人',\r\n              dataIndex: 'auth_name'\r\n            }\r\n          ] \r\n        const title = (\r\n          <span>\r\n            <Button /* onClick={()=>{this.setState({isShowAdd: true})}} */ type='primary'>创建角色</Button> &nbsp; &nbsp;\r\n            <Button type='primary' /* disabled={!role._id} */\r\n             /* onClick={()=>{this.setState({isShowAuth: true})}} */ >设置角色权限</Button>\r\n          </span>\r\n        )\r\n        return (\r\n          <Card title={title}>\r\n            <Table \r\n            bordered  \r\n            // rowKey='_id'\r\n            // dataSource={roles}\r\n            columns={columns}\r\n            pagination={{defaultPageSize: 3}}\r\n            rowSelection={{type:'radio',/* selectedRowKeys:[role._id], */\r\n              // 当选择某个radio的回调\r\n            //   onSelect: (role)=>{this.setState({role})}\r\n            }}\r\n            onRow={this.onRow} />\r\n            <Modal \r\n            title='添加角色'\r\n            // visible={isShowAdd}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            >\r\n              <ADDForm /* setForm={form=>this.form = form} */ />\r\n            </Modal>\r\n            <Modal \r\n              title='设置角色权限'\r\n            //   visible={isShowAuth}\r\n              onOk={this.updateRole}\r\n              onCancel={this.handleCancelUpdate}\r\n            >\r\n              <AuthForm /* ref={this.auth} role={role} *//>\r\n            </Modal>\r\n          </Card>\r\n        )\r\n    }\r\n}\r\nexport default Role"]},"metadata":{},"sourceType":"module"}